# baseURI: http://server.topbraidlive.org/system-applications/scheduler
# imports: http://server.topbraidlive.org/system-applications/tbladmin
# imports: http://spinrdf.org/spl
# imports: http://topbraid.org/scheduler
# imports: http://uispin.org/ui

@prefix acjob: <http://evn.topbraidlive.org/tagger/acjob#> .
@prefix acpp: <http://topbraid.org/nlp/autoclassifier-preproc#> .
@prefix adminguide: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix autotagger: <http://evn.topbraidlive.org/autotagger#> .
@prefix cfg: <http://server.topbraidlive.org/web/2009/config#> .
@prefix charts: <http://uispin.org/charts#> .
@prefix compliance: <http://topbraid.org/compliance#> .
@prefix composite: <http://www.topbraid.org/2007/05/composite.owl#> .
@prefix conceptmatch: <http://topbraid.org/conceptmatch#> .
@prefix config: <http://server.topbraidlive.org/dynamic/config#> .
@prefix config-importers: <http://edg.topbraidlive.org/config/importers#> .
@prefix contact: <http://www.w3.org/2000/10/swap/pim/contact#> .
@prefix core-soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix corpus: <http://topbraid.org/corpus#> .
@prefix corpusprojects: <http://topbraid.org/corpus-projects#> .
@prefix crosswalk: <http://topbraid.org/crosswalk#> .
@prefix crosswalk.spin: <http://topbraid.org/crosswalk.spin#> .
@prefix crosswalkapp: <http://topbraid.org/swa/crosswalkapp#> .
@prefix crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#> .
@prefix css: <http://uispin.org/css#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dashboard: <http://example.org/dashboard#> .
@prefix datagraph: <http://teamwork.topbraidlive.org/datagraph/datagraphprojects#> .
@prefix dataset: <http://teamwork.topbraidlive.org/dataset#> .
@prefix datasetapp: <http://topbraid.org/swa/datasetapp#> .
@prefix datasetviewer: <http://topbraid.org/swa/datasetviewer#> .
@prefix datatype: <http://qudt.org/vocab/datatype/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcam: <http://purl.org/dc/dcam/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix ddl: <http://edg.topbraidlive.org/1.0/importers/ddl#> .
@prefix default: <http://uispin.org/default#> .
@prefix defaultapp: <http://topbraid.org/swa/defaultapp#> .
@prefix deployProjectToServer: <http://server.topbraidlive.org/doc/deployProjectToServer#> .
@prefix devguide: <http://evn.topbraidlive.org/evndoc.www/devguide#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix doc: <http://www.w3.org/2000/10/swap/pim/doc#> .
@prefix document: <http://topbraid.org/document#> .
@prefix documents: <http://edg.topbraid.solutions/1.0/shapes/documents#> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix edg: <http://edg.topbraid.solutions/model/> .
@prefix edg-config: <http://edg.ext.topbraidlive.org/schema/config/importers#> .
@prefix edg-importer: <http://edg.topbraidlive.org/importer/> .
@prefix edg-qa: <http://edg.topbraidlive.org/utility/qa/> .
@prefix edg.c: <http://edg.topbraid.solutions/controller/> .
@prefix edg.global: <urn:x-evn-global:> .
@prefix edg.glossary: <http://edg.topbraid.solutions/glossary/> .
@prefix edg.sqoop: <http://edg.topbraid.solutions/model/sqoop/> .
@prefix edg.v: <http://edg.topbraid.solutions/view/> .
@prefix edgproduct: <http://edg.topbraidlive.org/edgproduct#> .
@prefix eeh-lib: <http://www.environmenthub.no/spin/1.0/eeh-lib#> .
@prefix eeh-reportlib: <http://www.environmenthub.no/spin/1.0/eeh-reportlib#> .
@prefix elements: <http://purl.org/dc/elements/1.1/> .
@prefix email: <http://topbraid.org/email#> .
@prefix evn: <http://topbraid.org/evn/evn#> .
@prefix evnAdminIndex: <http://evn.topbraidlive.org/evnAdminIndex#> .
@prefix evnIntro: <http://evn.topbraidlive.org/evndoc.www/evnIntro#> .
@prefix evndoc: <http://evn.topbraidlive.org/evndoc.www/evndoc#> .
@prefix evnimport: <http://evn.topbraidlive.org/uispin/evnimport#> .
@prefix evninstallguide: <http://teamwork.topbraidlive.org/doc/evninstallguide#> .
@prefix evnui: <http://evn.topbraidlive.org/ui#> .
@prefix ex: <http://example.org/> .
@prefix extjs: <http://uispin.com/extjs#> .
@prefix flow: <http://www.w3.org/2005/01/wf/flow#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix formTemplate: <http://teamwork.topbraidlive.org/system/formTemplate#> .
@prefix forms: <http://www.topbraid.org/2007/01/forms.owl#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix gettingstarted: <http://evn.topbraidlive.org/evndoc.www/gettingstarted#> .
@prefix glossary: <http://evn.topbraidlive.org/evndoc.www/glossary#> .
@prefix governance: <http://topbraid.org/teamworkgovernance.ui#> .
@prefix gr: <http://purl.org/goodrelations/v1#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix graphql.search: <http://teamwork.topbraidlive.org/graphql.search#> .
@prefix html: <http://uispin.org/html#> .
@prefix imported: <http://topbraid.org/imported#> .
@prefix inference: <http://www.topbraid.org/2007/06/inference.owl#> .
@prefix jdbc: <http://edg.topbraidlive.org/1.0/importers/jdbc#> .
@prefix json: <http://topbraid.org/json#> .
@prefix kennedys: <http://topbraid.org/examples/kennedys#> .
@prefix let: <http://uispin.org/let#> .
@prefix letrs: <http://uispin.org/letrs#> .
@prefix lib-importer: <http://edg.topbraid.solutions/importer/lib#> .
@prefix lineage-transform: <http://edg.topbraid.solutions/transform/importer/lineage#> .
@prefix list: <http://jena.hpl.hp.com/ARQ/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix metadata: <http://topbraid.org/metadata#> .
@prefix ontologyprojects: <http://teamwork.topbraidlive.org/ontologyprojects#> .
@prefix ontologyviewer: <http://topbraid.org/swa/ontologyviewer#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix permissionGroupMgmt: <http://server.topbraidlive.org/doc/permissionGroupMgmt#> .
@prefix pg: <http://server.topbraidlive.org/web/2013/permissiongroups#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix provo: <http://www.w3.org/ns/prov#> .
@prefix proxy-lineage: <http://edg.topbraid.solutions/proxy/importer/lineage#> .
@prefix quantity: <http://qudt.org/vocab/quantity/> .
@prefix qudd: <http://qudt.org/schema/datastructure/> .
@prefix quds: <http://qudt.org/schema/datastructure/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt-refdata: <http://qudt.org/vocab/refdata/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix raci: <http://topbraid.org/raci#> .
@prefix raci.spin: <http://topbraid.org/raci.spin#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdm: <http://rdm.topbraidlive.org/rdm/> .
@prefix rdmapp: <http://rdm.topbraidlive.org/rdmapp#> .
@prefix rdmfact: <http://topbraid.org/rdmfact#> .
@prefix rdmprojects: <http://rdm.topbraidlive.org/rdmprojects#> .
@prefix rdmviewer: <http://rdm.topbraidlive.org/rdmviewer#> .
@prefix saf: <http://topbraid.org/saf/> .
@prefix safconfig: <http://topbraid.org/safconfig/> .
@prefix safindex: <http://topbraid.org/safindex#> .
@prefix safm: <http://saf.topbraidlive.org/metaschema/> .
@prefix savedQueries: <http://teamwork.topbraidlive.org/ui/savedQueries#> .
@prefix scheduler: <http://topbraid.org/scheduler#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix search: <http://topbraid.org/search#> .
@prefix search.spin: <http://topbraid.org/search.spin#> .
@prefix server: <http://server.topbraidlive.org/server.ui#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shapesgraph: <http://teamwork.topbraidlive.org/shapesgraph/shapesgraphprojects#> .
@prefix sharepoint: <http://topbraid.org/sharepoint#> .
@prefix sharepoint.spin: <http://topbraid.org/sharepoint.spin#> .
@prefix sioc: <http://rdfs.org/sioc/ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosapp: <http://evn.topbraidlive.org/uiplugins#> .
@prefix skosshapes: <http://topbraid.org/skos.shapes#> .
@prefix skostemplate: <http://topbraid.org/spin/skostemplates#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix softwareprojects: <http://teamwork.topbraidlive.org/software/softwareprojects#> .
@prefix solr: <http://topbraid.org/solr#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparqlmotionlib-swp: <http://topbraid.org/sparqlmotionlib-swp#> .
@prefix sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#> .
@prefix spell: <http://topbraid.org/spellcheckresults#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spin.ui: <http://spinrdf.org/spin.ui#> .
@prefix spinmap: <http://spinrdf.org/spinmap#> .
@prefix spinmapl: <http://topbraid.org/spin/spinmapl#> .
@prefix spinx: <http://spinrdf.org/spinx#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix spl-dynamic-ranges: <http://spinrdf.org/spl-dynamic-ranges#> .
@prefix spr: <http://spinrdf.org/spr#> .
@prefix spra: <http://spinrdf.org/spra#> .
@prefix ss: <http://www.topbraidcomposer.org/owl/2006/08/spreadsheets.owl#> .
@prefix stats: <http://topbraid.org/statistics#> .
@prefix status: <http://topbraid.org/status#> .
@prefix style: <http://uispin.org/style#> .
@prefix svg: <http://uispin.org/svg#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix swaclasses: <http://topbraid.org/swaclasses#> .
@prefix swadoc: <http://topbraid.org/swadoc#> .
@prefix swaeditor: <http://topbraid.org/swaeditor#> .
@prefix swaowl: <http://topbraid.org/swaowl#> .
@prefix swash: <http://topbraid.org/swash#> .
@prefix swashacl: <http://topbraid.org/swashacl#> .
@prefix swauml: <http://topbraid.org/swauml#> .
@prefix swon: <http://uispin.org/swon#> .
@prefix sxml: <http://topbraid.org/sxml#> .
@prefix tables: <http://topbraid.org/tables#> .
@prefix tablesmap: <http://topbraid.org/spin/tablesmap#> .
@prefix tagger: <http://evn.topbraidlive.org/tagger#> .
@prefix taggerprojects: <http://evn.topbraidlive.org/taggerprojects#> .
@prefix taggerspin: <http://evn.topbraidlive.org/taggerspin#> .
@prefix taggerui: <http://evn.topbraidlive.org/taggerui#> .
@prefix task: <http://topbraid.org/task#> .
@prefix tasks: <http://topbraid.org/tasks#> .
@prefix tasks.spin: <http://topbraid.org/tasks.spin#> .
@prefix taxonomies: <http://evn.topbraidlive.org/evnprojects#> .
@prefix tbl: <http://topbraidlive.org/functions#> .
@prefix tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#> .
@prefix tbladmindoc: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix tblinstallguide: <http://server.topbraidlive.org/doc/tblinstallguide#> .
@prefix tblui: <http://server.topbraidlive.org/tblui#> .
@prefix teaminstallsec: <http://teamwork.topbraidlive.org/doc/teamworkInstallGuideSections#> .
@prefix teamwork: <http://topbraid.org/teamwork#> .
@prefix teamworkAdmin: <http://teamwork.topbraidlive.org/doc/teamworkAdmin#> .
@prefix teamworkconfig: <http://server.topbraidlive.org/system-applications/teamworkconfig#> .
@prefix teamworkconstraints: <http://topbraid.org/teamworkconstraints#> .
@prefix teamworkdashboard: <http://topbraid.org/teamworkdashboard#> .
@prefix teamworknotifications: <http://topbraid.org/teamworknotifications#> .
@prefix teamworkrules: <http://topbraid.org/teamworkrules#> .
@prefix teamworkscripts: <http://topbraid.org/teamworkscripts#> .
@prefix teamworkupdate: <http://teamworkAPI.topbraid.com/teamworkUpdate#> .
@prefix textindex: <http://topbraid.org/textindex#> .
@prefix tika-importer: <http://teamwork.topbraidlive.org/corpus/tika-importer#> .
@prefix tops: <http://www.topbraid.org/tops#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix tosh.ui: <http://topbraid.org/tosh.ui#> .
@prefix tracker: <http://teamwork.topbraidlive.org/ui/tracker#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix uitest: <http://uispin.org/test#> .
@prefix uix: <http://topbraidlive.org/uix#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix userAdminIndex: <http://evn.topbraidlive.org/userAdminIndex#> .
@prefix userIndex: <http://evn.topbraidlive.org/evndoc.www/userIndex#> .
@prefix userdat: <http://teamwork.topbraidlive.org/ui/userdata> .
@prefix userdata: <http://teamwork.topbraidlive.org/ui/userdata#> .
@prefix usingtagger: <http://evn.topbraidlive.org/taggerdoc.www/usingtagger#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix victory: <http://edg.topbraid.solutions/victory/> .
@prefix visual: <http://topbraid.org/visual#> .
@prefix voag: <http://voag.linkedmodel.org/voag/> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix wf: <http://www.w3.org/2005/01/wf/flow#> .
@prefix wot: <http://xmlns.com/wot/0.1/> .
@prefix xhtml: <http://topbraid.org/xhtml#> .
@prefix xlink: <http://www.w3.org/1999/xlink#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://server.topbraidlive.org/system-applications/scheduler>
  a owl:Ontology ;
  rdfs:label "TopBraid Job Scheduler" ;
  owl:imports <http://server.topbraidlive.org/system-applications/tbladmin> ;
  owl:imports <http://spinrdf.org/spl> ;
  owl:imports <http://topbraid.org/scheduler> ;
  owl:imports <http://uispin.org/ui> ;
.
arg:ms
  a rdf:Property ;
  rdfs:subPropertyOf sp:arg ;
.
scheduler:ScheduledJobList
  a spin:SelectTemplate ;
  spin:body [
      a sp:Select ;
      sp:resultVariables (
          [
            sp:varName "job" ;
          ]
          [
            sp:varName "schedule" ;
          ]
        ) ;
      sp:where (
          [
            sp:object scheduler:ScheduledJob ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "job" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "schedule" ;
              ] ;
            sp:predicate scheduler:cronSchedule ;
            sp:subject [
                sp:varName "job" ;
              ] ;
          ]
          [
            a sp:Filter ;
            sp:expression [
                a sp:notExists ;
                sp:elements (
                    [
                      sp:object true ;
                      sp:predicate scheduler:disabled ;
                      sp:subject [
                          sp:varName "job" ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
          [
            a sp:Filter ;
            sp:expression [
                a sp:notExists ;
                sp:elements (
                    [
                      sp:object true ;
                      sp:predicate ui:abstract ;
                      sp:subject [
                          sp:varName "job" ;
                        ] ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
    ] ;
  spin:private true ;
  rdfs:comment "Retrieves a list of all scheduler:ScheduledJob instances, along with their schedules. Executed by ScheduledJobManager.java against the UI graph." ;
  rdfs:label "Scheduled job list" ;
  rdfs:subClassOf spin:SelectTemplates ;
.
scheduler:ScheduledJobsPage
  a ui:NodeClass ;
  ui:errorPrototype """
<ui:if ui:condition=\"{= !uix:isAdmin() }\">You need to be an admin to see this page.</ui:if>
"""^^ui:Literal ;
  ui:headIncludes """
<ui:group>
    <title>Scheduled Jobs</title>
</ui:group>
"""^^ui:Literal ;
  ui:prototype """
<tblui:PageContainer arg:title=\"Scheduled Jobs\">
    <tblui:Section>
        <ui:setContext ui:queryGraph=\"{= ui:graph }\">
            <ui:loadable ui:loadId=\"jobs-table\">
                <ui:group letrs:jobs=\"{#
                        SELECT *
                        WHERE {
                            {
                                ?job scheduler:scheduledJobStatus ( ?schedule ?nextExecution ?currentExecutionId ?currentRunTime ?userURI ) .
                                OPTIONAL {
                                    FILTER NOT EXISTS {
                                        ?job a scheduler:ScheduledJob .
                                    } .
                                    BIND (true AS ?deleted) .
                                } .
                            }
                            UNION
                            {
                                ?job a scheduler:ScheduledJob .
                                FILTER NOT EXISTS {
                                    ?job ui:abstract true .
                                } .
                                MINUS {
                                    ?job scheduler:scheduledJobStatus ( ?schedule ) .
                                } .
                            } .
                            OPTIONAL {
                                ?job scheduler:cronSchedule ?schedule .
                            } .
                            OPTIONAL {
                                ?job scheduler:disabled ?disabled .
                            } .
                        }
                        ORDER BY (?job) }\">
                    <ui:if ui:condition=\"{= spr:rowCount(?jobs) = 0 }\">
                        <p>There are no active <code>scheduler:ScheduledJob</code> instances.</p>
                    </ui:if>
                    <ui:else>
                        <p>Active <code>scheduler:ScheduledJob</code> instances:</p>
                        <table class=\"table table-bordered\">
                            <thead>
                                <tr>
                                    <th scope=\"col\">Job class</th>
                                    <th scope=\"col\">User</th>
                                    <th scope=\"col\">Schedule <a href=\"http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/tutorial-lesson-06.html\" target=\"_blank\">
                                            <i class=\"fa fa-info-circle\"/>
                                        </a>
                                    </th>
                                    <th scope=\"col\">Next scheduled execution</th>
                                    <th scope=\"col\">Currently running?</th>
                                    <th scope=\"col\">Progress</th>
                                </tr>
                            </thead>
                            <tbody>
                                <ui:forEach ui:resultSet=\"{= ?jobs }\">
                                    <tr>
                                        <td>
                                            <code>{= smf:qname(?job) }</code>
                                        </td>
                                        <td>
                                            <code>{= smf:qname(?userURI) }</code>
                                        </td>
                                        <td>
                                            <ui:if ui:condition=\"{= bound(?schedule) }\">
                                                <code>{= ?schedule }</code>
                                            </ui:if>
                                        </td>
                                        <ui:if ui:condition=\"{= bound(?nextExecution) }\">
                                            <ui:if ui:condition=\"{= ?nextExecution &gt; afn:now() }\">
                                                <td>{= spif:dateFormat(?nextExecution, \"yyyy-MM-dd HH:mm:ss\") }</td>
                                            </ui:if>
                                            <ui:else>
                                                <td class=\"text-danger\">{= spif:dateFormat(?nextExecution, \"yyyy-MM-dd HH:mm:ss\") } (overdue)</td>
                                            </ui:else>
                                        </ui:if>
                                        <ui:elseif ui:condition=\"{= ?disabled }\">
                                            <td>Disabled</td>
                                        </ui:elseif>
                                        <ui:elseif ui:condition=\"{= !bound(?schedule) }\">
                                            <td>Not scheduled</td>
                                        </ui:elseif>
                                        <ui:elseif ui:condition=\"{= ?deleted }\">
                                            <td>Deleted</td>
                                        </ui:elseif>
                                        <ui:else>
                                            <td class=\"text-danger\">Inactive ({= IF(uix:isTBC(), \"refresh registries, check TBC Error Log\", \"check TBL Log\") })</td>
                                        </ui:else>
                                        <ui:if ui:condition=\"{= bound(?currentRunTime) }\">
                                            <td let:seconds=\"{= spif:cast((?currentRunTime / 1000), xsd:integer) }\">
                                                <a href=\"{= ?currentExecutionId }\" onclick=\"return false\" title=\"Copy link to get execution ID\">Yes</a>
                                                <swa:Space/>({= spif:cast(floor((?seconds / 3600)), xsd:integer) }h
{= spif:cast(floor((spif:mod(?seconds, 3600) / 60)), xsd:integer) }min
{= spif:mod(?seconds, 60) }s)</td>
                                        </ui:if>
                                        <ui:else>
                                            <td>No</td>
                                        </ui:else>
                                        <ui:if ui:condition=\"{= bound(?currentExecutionId) }\">
                                            <td>
                                                <ui:forEach ui:resultSet=\"{#
                                                        SELECT *
                                                        WHERE {
                                                            ?currentExecutionId ui:progressMonitorStatus ( ?task ?subTask ?totalWork ?completedWork ) .
                                                        } }\">
                                                    <ui:group let:taskText=\"{= IF(bound(?subTask), ui:concat(CONCAT(?task, &quot;: &quot;), ?subTask), ?task) }\" let:workText=\"{= IF((?totalWork &gt; 0), ui:concat(?completedWork, &quot;/&quot;, ?totalWork), ?completedWork) }\">
                                                        <ui:if ui:condition=\"{= bound(?taskText) &amp;&amp; bound(?workText) }\">{= ?workText } ({= ?taskText })</ui:if>
                                                        <ui:else>{= ?taskText }{= ?workText }</ui:else>
                                                    </ui:group>
                                                </ui:forEach>
                                            </td>
                                        </ui:if>
                                        <ui:else>
                                            <td/>
                                        </ui:else>
                                    </tr>
                                </ui:forEach>
                            </tbody>
                        </table>
                    </ui:else>
                </ui:group>
                <script>swa.loadDelayed(5000, 'jobs-table')</script>
            </ui:loadable>
            <p>
                <small>
                    <span>Job executions and misconfigured jobs are logged to the </span>
                    <ui:if ui:condition=\"{= uix:isTBC() }\">TBC Error Log</ui:if>
                    <ui:else>
                        <ui:createLink ui:servlet=\"log\">
                            <a href=\"{= ?link }\">TBL Log</a>
                        </ui:createLink>
                    </ui:else>
                    <span>.</span>
                </small>
            </p>
            <ui:if ui:condition=\"{= uix:isTBC() }\">
                <p>
                    <small>TopBraid Composer: Select <em>System &gt; Refresh TopBraid System Registries</em> to enact schedule changes.</small>
                </p>
            </ui:if>
        </ui:setContext>
    </tblui:Section>
</tblui:PageContainer>
"""^^ui:Literal ;
  rdfs:label "Scheduled jobs admin" ;
  rdfs:subClassOf tbladmin:AdminPages ;
.
scheduler:Sleep
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:ms ;
      spl:valueType xsd:integer ;
      rdfs:comment "The number of milliseconds to wait." ;
    ] ;
  ui:prototype """
<ui:group let:dummy=\"{= afn:wait(?ms) }\"/>
"""^^ui:Literal ;
  rdfs:comment "Delays script execution for the specified number of milliseconds (for testing)." ;
  rdfs:label "Sleep" ;
  rdfs:subClassOf ui:Operations ;
.
scheduler:UserScheduledJobList
  a spin:SelectTemplate ;
  spin:body [
      a sp:Select ;
      sp:resultVariables (
          [
            sp:varName "user" ;
          ]
          [
            sp:varName "schedule" ;
          ]
          [
            sp:varName "graph" ;
          ]
          [
            sp:varName "job" ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "usj" ;
              ] ;
            sp:predicate scheduler:userScheduledJob ;
            sp:subject [
                sp:varName "user" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "schedule" ;
              ] ;
            sp:predicate scheduler:cronSchedule ;
            sp:subject [
                sp:varName "usj" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "graph" ;
              ] ;
            sp:predicate scheduler:definingGraph ;
            sp:subject [
                sp:varName "usj" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "job" ;
              ] ;
            sp:predicate scheduler:jobDefinition ;
            sp:subject [
                sp:varName "usj" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:private true ;
  rdfs:comment "Queries the user data graph to retrieve a list of all scheduler:UserScheduledJob instances, along with their definition." ;
  rdfs:label "User scheduled job list" ;
  rdfs:subClassOf spin:SelectTemplates ;
.
scheduler:scheduledJobStatus
  a spin:MagicProperty ;
  spin:private true ;
  rdfs:comment """A magic property for querying the status of scheduled jobs.

    ?scheduledJob scheduler:scheduledJobStatus (?schedule ?nextFireTime ?currentExecutionId ?currentExecutionDuration)

If the subject is an unbound variable, then all jobs will be listed with their status. If the subject is a bound variable or URI, then the status for that job will be returned. The object must be a list containing variables.

?schedule - cron expression
?nextFireTime - xsd:dateTime of next scheduled execution
?currentExecutionId - URI identifying this execution if currently running; serves as progressId for progress monitoring
?currentExecutionDuration - runtime in ms if currently running
?userURI - user URI of the user who scheduled the job

Implemented in Java.""" ;
  rdfs:label "scheduled job status" ;
  rdfs:subClassOf spin:MagicProperties ;
.
