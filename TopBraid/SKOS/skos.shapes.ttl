# baseURI: http://topbraid.org/skos.shapes
# imports: http://datashapes.org/dash
# imports: http://datashapes.org/graphql
# imports: http://www.w3.org/2004/02/skos/core
# prefix: skosshapes

@prefix dash: <http://datashapes.org/dash#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosshapes: <http://topbraid.org/skos.shapes#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://evn.topbraidlive.org/evnprojects#Taxonomy>
  a graphql:Schema ;
  graphql:name "taxonomies" ;
  graphql:publicClass skos:Concept ;
  graphql:publicClass skos:ConceptScheme ;
.
<http://topbraid.org/skos.shapes>
  a owl:Ontology ;
  rdfs:comment """A collection of SKOS constraints expressed using SHACL.

Implements SKOS constraint S36, defined for class skos:OrderedCollection and uses auxiliary function skosshapes:checkMembers.  Constraints S13, S14, S27, and S46 are defined for class skos:Concept and rely on sh:disjoint and sh:uniqueLang.""" ;
  rdfs:label "SKOS SHACL shapes" ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports <http://datashapes.org/graphql> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  sh:declare [
      a sh:PrefixDeclaration ;
      sh:namespace "http://topbraid.org/skos.shapes#"^^xsd:anyURI ;
      sh:prefix "skosshapes" ;
    ] ;
  sh:declare [
      a sh:PrefixDeclaration ;
      sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
      sh:prefix "rdf" ;
    ] ;
  sh:declare [
      a sh:PrefixDeclaration ;
      sh:namespace "http://www.w3.org/2004/02/skos/core#"^^xsd:anyURI ;
      sh:prefix "skos" ;
    ] ;
.
skosshapes:OrphanConstraint
  a sh:SPARQLConstraint ;
  sh:message "Concept seems to be an \"orphan\" - it has neither a broader concept nor is the top concept of a concept scheme" ;
  sh:prefixes <http://topbraid.org/skos.shapes> ;
  sh:select """SELECT $this
WHERE {
    FILTER NOT EXISTS { $this skos:broader ?anyBroader }
    FILTER NOT EXISTS { ?anyScheme skos:hasTopConcept $this }
}""" ;
.
skosshapes:checkMembers
  a sh:SPARQLFunction ;
  rdfs:comment "A helper function for constraint 36 on skos:OrderedCollection. For a given collection (?arg1) and a specific list node (?arg2), this checks whether the rdf:first of that list node is also a value of the collection's skos:member property. If successful, then it moves to the next list item (rdf:rest) and calls itself recursively until the rdf:nil is reached." ;
  rdfs:label "check members" ;
  sh:ask """ASK WHERE {
    ?arg2 rdf:first ?member .
    ?arg1 skos:member ?member .
    ?arg2 rdf:rest ?rest .
	FILTER ((?rest = rdf:nil) || (skosshapes:checkMembers(?arg1, ?rest))) .
}""" ;
  sh:parameter [
      a sh:Parameter ;
      sh:path skosshapes:arg1 ;
      sh:class skos:OrderedCollection ;
      sh:description "The ordered collection to validated" ;
      sh:name "arg1" ;
      sh:nodeKind sh:IRI ;
      sh:order 0 ;
    ] ;
  sh:parameter [
      a sh:Parameter ;
      sh:path skosshapes:arg2 ;
      sh:description "The remaining elements of the list to be validated" ;
      sh:name "arg2" ;
      sh:nodeKind sh:BlankNodeOrIRI ;
      sh:order 1 ;
    ] ;
  sh:prefixes <http://topbraid.org/skos.shapes> ;
  sh:returnType xsd:boolean ;
.
skosshapes:shortestConceptPath
  a sh:SPARQLFunction ;
  rdfs:label "shortest concept path" ;
  sh:parameter [
      a sh:Parameter ;
      sh:path skosshapes:node ;
      sh:description "The node to get the path from." ;
      sh:name "node" ;
      sh:nodeKind sh:BlankNodeOrIRI ;
    ] ;
  sh:prefixes <http://topbraid.org/skos.shapes> ;
  sh:returnType xsd:string ;
  sh:select """SELECT ?result
WHERE {
    {
		{
        	BIND (spif:shortestObjectsPath(?node, skos:broader, ?root) AS ?path) .
        	FILTER bound(?path) .
		}
    	BIND (spif:indexOf(?path, \" \") AS ?sep) .
    	BIND (IF(bound(?sep), SUBSTR(?path, 1, ?sep), ?path) AS ?uri) .
		BIND (IRI(?uri) AS ?r) 
        ?scheme skos:hasTopConcept ?r .
        BIND (CONCAT(str(?scheme), \" \", ?path) AS ?result) .
    }
    UNION
    {
        ?node a skos:ConceptScheme .
        BIND (xsd:string(?node) AS ?result) .
    } .
}""" ;
.
skos:AssociativeRelationships
  a sh:PropertyGroup ;
  rdfs:label "Associative Relationships" ;
  sh:order "3"^^xsd:decimal ;
.
skos:Collection
  rdfs:comment "A meaningful collection of concepts."@en ;
.
skos:Concept
  a sh:NodeShape ;
  rdfs:comment "An idea or notion; a unit of thought."@en ;
  sh:property skos:Concept-altLabel ;
  sh:property skos:Concept-broadMatch ;
  sh:property skos:Concept-broader ;
  sh:property skos:Concept-broader-inverse ;
  sh:property skos:Concept-broader-nonRecursive ;
  sh:property skos:Concept-changeNote ;
  sh:property skos:Concept-closeMatch ;
  sh:property skos:Concept-definition ;
  sh:property skos:Concept-editorialNote ;
  sh:property skos:Concept-exactMatch ;
  sh:property skos:Concept-example ;
  sh:property skos:Concept-hasTopConcept-inverse ;
  sh:property skos:Concept-hiddenLabel ;
  sh:property skos:Concept-historyNote ;
  sh:property skos:Concept-notation ;
  sh:property skos:Concept-note ;
  sh:property skos:Concept-prefLabel ;
  sh:property skos:Concept-related ;
  sh:property skos:Concept-relatedMatch ;
  sh:property skos:Concept-scopeNote ;
  sh:property skos:Concept-type ;
  sh:sparql skosshapes:OrphanConstraint ;
.
skos:Concept-altLabel
  a sh:PropertyShape ;
  sh:path skos:altLabel ;
  dash:singleLine true ;
  sh:description "An alternative lexical label for a resource."@en ;
  sh:disjoint skos:hiddenLabel ;
  sh:group skos:LabelsAndDescriptionPropertyGroup ;
  sh:or (
      [
        sh:datatype xsd:string ;
      ]
      [
        sh:datatype rdf:langString ;
      ]
    ) ;
  sh:order 1 ;
.
skos:Concept-broadMatch
  a sh:PropertyShape ;
  sh:path skos:broadMatch ;
  sh:class skos:Concept ;
  sh:description "Used to state a hierarchical mapping link between two conceptual resources in different concept schemes."@en ;
  sh:disjoint skos:relatedMatch ;
  sh:group skos:MatchingRelationshipsPropertyGroup ;
  sh:order 0 ;
.
skos:Concept-broader
  a sh:PropertyShape ;
  sh:path skos:broader ;
  sh:class skos:Concept ;
  sh:description "Relates a concept to a concept that is more general in meaning."@en ;
  sh:group skos:HierarchicalRelationships ;
  sh:name "broader concept" ;
  sh:order 1 ;
.
skos:Concept-broader-inverse
  a sh:PropertyShape ;
  sh:path [
      sh:inversePath skos:broader ;
    ] ;
  graphql:name "narrower" ;
  sh:class skos:Concept ;
  sh:description "Relates a concept to a concept that is more specific in meaning."@en ;
  sh:group skos:HierarchicalRelationships ;
  sh:name "narrower concept" ;
  sh:order 2 ;
.
skos:Concept-broader-nonRecursive
  a sh:PropertyShape ;
  sh:path [
      sh:oneOrMorePath skos:broader ;
    ] ;
  dash:nonRecursive true ;
.
skos:Concept-changeNote
  a sh:PropertyShape ;
  sh:path skos:changeNote ;
  tosh:editWidget swa:RichTextEditor ;
  sh:description "A note about a modification to a concept."@en ;
  sh:group skos:NotesPropertyGroup ;
  sh:or dash:HTMLOrStringOrLangString ;
  sh:order 1 ;
.
skos:Concept-closeMatch
  a sh:PropertyShape ;
  sh:path skos:closeMatch ;
  sh:class skos:Concept ;
  sh:description "Used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications. In order to avoid the possibility of \"compound errors\" when combining mappings across more than two concept schemes, skos:closeMatch is not declared to be a transitive property."@en ;
  sh:group skos:MatchingRelationshipsPropertyGroup ;
  sh:order 1 ;
.
skos:Concept-definition
  a sh:PropertyShape ;
  sh:path skos:definition ;
  dash:singleLine false ;
  tosh:editWidget swa:RichTextEditor ;
  sh:description "A statement or formal explanation of the meaning of a concept."@en ;
  sh:group skos:LabelsAndDescriptionPropertyGroup ;
  sh:or dash:HTMLOrStringOrLangString ;
  sh:order 5 ;
.
skos:Concept-editorialNote
  a sh:PropertyShape ;
  sh:path skos:editorialNote ;
  tosh:editWidget swa:RichTextEditor ;
  sh:description "A note for an editor, translator or maintainer of the vocabulary."@en ;
  sh:group skos:NotesPropertyGroup ;
  sh:or dash:HTMLOrStringOrLangString ;
  sh:order 2 ;
.
skos:Concept-exactMatch
  a sh:PropertyShape ;
  sh:path skos:exactMatch ;
  sh:class skos:Concept ;
  sh:description "Used to link two concepts, indicating a high degree of confidence that the concepts can be used interchangeably across a wide range of information retrieval applications. skos:exactMatch is a transitive property, and is a sub-property of skos:closeMatch."@en ;
  sh:disjoint skos:broadMatch ;
  sh:disjoint skos:relatedMatch ;
  sh:group skos:MatchingRelationshipsPropertyGroup ;
  sh:order 2 ;
.
skos:Concept-example
  a sh:PropertyShape ;
  sh:path skos:example ;
  tosh:editWidget swa:RichTextEditor ;
  sh:description "An example of the use of a concept."@en ;
  sh:group skos:NotesPropertyGroup ;
  sh:or dash:HTMLOrStringOrLangString ;
  sh:order 5 ;
.
skos:Concept-hasTopConcept-inverse
  a sh:PropertyShape ;
  sh:path [
      sh:inversePath skos:hasTopConcept ;
    ] ;
  graphql:name "topConceptOf" ;
  sh:class skos:ConceptScheme ;
  sh:group skos:HierarchicalRelationships ;
  sh:name "top concept of" ;
  sh:order 0 ;
.
skos:Concept-hiddenLabel
  a sh:PropertyShape ;
  sh:path skos:hiddenLabel ;
  dash:singleLine true ;
  sh:description "A lexical label for a resource that should be hidden when generating visual displays of the resource, but should still be accessible to free text search operations."@en ;
  sh:group skos:LabelsAndDescriptionPropertyGroup ;
  sh:or (
      [
        sh:datatype xsd:string ;
      ]
      [
        sh:datatype rdf:langString ;
      ]
    ) ;
  sh:order 2 ;
.
skos:Concept-historyNote
  a sh:PropertyShape ;
  sh:path skos:historyNote ;
  tosh:editWidget swa:RichTextEditor ;
  sh:description "A note about the past state/use/meaning of a concept."@en ;
  sh:group skos:NotesPropertyGroup ;
  sh:or dash:HTMLOrStringOrLangString ;
  sh:order 3 ;
.
skos:Concept-notation
  a sh:PropertyShape ;
  sh:path skos:notation ;
  sh:description "A notation, also known as classification code, is a string of characters such as \"T58.5\" or \"303.4833\" used to uniquely identify a concept within the scope of a given concept scheme."@en ;
  sh:group skos:LabelsAndDescriptionPropertyGroup ;
  sh:order 3 ;
.
skos:Concept-note
  a sh:PropertyShape ;
  sh:path skos:note ;
  tosh:editWidget swa:RichTextEditor ;
  sh:description "A general note, for any purpose."@en ;
  sh:group skos:NotesPropertyGroup ;
  sh:or dash:HTMLOrStringOrLangString ;
  sh:order 0 ;
.
skos:Concept-pathToConceptScheme
  a sh:PropertyShape ;
  sh:path skosshapes:pathToConceptScheme ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:name "path to concept scheme" ;
  sh:values [
      skosshapes:shortestConceptPath (
          sh:this
        ) ;
    ] ;
.
skos:Concept-prefLabel
  a sh:PropertyShape ;
  sh:path skos:prefLabel ;
  dash:singleLine true ;
  sh:description "The preferred lexical label for a resource, in a given language."@en ;
  sh:disjoint skos:altLabel ;
  sh:disjoint skos:hiddenLabel ;
  sh:group skos:LabelsAndDescriptionPropertyGroup ;
  sh:or (
      [
        sh:datatype xsd:string ;
      ]
      [
        sh:datatype rdf:langString ;
      ]
    ) ;
  sh:order 0 ;
  sh:qualifiedMaxCount 1 ;
  sh:qualifiedValueShape [
      rdfs:label "datatype string (without language tag)" ;
      sh:datatype xsd:string ;
    ] ;
  sh:uniqueLang true ;
.
skos:Concept-related
  a sh:PropertyShape ;
  sh:path skos:related ;
  sh:class skos:Concept ;
  sh:description "Relates a concept to a concept with which there is an associative semantic relationship."@en ;
  sh:disjoint skos:broaderTransitive ;
  sh:group skos:AssociativeRelationships ;
  sh:name "related concept" ;
  sh:order 2 ;
.
skos:Concept-relatedMatch
  a sh:PropertyShape ;
  sh:path skos:relatedMatch ;
  sh:class skos:Concept ;
  sh:description "Used to state an associative mapping link between two conceptual resources in different concept schemes."@en ;
  sh:group skos:MatchingRelationshipsPropertyGroup ;
  sh:order 3 ;
.
skos:Concept-scopeNote
  a sh:PropertyShape ;
  sh:path skos:scopeNote ;
  tosh:editWidget swa:RichTextEditor ;
  sh:description "A note that helps to clarify the meaning and/or the use of a concept."@en ;
  sh:group skos:NotesPropertyGroup ;
  sh:or dash:HTMLOrStringOrLangString ;
  sh:order 4 ;
.
skos:Concept-type
  a sh:PropertyShape ;
  sh:path rdf:type ;
  graphql:name "rdf_type" ;
  tosh:editWidget <http://evn.topbraidlive.org/ui#ConceptTypeEditor> ;
  sh:class rdfs:Class ;
  sh:group skos:LabelsAndDescriptionPropertyGroup ;
  sh:order 4 ;
.
skos:ConceptScheme
  a sh:NodeShape ;
  rdfs:comment "A set of concepts, optionally including statements about semantic relationships between those concepts."@en ;
  sh:property skos:ConceptScheme-comment ;
  sh:property skos:ConceptScheme-hasTopConcept ;
  sh:property skos:ConceptScheme-label ;
  sh:property skos:ConceptScheme-type ;
.
skos:ConceptScheme-comment
  a sh:PropertyShape ;
  sh:path rdfs:comment ;
  dash:singleLine true ;
  sh:group skos:LabelsAndDescriptionPropertyGroup ;
  sh:or dash:HTMLOrStringOrLangString ;
  sh:order "10"^^xsd:decimal ;
.
skos:ConceptScheme-hasTopConcept
  a sh:PropertyShape ;
  sh:path skos:hasTopConcept ;
  sh:class skos:Concept ;
  sh:description "Relates, by convention, a concept scheme to a concept which is topmost in the broader/narrower concept hierarchies for that scheme, providing an entry point to these hierarchies."@en ;
  sh:group skos:HierarchicalRelationships ;
.
skos:ConceptScheme-label
  a sh:PropertyShape ;
  sh:path rdfs:label ;
  dash:singleLine true ;
  graphql:name "rdfs_label" ;
  sh:group skos:LabelsAndDescriptionPropertyGroup ;
  sh:or dash:StringOrLangString ;
  sh:order "0"^^xsd:decimal ;
.
skos:ConceptScheme-type
  a sh:PropertyShape ;
  sh:path rdf:type ;
  graphql:name "rdf_type" ;
  sh:class rdfs:Class ;
  sh:group skos:DefinitionPropertyGroup ;
.
skos:DefinitionPropertyGroup
  a sh:PropertyGroup ;
  rdfs:label "Definition" ;
  sh:order "1"^^xsd:decimal ;
.
skos:HierarchicalRelationships
  a sh:PropertyGroup ;
  rdfs:label "Hierarchical Relationships" ;
  sh:order "2"^^xsd:decimal ;
.
skos:LabelsAndDescriptionPropertyGroup
  a sh:PropertyGroup ;
  rdfs:label "Labels and Description" ;
  sh:order 0 ;
.
skos:MatchingRelationshipsPropertyGroup
  a sh:PropertyGroup ;
  rdfs:label "Matching Relationships" ;
  sh:order 5 ;
.
skos:NotesPropertyGroup
  a sh:PropertyGroup ;
  rdfs:label "Notes" ;
  sh:order 4 ;
.
skos:OrderedCollection
  a sh:NodeShape ;
  rdfs:comment "An ordered collection of concepts, where both the grouping and the ordering are meaningful."@en ;
  sh:property skos:OrderedCollection-memberList ;
.
skos:OrderedCollection-memberList
  a sh:PropertyShape ;
  sh:path skos:memberList ;
  sh:description "Relates an ordered collection to the RDF list containing its members."@en ;
  sh:name "skos:OrderedCollection-memberList" ;
  sh:sparql [
      rdfs:comment "S36 For any resource, every item in the list given as the value of the skos:memberList property is also a value of the skos:member property." ;
      sh:message "S36 For resource {?this}, every item in the list given as the value of the skos:memberList property must also a value of the skos:member property." ;
      sh:prefixes <http://topbraid.org/skos.shapes> ;
      sh:select """SELECT $this
WHERE {
    ?this skos:memberList ?list .
    FILTER ((?list != rdf:nil) && (!skosshapes:checkMembers(?this, ?list))) .
}""" ;
    ] ;
.
skos:StandardRelationshipsPropertyGroup
  a sh:PropertyGroup ;
  rdfs:label "Standard Relationships" ;
  sh:order 2 ;
.
skos:broadMatch
  rdfs:comment "skos:broadMatch is used to state a hierarchical mapping link between two conceptual resources in different concept schemes."@en ;
.
skos:broaderTransitive
  rdfs:comment "skos:broaderTransitive is a transitive superproperty of skos:broader." ;
.
skos:changeNote
  rdfs:comment "A note about a modification to a concept."@en ;
.
skos:closeMatch
  rdfs:comment "skos:closeMatch is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications. In order to avoid the possibility of \"compound errors\" when combining mappings across more than two concept schemes, skos:closeMatch is not declared to be a transitive property."@en ;
.
skos:definition
  rdfs:comment "A statement or formal explanation of the meaning of a concept."@en ;
.
skos:editorialNote
  rdfs:comment "A note for an editor, translator or maintainer of the vocabulary."@en ;
.
skos:example
  rdfs:comment "An example of the use of a concept."@en ;
.
skos:hasTopConcept
  rdfs:comment "Relates, by convention, a concept scheme to a concept which is topmost in the broader/narrower concept hierarchies for that scheme, providing an entry point to these hierarchies."@en ;
.
skos:historyNote
  rdfs:comment "A note about the past state/use/meaning of a concept."@en ;
.
skos:inScheme
  rdfs:comment "Relates a resource (for example a concept) to a concept scheme in which it is included."@en ;
.
skos:member
  rdfs:comment "Relates a collection to one of its members."@en ;
.
skos:narrowMatch
  rdfs:comment "skos:narrowMatch is used to state a hierarchical mapping link between two conceptual resources in different concept schemes."@en ;
.
skos:narrowerTransitive
  rdfs:comment "skos:narrowerTransitive is a transitive superproperty of skos:narrower." ;
.
skos:notation
  rdfs:comment "A notation, also known as classification code, is a string of characters such as \"T58.5\" or \"303.4833\" used to uniquely identify a concept within the scope of a given concept scheme."@en ;
.
skos:note
  rdfs:comment "A general note, for any purpose."@en ;
.
skos:relatedMatch
  rdfs:comment "skos:relatedMatch is used to state an associative mapping link between two conceptual resources in different concept schemes."@en ;
.
skos:scopeNote
  rdfs:comment "A note that helps to clarify the meaning and/or the use of a concept."@en ;
.
skos:semanticRelation
  rdfs:comment "Links a concept to a concept related by meaning."@en ;
.
skos:topConceptOf
  rdfs:comment "Relates a concept to the concept scheme that it is a top level concept of."@en ;
.
