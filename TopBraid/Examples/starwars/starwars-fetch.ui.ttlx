# baseURI: http://topbraid.org/examples/starwars-fetch
# imports: http://topbraid.org/examples/starwars-instances/
# imports: http://topbraid.org/swa
# prefix: starwars-fetch

@prefix adminguide: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix cfg: <http://server.topbraidlive.org/web/2009/config#> .
@prefix charts: <http://uispin.org/charts#> .
@prefix composite: <http://www.topbraid.org/2007/05/composite.owl#> .
@prefix css: <http://uispin.org/css#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix default: <http://uispin.org/default#> .
@prefix email: <http://topbraid.org/email#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix html: <http://uispin.org/html#> .
@prefix imported: <http://topbraid.org/imported#> .
@prefix json: <http://topbraid.org/json#> .
@prefix let: <http://uispin.org/let#> .
@prefix letrs: <http://uispin.org/letrs#> .
@prefix list: <http://jena.hpl.hp.com/ARQ/list#> .
@prefix metadata: <http://topbraid.org/metadata#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix raci: <http://topbraid.org/raci#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix search: <http://topbraid.org/search#> .
@prefix search.spin: <http://topbraid.org/search.spin#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sioc: <http://rdfs.org/sioc/ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosapp: <http://evn.topbraidlive.org/uiplugins#> .
@prefix skostemplate: <http://topbraid.org/spin/skostemplates#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix solr: <http://topbraid.org/solr#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparqlmotionlib-swp: <http://topbraid.org/sparqlmotionlib-swp#> .
@prefix sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#> .
@prefix spell: <http://topbraid.org/spellcheckresults#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix spl-dynamic-ranges: <http://spinrdf.org/spl-dynamic-ranges#> .
@prefix spr: <http://spinrdf.org/spr#> .
@prefix spra: <http://spinrdf.org/spra#> .
@prefix starwars: <http://topbraid.org/examples/starwars/> .
@prefix starwars-fetch: <http://topbraid.org/examples/starwars-fetch#> .
@prefix starwars-instances: <http://topbraid.org/examples/starwars-instances/> .
@prefix style: <http://uispin.org/style#> .
@prefix svg: <http://uispin.org/svg#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix swaclasses: <http://topbraid.org/swaclasses#> .
@prefix swaeditor: <http://topbraid.org/swaeditor#> .
@prefix swaowl: <http://topbraid.org/swaowl#> .
@prefix swashacl: <http://topbraid.org/swashacl#> .
@prefix swauml: <http://topbraid.org/swauml#> .
@prefix swon: <http://uispin.org/swon#> .
@prefix sxml: <http://topbraid.org/sxml#> .
@prefix tables: <http://topbraid.org/tables#> .
@prefix task: <http://topbraid.org/task#> .
@prefix tasks: <http://topbraid.org/tasks#> .
@prefix tbl: <http://topbraidlive.org/functions#> .
@prefix teamwork: <http://topbraid.org/teamwork#> .
@prefix tops: <http://www.topbraid.org/tops#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix tosh.ui: <http://topbraid.org/tosh.ui#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix uix: <http://topbraidlive.org/uix#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix wot: <http://xmlns.com/wot/0.1/> .
@prefix xlink: <http://www.w3.org/1999/xlink#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://topbraid.org/examples/starwars-fetch>
  a owl:Ontology ;
  rdfs:comment "A script that can be used to populate the Star Wars instances graph. Navigate to fetchAll with TBC and use Resource > Execute SWP element to run it." ;
  owl:imports starwars-instances: ;
  owl:imports <http://topbraid.org/swa> ;
.
starwars-fetch:convertToRDF
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:json ;
      spl:valueType xsd:string ;
      rdfs:comment "The JSON string." ;
    ] ;
  ui:prototype """
<ui:setContext ui:queryGraph=\"{= ui:graphWithImports(&lt;http://topbraid.org/examples/starwars/&gt;) }\">
    <sml:ConvertJSONToRDF sml:service=\"{= &lt;http://topbraid.org/examples/starwars/&gt; }\" sml:text=\"{= ?json }\">
        <ui:update ui:updateQuery=\"{!
                INSERT {
                    GRAPH &lt;http://topbraid.org/examples/starwars-instances/&gt; {
                        ?s ?p ?o .
                    } .
                }
                WHERE {
                    ?s ?p ?o .
                } }\"/>
    </sml:ConvertJSONToRDF>
</ui:setContext>
"""^^ui:Literal ;
  rdfs:comment "Performs the conversion of the given JSON using the GraphQL schema and copies the resulting triple with a ui:update into the target graph." ;
  rdfs:label "convert to RDF" ;
  rdfs:subClassOf ui:Operations ;
.
starwars-fetch:fetchAll
  a ui:NodeClass ;
  ui:prototype """
<ui:js ui:function=\"fetchAll\" ui:library=\"{= starwars-fetch:fetchJSLibrary }\"/>
"""^^ui:Literal ;
  rdfs:comment "Calls a JavaScript script that performs the bulk of the work, calling back into SWP where needed. This requires a GraphQL server running as described in https://github.com/apollographql/starwars-server." ;
  rdfs:label "fetch all" ;
  rdfs:subClassOf ui:Operations ;
.
starwars-fetch:fetchJSLibrary
  a sh:JSLibrary ;
  rdfs:label "fetch.js Library" ;
  sh:jsLibrary dash:RDFQueryJSLibrary ;
  sh:jsLibraryURL "http://TopBraid/Examples/starwars/fetch.js"^^xsd:anyURI ;
.
starwars-fetch:fetchJSON
  a ui:Function ;
  spin:constraint [
      a spl:Argument ;
      spl:optional true ;
      spl:predicate arg:variables ;
      spl:valueType xsd:string ;
      rdfs:comment "A JSON object with variable values." ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:queryString ;
      spl:valueType xsd:string ;
      rdfs:comment "The GraphQL query string." ;
    ] ;
  ui:prototype """
<sml:ImportJSONFromGraphQLService sml:arguments=\"{= ?variables }\" sml:query=\"{= ?queryString }\" sml:url=\"http://localhost:8080/graphql\">
    <ui:return ui:result=\"{= ?json }\"/>
</sml:ImportJSONFromGraphQLService>
"""^^ui:Literal ;
  rdfs:label "fetch JSON" ;
  rdfs:subClassOf ui:Functions ;
.
