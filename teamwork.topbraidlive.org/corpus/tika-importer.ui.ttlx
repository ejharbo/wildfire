# baseURI: http://teamwork.topbraidlive.org/corpus/tika-importer
# imports: http://topbraid.org/corpus-ui
# imports: http://topbraid.org/swa
# imports: http://topbraid.org/teamwork.ui
# prefix: tika-importer

@prefix adminguide: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix autotagger: <http://evn.topbraidlive.org/autotagger#> .
@prefix cfg: <http://server.topbraidlive.org/web/2009/config#> .
@prefix charts: <http://uispin.org/charts#> .
@prefix compliance: <http://topbraid.org/compliance#> .
@prefix composite: <http://www.topbraid.org/2007/05/composite.owl#> .
@prefix conceptmatch: <http://topbraid.org/conceptmatch#> .
@prefix config: <http://server.topbraidlive.org/dynamic/config#> .
@prefix contact: <http://www.w3.org/2000/10/swap/pim/contact#> .
@prefix core-soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix corpus: <http://topbraid.org/corpus#> .
@prefix crosswalk: <http://topbraid.org/crosswalk#> .
@prefix crosswalk.spin: <http://topbraid.org/crosswalk.spin#> .
@prefix crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#> .
@prefix css: <http://uispin.org/css#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dashboard: <http://example.org/dashboard#> .
@prefix dataset: <http://teamwork.topbraidlive.org/dataset#> .
@prefix datasetapp: <http://topbraid.org/swa/datasetapp#> .
@prefix datasetviewer: <http://topbraid.org/swa/datasetviewer#> .
@prefix datatype: <http://qudt.org/vocab/datatype/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcam: <http://purl.org/dc/dcam/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix default: <http://uispin.org/default#> .
@prefix defaultapp: <http://topbraid.org/swa/defaultapp#> .
@prefix deployProjectToServer: <http://server.topbraidlive.org/doc/deployProjectToServer#> .
@prefix devguide: <http://evn.topbraidlive.org/evndoc.www/devguide#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix doc: <http://www.w3.org/2000/10/swap/pim/doc#> .
@prefix document: <http://topbraid.org/document#> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix edg: <http://edg.topbraid.solutions/model/> .
@prefix edg-importer: <http://edg.topbraidlive.org/importer/> .
@prefix edg.c: <http://edg.topbraid.solutions/controller/> .
@prefix edg.glossary: <http://edg.topbraid.solutions/glossary/> .
@prefix edg.sqoop: <http://edg.topbraid.solutions/model/sqoop/> .
@prefix edg.v: <http://edg.topbraid.solutions/view/> .
@prefix eeh-lib: <http://www.environmenthub.no/spin/1.0/eeh-lib#> .
@prefix eeh-reportlib: <http://www.environmenthub.no/spin/1.0/eeh-reportlib#> .
@prefix elements: <http://purl.org/dc/elements/1.1/> .
@prefix email: <http://topbraid.org/email#> .
@prefix evn: <http://topbraid.org/evn/evn#> .
@prefix evnAdminIndex: <http://evn.topbraidlive.org/evnAdminIndex#> .
@prefix evnIntro: <http://evn.topbraidlive.org/evndoc.www/evnIntro#> .
@prefix evndoc: <http://evn.topbraidlive.org/evndoc.www/evndoc#> .
@prefix evnimport: <http://evn.topbraidlive.org/uispin/evnimport#> .
@prefix evninstallguide: <http://teamwork.topbraidlive.org/doc/evninstallguide#> .
@prefix evnui: <http://evn.topbraidlive.org/ui#> .
@prefix ex: <http://example.org/> .
@prefix extjs: <http://uispin.com/extjs#> .
@prefix flow: <http://www.w3.org/2005/01/wf/flow#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix formTemplate: <http://teamwork.topbraidlive.org/system/formTemplate#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix gettingstarted: <http://evn.topbraidlive.org/evndoc.www/gettingstarted#> .
@prefix glossary: <http://evn.topbraidlive.org/evndoc.www/glossary#> .
@prefix governance: <http://topbraid.org/teamworkgovernance.ui#> .
@prefix gr: <http://purl.org/goodrelations/v1#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix html: <http://uispin.org/html#> .
@prefix imported: <http://topbraid.org/imported#> .
@prefix json: <http://topbraid.org/json#> .
@prefix kennedys: <http://topbraid.org/examples/kennedys#> .
@prefix let: <http://uispin.org/let#> .
@prefix letrs: <http://uispin.org/letrs#> .
@prefix list: <http://jena.hpl.hp.com/ARQ/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix metadata: <http://topbraid.org/metadata#> .
@prefix ontologyprojects: <http://teamwork.topbraidlive.org/ontologyprojects#> .
@prefix ontologyviewer: <http://topbraid.org/swa/ontologyviewer#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix permissionGroupMgmt: <http://server.topbraidlive.org/doc/permissionGroupMgmt#> .
@prefix pg: <http://server.topbraidlive.org/web/2013/permissiongroups#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix provo: <http://www.w3.org/ns/prov#> .
@prefix quantity: <http://qudt.org/vocab/quantity/> .
@prefix qudd: <http://qudt.org/schema/datastructure/> .
@prefix quds: <http://qudt.org/schema/datastructure/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt-refdata: <http://qudt.org/vocab/refdata/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix raci: <http://topbraid.org/raci#> .
@prefix raci.spin: <http://topbraid.org/raci.spin#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdm: <http://rdm.topbraidlive.org/rdm/> .
@prefix rdmapp: <http://rdm.topbraidlive.org/rdmapp#> .
@prefix rdmfact: <http://topbraid.org/rdmfact#> .
@prefix rdmprojects: <http://rdm.topbraidlive.org/rdmprojects#> .
@prefix rdmviewer: <http://rdm.topbraidlive.org/rdmviewer#> .
@prefix saf: <http://topbraid.org/saf/> .
@prefix safconfig: <http://topbraid.org/safconfig/> .
@prefix safm: <http://saf.topbraidlive.org/metaschema/> .
@prefix savedQueries: <http://teamwork.topbraidlive.org/ui/savedQueries#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix search: <http://topbraid.org/search#> .
@prefix search.spin: <http://topbraid.org/search.spin#> .
@prefix server: <http://server.topbraidlive.org/server.ui#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sharepoint: <http://topbraid.org/sharepoint#> .
@prefix sharepoint.spin: <http://topbraid.org/sharepoint.spin#> .
@prefix sioc: <http://rdfs.org/sioc/ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosapp: <http://evn.topbraidlive.org/uiplugins#> .
@prefix skostemplate: <http://topbraid.org/spin/skostemplates#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix softwareprojects: <http://teamwork.topbraidlive.org/software/softwareprojects#> .
@prefix solr: <http://topbraid.org/solr#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparqlmotionlib-swp: <http://topbraid.org/sparqlmotionlib-swp#> .
@prefix sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#> .
@prefix spell: <http://topbraid.org/spellcheckresults#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spin.ui: <http://spinrdf.org/spin.ui#> .
@prefix spinx: <http://spinrdf.org/spinx#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix spl-dynamic-ranges: <http://spinrdf.org/spl-dynamic-ranges#> .
@prefix spr: <http://spinrdf.org/spr#> .
@prefix spra: <http://spinrdf.org/spra#> .
@prefix status: <http://topbraid.org/status#> .
@prefix style: <http://uispin.org/style#> .
@prefix svg: <http://uispin.org/svg#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix swaclasses: <http://topbraid.org/swaclasses#> .
@prefix swadoc: <http://topbraid.org/swadoc#> .
@prefix swaeditor: <http://topbraid.org/swaeditor#> .
@prefix swaowl: <http://topbraid.org/swaowl#> .
@prefix swash: <http://topbraid.org/swash#> .
@prefix swashacl: <http://topbraid.org/swashacl#> .
@prefix swauml: <http://topbraid.org/swauml#> .
@prefix swon: <http://uispin.org/swon#> .
@prefix sxml: <http://topbraid.org/sxml#> .
@prefix tables: <http://topbraid.org/tables#> .
@prefix tagger: <http://evn.topbraidlive.org/tagger#> .
@prefix taggerprojects: <http://evn.topbraidlive.org/taggerprojects#> .
@prefix task: <http://topbraid.org/task#> .
@prefix tasks: <http://topbraid.org/tasks#> .
@prefix tasks.spin: <http://topbraid.org/tasks.spin#> .
@prefix taxonomies: <http://evn.topbraidlive.org/evnprojects#> .
@prefix tbl: <http://topbraidlive.org/functions#> .
@prefix tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#> .
@prefix tbladmindoc: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix tblinstallguide: <http://server.topbraidlive.org/doc/tblinstallguide#> .
@prefix teaminstallsec: <http://teamwork.topbraidlive.org/doc/teamworkInstallGuideSections#> .
@prefix teamwork: <http://topbraid.org/teamwork#> .
@prefix teamworkAdmin: <http://teamwork.topbraidlive.org/doc/teamworkAdmin#> .
@prefix teamworkconfig: <http://server.topbraidlive.org/system-applications/teamworkconfig#> .
@prefix teamworkconstraints: <http://topbraid.org/teamworkconstraints#> .
@prefix teamworkdashboard: <http://topbraid.org/teamworkdashboard#> .
@prefix teamworknotifications: <http://topbraid.org/teamworknotifications#> .
@prefix teamworkrules: <http://topbraid.org/teamworkrules#> .
@prefix teamworkscripts: <http://topbraid.org/teamworkscripts#> .
@prefix teamworkupdate: <http://teamworkAPI.topbraid.com/teamworkUpdate#> .
@prefix tika-importer: <http://teamwork.topbraidlive.org/corpus/tika-importer#> .
@prefix tops: <http://www.topbraid.org/tops#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix tosh.ui: <http://topbraid.org/tosh.ui#> .
@prefix tracker: <http://teamwork.topbraidlive.org/ui/tracker#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix uitest: <http://uispin.org/test#> .
@prefix uix: <http://topbraidlive.org/uix#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix userAdminIndex: <http://evn.topbraidlive.org/userAdminIndex#> .
@prefix userIndex: <http://evn.topbraidlive.org/evndoc.www/userIndex#> .
@prefix userdat: <http://teamwork.topbraidlive.org/ui/userdata> .
@prefix userdata: <http://teamwork.topbraidlive.org/ui/userdata#> .
@prefix usingtagger: <http://evn.topbraidlive.org/taggerdoc.www/usingtagger#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix victory: <http://edg.topbraid.solutions/victory/> .
@prefix voag: <http://voag.linkedmodel.org/schema/voag#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix wf: <http://www.w3.org/2005/01/wf/flow#> .
@prefix wot: <http://xmlns.com/wot/0.1/> .
@prefix xhtml: <http://topbraid.org/xhtml#> .
@prefix xlink: <http://www.w3.org/1999/xlink#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://teamwork.topbraidlive.org/corpus/tika-importer>
  rdf:type owl:Ontology ;
  owl:imports <http://topbraid.org/corpus-ui> ;
  owl:imports <http://topbraid.org/swa> ;
  owl:imports <http://topbraid.org/teamwork.ui> ;
  owl:versionInfo "Created with TopBraid Composer" ;
.
tika-importer:ImportFilePage
  rdf:type ui:NodeClass ;
  ui:errorPrototype """
<ui:group let:teamGraph=\"{= teamwork:teamGraph(?projectGraph) }\">
    <ui:setContext ui:queryGraph=\"{= ?teamGraph }\">
        <ui:if ui:condition=\"{= (!bound(?teamGraph)) || (!teamwork:currentUserHasPrivilege(COALESCE(?tag, ?teamGraph), teamwork:manager, ?teamGraph)) }\">
            <teamwork:ErrorPage arg:message=\"You need to be manager of this {= IF(bound(?tag), &quot;working copy&quot;, &quot;project&quot;) } to import files into it.\"/>
        </ui:if>
    </ui:setContext>
</ui:group>
"""^^ui:Literal ;
  ui:prototype """
<ui:group let:projectType=\"{= teamwork:getProjectType(?projectGraph) }\" let:teamGraph=\"{= teamwork:teamGraph(?projectGraph) }\">
    <ui:setContext ui:queryGraph=\"{= ?teamGraph }\">
        <teamwork:Chrome arg:pageType=\"import-page\" arg:projectGraph=\"{= ?projectGraph }\" arg:projectTab=\"{= teamwork:ImportProjectTab }\" arg:tag=\"{= ?tag }\">
            <h1>Import Single Document</h1>
            <p>This will extract text and metadata from a document, and add them to the current {= IF(bound(?tag), \"working copy\", teamwork:singularProjectTypeLabel(?projectType)) }. Supported file formats include PDF and Microsoft Office formats, as well as many others.</p>
            <form action=\"swp\" enctype=\"multipart/form-data\" id=\"theForm\" method=\"post\">
                <input name=\"_base\" type=\"hidden\" value=\"{= teamwork:projectOrTagGraph(?projectGraph, ?tag) }\"/>
                <input name=\"_fileUpload\" type=\"hidden\" value=\"true\"/>
                <input name=\"_viewClass\" type=\"hidden\" value=\"{= tika-importer:ImportFileService }\"/>
                <input name=\"projectGraph\" type=\"hidden\" value=\"{= ?projectGraph }\"/>
                <input name=\"tag\" type=\"hidden\" value=\"{= ?tag }\"/>
                <div class=\"form-group\">
                    <label for=\"file\">Input file</label>
                    <input id=\"file\" name=\"file\" required=\"required\" type=\"file\"/>
                </div>
                <div class=\"form-group\">
                    <button class=\"btn btn-default\" id=\"submitButton\" type=\"submit\">Import</button>
                </div>
            </form>
        </teamwork:Chrome>
    </ui:setContext>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "A page that can be used to import text and metadata from a single document into the current project. Apache Tika will be used for the text/metadata extraction." ;
  rdfs:label "Import file page" ;
  rdfs:subClassOf teamwork:MustHaveAccessToTagPage ;
.
tika-importer:ImportFileService
  rdf:type ui:NodeClass ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:optional "true"^^xsd:boolean ;
      spl:predicate arg:fileName ;
      spl:valueType xsd:string ;
      rdfs:comment "The file name, if available." ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate arg:file ;
      spl:valueType xsd:string ;
      rdfs:comment "The contents of a SQL file" ;
    ] ;
  ui:errorPrototype """
<ui:if ui:condition=\"{= !bound(?file) }\">
    <teamwork:ImportErrorPage arg:message=\"No file selected.\" ui:args=\"*\"/>
</ui:if>
"""^^ui:Literal ;
  ui:prototype """
<ui:group let:pageType=\"import-page\" let:projectTypeLabel=\"{= teamwork:singularProjectTypeLabel(teamwork:getProjectType(?projectGraph)) }\" let:resultDoc=\"{= IRI(CONCAT(spl:objectInGraph(?projectGraph, swa:defaultNamespace, ?projectGraph), ENCODE_FOR_URI(?fileName))) }\" let:targetGraph=\"{= teamwork:projectOrTagGraph(?projectGraph, ?tag) }\" let:title=\"Import Single Document\">
    <ui:try>
        <sml:ImportFileWithTika sml:html=\"{= true }\" sml:overrideFileName=\"{= ?fileName }\" sml:resultURI=\"{= str(?resultDoc) }\" sml:sourceFilePath=\"{= ?file }\">
            <ui:transaction>
                <ui:update ui:updateQuery=\"{!
                        DELETE {
                            GRAPH ?targetGraph {
                                ?resultDoc ?p ?o .
                            } .
                        }
                        WHERE {
                            FILTER bound(?resultDoc) .
                            GRAPH ?targetGraph {
                                ?resultDoc ?p ?o .
                            } .
                        } }\"/>
                <ui:update ui:updateQuery=\"{!
                        INSERT {
                            GRAPH ?targetGraph {
                                ?s ?p ?o .
                            } .
                        }
                        WHERE {
                            ?s ?p ?o .
                        } }\"/>
            </ui:transaction>
            <teamwork:Chrome arg:projectTab=\"{= teamwork:ImportProjectTab }\" ui:args=\"*\">
                <h1>File Import Completed</h1>
                <teamwork:ButtonReturnToProjectOrTagPage ui:args=\"*\"/>&nbsp;
<button class=\"btn btn-default\" onclick=\"swa.load('details'); $(this).hide();\">Show imported data</button>
                <p>
                    <br/>
                </p>
                <ui:loadable ui:loadId=\"details\" ui:loadOnDemand=\"{= true }\">
                    <div class=\"swa-uri\">{= ?resultDoc }</div>
                    <ui:setContext ui:queryGraph=\"{= ui:graphWithImports(?targetGraph) }\">
                        <corpus:DocumentFormBody arg:resource=\"{= ?resultDoc }\"/>
                    </ui:setContext>
                </ui:loadable>
            </teamwork:Chrome>
        </sml:ImportFileWithTika>
    </ui:try>
    <ui:catch>
        <teamwork:ImportErrorPage arg:message=\"{= REPLACE(?exception, &quot;.*SWPException: &quot;, &quot;&quot;) }\" arg:title=\"File Import Failed\" ui:args=\"*\">
            <pre class=\"hidden\">{= ?stackTrace }</pre>
        </teamwork:ImportErrorPage>
    </ui:catch>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "A service that processes an uploaded SQL file by parsing its DDL statements and storing an RDF representation in a project or tag graph. If the project is an EDG Datatypes Model, only datatype definitons will be imported into the project. Otherwise, schema definitions will be imported into the project, and optionally the datatype definitions can be imported into a separately specified project." ;
  rdfs:label "Import file service" ;
  rdfs:subClassOf teamwork:MustHaveAccessToTagPage ;
.
tika-importer:TikaImportPlugin
  rdf:type teamwork:ImportPlugin ;
  teamwork:pluginIndex -1 ;
  teamwork:validForTags "true"^^xsd:boolean ;
  ui:prototype """
<ui:if ui:condition=\"{#
        ASK 
        WHERE {
            GRAPH ?projectGraph {
                ?projectGraph a corpus:DefaultCorpus .
            } .
        } }\">
    <ui:createLink arg:projectGraph=\"{= ?projectGraph }\" arg:tag=\"{= ?tag }\" ui:viewClass=\"{= tika-importer:ImportFilePage }\">
        <teamwork:ActionLink arg:comment=\"Imports text and metadata from a single document. Supported formats include PDF, MS Office and many others.\" arg:icon=\"lib/teamwork/build/images/teamwork/add-document.svg\" arg:link=\"{= ?link }\" arg:title=\"Import Single Document\"/>
    </ui:createLink>
</ui:if>
"""^^ui:Literal ;
  rdfs:comment "Adds an import function that extracts content and metadata from an uploaded document using Apache Tika. This works for all document formats supported by Tika, including PDF and popular Office formats." ;
  rdfs:label "Tika import plugin" ;
  rdfs:subClassOf teamwork:ImportPlugins ;
.
