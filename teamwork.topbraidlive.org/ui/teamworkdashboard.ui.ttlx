# baseURI: http://topbraid.org/teamworkdashboard
# imports: http://topbraid.org/teamwork.ui
# prefix: teamworkdashboard

@prefix acjob: <http://evn.topbraidlive.org/tagger/acjob#> .
@prefix acpp: <http://topbraid.org/nlp/autoclassifier-preproc#> .
@prefix adminguide: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix autotagger: <http://evn.topbraidlive.org/autotagger#> .
@prefix cfg: <http://server.topbraidlive.org/web/2009/config#> .
@prefix charts: <http://uispin.org/charts#> .
@prefix compliance: <http://topbraid.org/compliance#> .
@prefix composite: <http://www.topbraid.org/2007/05/composite.owl#> .
@prefix conceptmatch: <http://topbraid.org/conceptmatch#> .
@prefix config: <http://server.topbraidlive.org/dynamic/config#> .
@prefix config-importers: <http://edg.topbraidlive.org/config/importers#> .
@prefix contact: <http://www.w3.org/2000/10/swap/pim/contact#> .
@prefix core-soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix corpus: <http://topbraid.org/corpus#> .
@prefix corpusprojects: <http://topbraid.org/corpus-projects#> .
@prefix crosswalk: <http://topbraid.org/crosswalk#> .
@prefix crosswalk.spin: <http://topbraid.org/crosswalk.spin#> .
@prefix crosswalkapp: <http://topbraid.org/swa/crosswalkapp#> .
@prefix crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#> .
@prefix css: <http://uispin.org/css#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dashboard: <http://example.org/dashboard#> .
@prefix datagraph: <http://teamwork.topbraidlive.org/datagraph/datagraphprojects#> .
@prefix dataset: <http://teamwork.topbraidlive.org/dataset#> .
@prefix datasetapp: <http://topbraid.org/swa/datasetapp#> .
@prefix datasetviewer: <http://topbraid.org/swa/datasetviewer#> .
@prefix datatype: <http://qudt.org/vocab/datatype/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcam: <http://purl.org/dc/dcam/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix ddl: <http://edg.topbraidlive.org/1.0/importers/ddl#> .
@prefix default: <http://uispin.org/default#> .
@prefix defaultapp: <http://topbraid.org/swa/defaultapp#> .
@prefix deployProjectToServer: <http://server.topbraidlive.org/doc/deployProjectToServer#> .
@prefix devguide: <http://evn.topbraidlive.org/evndoc.www/devguide#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix doc: <http://www.w3.org/2000/10/swap/pim/doc#> .
@prefix document: <http://topbraid.org/document#> .
@prefix documents: <http://edg.topbraid.solutions/1.0/shapes/documents#> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix edg: <http://edg.topbraid.solutions/model/> .
@prefix edg-config: <http://edg.ext.topbraidlive.org/schema/config/importers#> .
@prefix edg-importer: <http://edg.topbraidlive.org/importer/> .
@prefix edg-qa: <http://edg.topbraidlive.org/utility/qa/> .
@prefix edg.c: <http://edg.topbraid.solutions/controller/> .
@prefix edg.global: <urn:x-evn-global:> .
@prefix edg.glossary: <http://edg.topbraid.solutions/glossary/> .
@prefix edg.sqoop: <http://edg.topbraid.solutions/model/sqoop/> .
@prefix edg.v: <http://edg.topbraid.solutions/view/> .
@prefix edgproduct: <http://edg.topbraidlive.org/edgproduct#> .
@prefix eeh-lib: <http://www.environmenthub.no/spin/1.0/eeh-lib#> .
@prefix eeh-reportlib: <http://www.environmenthub.no/spin/1.0/eeh-reportlib#> .
@prefix elements: <http://purl.org/dc/elements/1.1/> .
@prefix email: <http://topbraid.org/email#> .
@prefix evn: <http://topbraid.org/evn/evn#> .
@prefix evnAdminIndex: <http://evn.topbraidlive.org/evnAdminIndex#> .
@prefix evnIntro: <http://evn.topbraidlive.org/evndoc.www/evnIntro#> .
@prefix evndoc: <http://evn.topbraidlive.org/evndoc.www/evndoc#> .
@prefix evnimport: <http://evn.topbraidlive.org/uispin/evnimport#> .
@prefix evninstallguide: <http://teamwork.topbraidlive.org/doc/evninstallguide#> .
@prefix evnui: <http://evn.topbraidlive.org/ui#> .
@prefix ex: <http://example.org/> .
@prefix extjs: <http://uispin.com/extjs#> .
@prefix flow: <http://www.w3.org/2005/01/wf/flow#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix formTemplate: <http://teamwork.topbraidlive.org/system/formTemplate#> .
@prefix forms: <http://www.topbraid.org/2007/01/forms.owl#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix gettingstarted: <http://evn.topbraidlive.org/evndoc.www/gettingstarted#> .
@prefix glossary: <http://evn.topbraidlive.org/evndoc.www/glossary#> .
@prefix governance: <http://topbraid.org/teamworkgovernance.ui#> .
@prefix gr: <http://purl.org/goodrelations/v1#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix graphql.search: <http://teamwork.topbraidlive.org/graphql.search#> .
@prefix html: <http://uispin.org/html#> .
@prefix imported: <http://topbraid.org/imported#> .
@prefix inference: <http://www.topbraid.org/2007/06/inference.owl#> .
@prefix jdbc: <http://edg.topbraidlive.org/1.0/importers/jdbc#> .
@prefix json: <http://topbraid.org/json#> .
@prefix kennedys: <http://topbraid.org/examples/kennedys#> .
@prefix let: <http://uispin.org/let#> .
@prefix letrs: <http://uispin.org/letrs#> .
@prefix lib-importer: <http://edg.topbraid.solutions/importer/lib#> .
@prefix lineage-transform: <http://edg.topbraid.solutions/transform/importer/lineage#> .
@prefix list: <http://jena.hpl.hp.com/ARQ/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix metadata: <http://topbraid.org/metadata#> .
@prefix ontologyprojects: <http://teamwork.topbraidlive.org/ontologyprojects#> .
@prefix ontologyviewer: <http://topbraid.org/swa/ontologyviewer#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix permissionGroupMgmt: <http://server.topbraidlive.org/doc/permissionGroupMgmt#> .
@prefix pg: <http://server.topbraidlive.org/web/2013/permissiongroups#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix provo: <http://www.w3.org/ns/prov#> .
@prefix proxy-lineage: <http://edg.topbraid.solutions/proxy/importer/lineage#> .
@prefix quantity: <http://qudt.org/vocab/quantity/> .
@prefix qudd: <http://qudt.org/schema/datastructure/> .
@prefix quds: <http://qudt.org/schema/datastructure/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt-refdata: <http://qudt.org/vocab/refdata/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix raci: <http://topbraid.org/raci#> .
@prefix raci.spin: <http://topbraid.org/raci.spin#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdm: <http://rdm.topbraidlive.org/rdm/> .
@prefix rdmapp: <http://rdm.topbraidlive.org/rdmapp#> .
@prefix rdmfact: <http://topbraid.org/rdmfact#> .
@prefix rdmprojects: <http://rdm.topbraidlive.org/rdmprojects#> .
@prefix rdmviewer: <http://rdm.topbraidlive.org/rdmviewer#> .
@prefix saf: <http://topbraid.org/saf/> .
@prefix safconfig: <http://topbraid.org/safconfig/> .
@prefix safindex: <http://topbraid.org/safindex#> .
@prefix safm: <http://saf.topbraidlive.org/metaschema/> .
@prefix savedQueries: <http://teamwork.topbraidlive.org/ui/savedQueries#> .
@prefix scheduler: <http://topbraid.org/scheduler#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix search: <http://topbraid.org/search#> .
@prefix search.spin: <http://topbraid.org/search.spin#> .
@prefix server: <http://server.topbraidlive.org/server.ui#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shapesgraph: <http://teamwork.topbraidlive.org/shapesgraph/shapesgraphprojects#> .
@prefix sharepoint: <http://topbraid.org/sharepoint#> .
@prefix sharepoint.spin: <http://topbraid.org/sharepoint.spin#> .
@prefix sioc: <http://rdfs.org/sioc/ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosapp: <http://evn.topbraidlive.org/uiplugins#> .
@prefix skosshapes: <http://topbraid.org/skos.shapes#> .
@prefix skostemplate: <http://topbraid.org/spin/skostemplates#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix softwareprojects: <http://teamwork.topbraidlive.org/software/softwareprojects#> .
@prefix solr: <http://topbraid.org/solr#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparqlmotionlib-swp: <http://topbraid.org/sparqlmotionlib-swp#> .
@prefix sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#> .
@prefix spell: <http://topbraid.org/spellcheckresults#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spin.ui: <http://spinrdf.org/spin.ui#> .
@prefix spinmap: <http://spinrdf.org/spinmap#> .
@prefix spinmapl: <http://topbraid.org/spin/spinmapl#> .
@prefix spinx: <http://spinrdf.org/spinx#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix spl-dynamic-ranges: <http://spinrdf.org/spl-dynamic-ranges#> .
@prefix spr: <http://spinrdf.org/spr#> .
@prefix spra: <http://spinrdf.org/spra#> .
@prefix ss: <http://www.topbraidcomposer.org/owl/2006/08/spreadsheets.owl#> .
@prefix stats: <http://topbraid.org/statistics#> .
@prefix status: <http://topbraid.org/status#> .
@prefix style: <http://uispin.org/style#> .
@prefix svg: <http://uispin.org/svg#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix swaclasses: <http://topbraid.org/swaclasses#> .
@prefix swadoc: <http://topbraid.org/swadoc#> .
@prefix swaeditor: <http://topbraid.org/swaeditor#> .
@prefix swaowl: <http://topbraid.org/swaowl#> .
@prefix swash: <http://topbraid.org/swash#> .
@prefix swashacl: <http://topbraid.org/swashacl#> .
@prefix swauml: <http://topbraid.org/swauml#> .
@prefix swon: <http://uispin.org/swon#> .
@prefix sxml: <http://topbraid.org/sxml#> .
@prefix tables: <http://topbraid.org/tables#> .
@prefix tablesmap: <http://topbraid.org/spin/tablesmap#> .
@prefix tagger: <http://evn.topbraidlive.org/tagger#> .
@prefix taggerprojects: <http://evn.topbraidlive.org/taggerprojects#> .
@prefix taggerspin: <http://evn.topbraidlive.org/taggerspin#> .
@prefix taggerui: <http://evn.topbraidlive.org/taggerui#> .
@prefix task: <http://topbraid.org/task#> .
@prefix tasks: <http://topbraid.org/tasks#> .
@prefix tasks.spin: <http://topbraid.org/tasks.spin#> .
@prefix taxonomies: <http://evn.topbraidlive.org/evnprojects#> .
@prefix tbl: <http://topbraidlive.org/functions#> .
@prefix tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#> .
@prefix tbladmindoc: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix tblinstallguide: <http://server.topbraidlive.org/doc/tblinstallguide#> .
@prefix tblui: <http://server.topbraidlive.org/tblui#> .
@prefix teaminstallsec: <http://teamwork.topbraidlive.org/doc/teamworkInstallGuideSections#> .
@prefix teamwork: <http://topbraid.org/teamwork#> .
@prefix teamworkAdmin: <http://teamwork.topbraidlive.org/doc/teamworkAdmin#> .
@prefix teamworkconfig: <http://server.topbraidlive.org/system-applications/teamworkconfig#> .
@prefix teamworkconstraints: <http://topbraid.org/teamworkconstraints#> .
@prefix teamworkdashboard: <http://topbraid.org/teamworkdashboard#> .
@prefix teamworknotifications: <http://topbraid.org/teamworknotifications#> .
@prefix teamworkrules: <http://topbraid.org/teamworkrules#> .
@prefix teamworkscripts: <http://topbraid.org/teamworkscripts#> .
@prefix teamworkupdate: <http://teamworkAPI.topbraid.com/teamworkUpdate#> .
@prefix textindex: <http://topbraid.org/textindex#> .
@prefix tika-importer: <http://teamwork.topbraidlive.org/corpus/tika-importer#> .
@prefix tops: <http://www.topbraid.org/tops#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix tosh.ui: <http://topbraid.org/tosh.ui#> .
@prefix tracker: <http://teamwork.topbraidlive.org/ui/tracker#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix uitest: <http://uispin.org/test#> .
@prefix uix: <http://topbraidlive.org/uix#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix userAdminIndex: <http://evn.topbraidlive.org/userAdminIndex#> .
@prefix userIndex: <http://evn.topbraidlive.org/evndoc.www/userIndex#> .
@prefix userdat: <http://teamwork.topbraidlive.org/ui/userdata> .
@prefix userdata: <http://teamwork.topbraidlive.org/ui/userdata#> .
@prefix usingtagger: <http://evn.topbraidlive.org/taggerdoc.www/usingtagger#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix victory: <http://edg.topbraid.solutions/victory/> .
@prefix visual: <http://topbraid.org/visual#> .
@prefix voag: <http://voag.linkedmodel.org/voag/> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix wf: <http://www.w3.org/2005/01/wf/flow#> .
@prefix wot: <http://xmlns.com/wot/0.1/> .
@prefix xhtml: <http://topbraid.org/xhtml#> .
@prefix xlink: <http://www.w3.org/1999/xlink#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

arg:iconName
  a rdf:Property ;
  rdfs:subPropertyOf sp:arg ;
.
arg:pluralLabel
  a rdf:Property ;
  rdfs:subPropertyOf sp:arg ;
.
arg:systems
  a rdf:Property ;
  rdfs:subPropertyOf sp:arg ;
.
teamwork:CompletenessAndValidityDashboardSection
  a teamwork:DashboardSection ;
  ui:prototype """
<h3>Completeness and Validity</h3>
"""^^ui:Literal ;
  rdfs:label "Completeness and Validity" ;
  rdfs:subClassOf teamwork:DashboardSections ;
.
teamwork:CompletenessDashboardGadget
  a teamwork:DashboardGadget ;
  teamwork:dashboardSection teamwork:CompletenessAndValidityDashboardSection ;
  ui:prototype """
<ui:group let:_=\"{#
        SELECT ?count ?total
        WHERE {
            BIND (teamwork:teamGraph(?projectGraph) AS ?teamGraph) .
            GRAPH ?teamGraph {
                ?r a teamwork:ValidationReport .
                ?r teamwork:incompleteCount ?count .
                ?r teamwork:incompleteTotal ?total .
                ?r teamwork:timeStamp ?timeStamp .
            } .
        }
        ORDER BY DESC (?timeStamp)
        LIMIT 1 }\">
    <ui:if ui:condition=\"{= !bound(?count) }\">
        <teamwork:DashboardGadgetContainer arg:iconName=\"Unknown\" arg:label=\"Data Completeness: Unknown\">
            <ui:insert ui:into=\"subtitle\">
                <div>No validation report available.<br/>Please run <b>Problems and Suggestions Report</b>.</div>
            </ui:insert>
        </teamwork:DashboardGadgetContainer>
    </ui:if>
    <ui:else>
        <teamwork:DashboardGadgetContainer arg:iconName=\"{= IF((?count = 0), &quot;OK&quot;, &quot;Warning&quot;) }\" arg:label=\"Data Completeness: {= IF((?total = 0), 100, round((((?total - ?count) / ?total) * 100))) }%\">
            <ui:insert ui:into=\"subtitle\">
                <div title=\"Results are taken from the most recent Problems and Suggestions report\">{= ?count } data entries out of {= ?total } are incomplete,<br/>i.e. they lack required properties.</div>
            </ui:insert>
            <ui:insert ui:into=\"body\">
                <ui:if ui:condition=\"{= ?total &gt; 0 }\">
                    <swa:DonutChart arg:height=\"{= 150 }\" arg:resultSet='{#
                            SELECT ?value ?label
                            WHERE {
                                {
                                    BIND ((?total - ?count) AS ?value) .
                                    BIND (CONCAT(str(?value), \" complete\") AS ?label) .
                                }
                                UNION
                                {
                                    BIND (?count AS ?value) .
                                    BIND (CONCAT(str(?value), \" incomplete\") AS ?label) .
                                } .
                            } }' arg:seriesColors=\"['#6AC20A','#E0E0E0']\" arg:showLegend=\"{= true }\" arg:width=\"{= 300 }\"/>
                </ui:if>
            </ui:insert>
        </teamwork:DashboardGadgetContainer>
    </ui:else>
</ui:group>
"""^^ui:Literal ;
  rdfs:label "Completeness dashboard gadget" ;
  rdfs:subClassOf teamwork:DashboardGadgets ;
.
teamwork:DashboardGadget
  a rdfs:Class ;
  rdfs:label "Dashboard gadget" ;
  rdfs:subClassOf ui:NodeClass ;
.
teamwork:DashboardGadgetContainer
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:optional true ;
      spl:predicate arg:iconName ;
      spl:valueType xsd:string ;
      rdfs:comment "One of \"Error\", \"OK\", \"Unknown\", \"Warning\"." ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:label ;
      spl:valueType xsd:string ;
      rdfs:comment "The title of the gadget." ;
    ] ;
  ui:prototype """
<div class=\"teamwork-dashboard-gadget\">
    <div class=\"teamwork-dashboard-gadget-header\">
        <table cellspacing=\"0\">
            <tr>
                <ui:if ui:condition=\"{= bound(?iconName) }\">
                    <td>
                        <div class=\"teamwork-dashboard-gadget-icon {= CONCAT(&quot;teamwork-dashboard-gadget-icon-&quot;, ?iconName) }\"/>
                    </td>
                </ui:if>
                <td class=\"teamwork-dashboard-gadget-label\">{= ?label }</td>
            </tr>
        </table>
    </div>
    <div class=\"teamwork-dashboard-gadget-subtitle\">
        <ui:insertionPoint ui:pointId=\"subtitle\"/>
    </div>
    <div class=\"teamwork-dashboard-gadget-body\">
        <ui:insertionPoint ui:pointId=\"body\"/>
    </div>
</div>
"""^^ui:Literal ;
  rdfs:label "Dashboard gadget container" ;
  rdfs:subClassOf swa:LayoutElements ;
.
teamwork:DashboardGadgetIconBar
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:optional true ;
      spl:predicate arg:iconName ;
      spl:valueType xsd:string ;
      rdfs:comment "One of \"Error\", \"OK\", \"Unknown\", \"Warning\"." ;
    ] ;
  ui:prototype """
<table cellspacing=\"0\">
    <tr>
        <td>
            <div class=\"teamwork-dashboard-gadget-icon {= IF(bound(?iconName), CONCAT(&quot;teamwork-dashboard-gadget-icon-&quot;, ?iconName), ?none) }\"/>
        </td>
        <td>
            <ui:insertionPoint ui:pointId=\"body\"/>
        </td>
    </tr>
</table>
"""^^ui:Literal ;
  rdfs:label "Dashboard gadget icon bar" ;
  rdfs:subClassOf swa:LayoutElements ;
.
teamwork:DashboardGadgets
  a teamwork:DashboardGadget ;
  ui:abstract true ;
  rdfs:label "Dashboard gadgets" ;
  rdfs:subClassOf teamwork:ProjectElements ;
.
teamwork:DashboardProjectTab
  a teamwork:ProjectTab ;
  teamwork:pluginIndex 5 ;
  teamwork:pluginValidExpression true ;
  teamwork:validForACResults true ;
  teamwork:validForTags true ;
  ui:prototype """
<div let:lastChange=\"{= teamwork:lastChangeTime(?projectGraph) }\" let:permission=\"{= teamwork:currentUserHighestRole(?projectGraph, ?tag) }\" let:projectType=\"{= teamwork:getProjectType(?projectGraph) }\" let:status=\"{= spl:objectInGraph(?projectGraph, metadata:status, ?projectGraph) }\" let:teamGraph=\"{= teamwork:teamGraph(?projectGraph) }\">
    <ui:if ui:condition=\"{= !teamwork:areOldEditorsDisabled() }\">
        <div class=\"form-group row\">
            <label class=\"col-sm-2 col-form-label\">Description:</label>
            <div class=\"col-sm-10\">
                <ui:createLink arg:projectGraph=\"{= ?projectGraph }\" ui:viewClass=\"{= teamwork:SetProjectCommentUpdateService }\">
                    <swa:TextAreaInlineEditor arg:placeholder=\"Click to enter a description of this {= teamwork:singularProjectTypeLabel(?projectType) }\" arg:readOnly=\"{= (!teamwork:currentUserIsProjectManager(?projectGraph)) || teamwork:isReadOnlyProject(?projectGraph) }\" arg:updateLink=\"{= ?link }\" arg:value=\"{= spl:objectInGraph(?projectGraph, rdfs:comment, ?projectGraph) }\"/>
                </ui:createLink>
            </div>
        </div>
    </ui:if>
    <ui:if ui:condition=\"{= !teamwork:isSingletonProjectType(?projectType) }\">
        <div class=\"form-group row\">
            <label class=\"col-sm-2 col-form-label\">Status:</label>
            <div class=\"col-sm-10\">{= IF(bound(?status), swa:labelInGraph(?status, ui:graph), \"Undefined\") }</div>
        </div>
    </ui:if>
    <ui:if ui:condition=\"{= bound(?lastChange) }\">
        <div class=\"form-group row\">
            <label class=\"col-sm-2 col-form-label\">Last updated:</label>
            <div class=\"col-sm-10\">{= ui:label(?lastChange) }</div>
        </div>
    </ui:if>
    <div class=\"form-group row\">
        <label class=\"col-sm-2 col-form-label\">Your permission:</label>
        <div class=\"col-sm-10\">{= ?permission }</div>
    </div>
    <ui:group letrs:sections='{#
            SELECT ?section ?sectionLabel
            WHERE {
                GRAPH ui:graph {
                    ?section a teamwork:DashboardSection .
                    FILTER EXISTS {
                        ?gadget teamwork:dashboardSection ?section .
                        ?projectType teamwork:dashboardGadget ?gadget .
                    } .
                    BIND (spif:replaceAll(ui:label(?section), \"Vocabulary\", teamwork:singularProjectTypeLabel(?projectType)) AS ?sectionLabel) .
                } .
            }
            ORDER BY (?section) }'>
        <ui:if ui:condition=\"{= spr:isEmpty(?sections) }\">
            <div>No dashboard gadgets have been installed for {= teamwork:pluralProjectTypeLabel(?projectType) }.</div>
        </ui:if>
        <ui:else>
            <p>
                <ui:forEach ui:resultSet=\"{= ?sections }\">
                    <a href=\"#{= afn:localname(?section) }\">{= ?sectionLabel }</a>
                    <teamwork:Spaces/>
                </ui:forEach>
            </p>
            <ui:forEach ui:resultSet=\"{= ?sections }\">
                <section id=\"{= afn:localname(?section) }\">
                    <ui:dynamicView arg:projectGraph=\"{= ?projectGraph }\" ui:class=\"{= ?section }\"/>
                    <table letrs:gadgets=\"{#
                            SELECT ?gadget
                            WHERE {
                                GRAPH ui:graph {
                                    ?gadget teamwork:dashboardSection ?section .
                                    ?projectType teamwork:dashboardGadget ?gadget .
                                    BIND (spl:object(?gadget, teamwork:dashboardGadgetIndex) AS ?index) .
                                } .
                            }
                            ORDER BY (?index) }\">
                        <ui:forEach ui:resultSet=\"{#
                                SELECT ?row
                                WHERE {
                                    BIND (xsd:integer(ceil((spr:rowCount(?gadgets) / 2))) AS ?rowCount) .
                                    ?row tops:for ( 0 ?rowCount ) .
                                } }\">
                            <tr>
                                <ui:forEach ui:resultSet=\"{#
                                        SELECT ?gadget
                                        WHERE {
                                            {
                                                ?col tops:for ( 0 1 ) .
                                                BIND (((?row * 2) + ?col) AS ?index) .
                                                FILTER (?index &lt; spr:rowCount(?gadgets)) .
                                            } .
                                            BIND (spr:cell(?gadgets, ?index, 0) AS ?gadget) .
                                        } }\">
                                    <td class=\"teamwork-dashboard-project-tab-td-width\">
                                        <ui:dynamicView arg:projectGraph=\"{= ?projectGraph }\" ui:class=\"{= ?gadget }\"/>
                                    </td>
                                </ui:forEach>
                            </tr>
                        </ui:forEach>
                    </table>
                </section>
            </ui:forEach>
        </ui:else>
    </ui:group>
</div>
"""^^ui:Literal ;
  rdfs:label "Dashboard" ;
  rdfs:subClassOf teamwork:ProjectTabs ;
.
teamwork:DashboardSection
  a rdfs:Class ;
  rdfs:comment "Class for the sections on a dashboard. Their rdfs:label is used for display purposes." ;
  rdfs:label "Dashboard section" ;
  rdfs:subClassOf ui:NodeClass ;
.
teamwork:DashboardSections
  a ui:NodeClass ;
  rdfs:label "Dashboard sections" ;
  rdfs:subClassOf teamwork:ProjectElements ;
.
teamwork:DescriptiveMetadataCompletenessDashboardGadget
  a teamwork:DashboardGadget ;
  teamwork:dashboardGadgetIndex 30 ;
  teamwork:dashboardSection teamwork:InformationDashboardSection ;
  ui:prototype """
<ui:group let:teamGraph=\"{= teamwork:teamGraph(?projectGraph) }\">
    <ui:group let:hasDescription=\"{= EXISTS {
        GRAPH ?projectGraph {
            ?projectGraph rdfs:comment ?any .
        } .
    } }\" let:hasIdentifier=\"{= EXISTS {
        GRAPH ?projectGraph {
            ?projectGraph metadata:identifier ?any .
        } .
    } }\" let:hasOfficialName=\"{= EXISTS {
        GRAPH ?projectGraph {
            ?projectGraph metadata:officialName ?any .
        } .
    } }\" let:hasPurpose=\"{= EXISTS {
        GRAPH ?projectGraph {
            ?projectGraph metadata:purpose ?any .
        } .
    } }\">
        <ui:group let:ok=\"{= ((?hasDescription &amp;&amp; ?hasIdentifier) &amp;&amp; ?hasOfficialName) &amp;&amp; ?hasPurpose }\" let:value=\"{= ((IF(?hasDescription, 1, 0) + IF(?hasIdentifier, 1, 0)) + IF(?hasOfficialName, 1, 0)) + IF(?hasPurpose, 1, 0) }\">
            <teamwork:DashboardGadgetContainer arg:iconName=\"{= IF(?ok, &quot;OK&quot;, &quot;Warning&quot;) }\" arg:label=\"Completeness of Descriptive Metadata: {= round(((?value * 100) / 4)) }%\">
                <ui:insert ui:into=\"subtitle\">
                    <div>{= IF(?ok, \"Descriptive metadata appears to be in good shape\", \"Some recommended descriptive metadata is missing\") }</div>
                </ui:insert>
                <ui:insert ui:into=\"body\">
                    <table>
                        <tr>
                            <td class=\"teamwork-dashboard-yesnobox\">
                                <img alt=\"Checkbox\" src=\"lib/teamwork/build/images/teamwork/Checkbox-{= ?hasDescription }-16x16.png\"/>
                            </td>
                            <td>Description {= IF((!?hasDescription), \"not \", ?none) }present</td>
                        </tr>
                        <tr>
                            <td class=\"teamwork-dashboard-yesnobox\">
                                <img alt=\"Checkbox\" src=\"lib/teamwork/build/images/teamwork/Checkbox-{= ?hasIdentifier }-16x16.png\"/>
                            </td>
                            <td>Identifier {= IF((!?hasIdentifier), \"not \", ?none) }present</td>
                        </tr>
                        <tr>
                            <td class=\"teamwork-dashboard-yesnobox\">
                                <img alt=\"Checkbox\" src=\"lib/teamwork/build/images/teamwork/Checkbox-{= ?hasOfficialName }-16x16.png\"/>
                            </td>
                            <td>Official name {= IF((!?hasOfficialName), \"not \", ?none) }present</td>
                        </tr>
                        <tr>
                            <td class=\"teamwork-dashboard-yesnobox\">
                                <img alt=\"Checkbox\" src=\"lib/teamwork/build/images/teamwork/Checkbox-{= ?hasPurpose }-16x16.png\"/>
                            </td>
                            <td>Purpose {= IF((!?hasPurpose), \"not \", ?none) }present</td>
                        </tr>
                    </table>
                </ui:insert>
            </teamwork:DashboardGadgetContainer>
        </ui:group>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  rdfs:label "Metadata completeness dashboard gadget" ;
  rdfs:subClassOf teamwork:DashboardGadgets ;
.
teamwork:InformationDashboardSection
  a teamwork:DashboardSection ;
  ui:prototype """
<h3>Information about the {= teamwork:singularProjectTypeLabel(teamwork:getProjectType(?projectGraph)) }</h3>
"""^^ui:Literal ;
  rdfs:label "Information about the Vocabulary" ;
  rdfs:subClassOf teamwork:DashboardSections ;
.
teamwork:ProcessDashboardSection
  a teamwork:DashboardSection ;
  ui:prototype """
<h3>Process</h3>
"""^^ui:Literal ;
  rdfs:label "Process" ;
  rdfs:subClassOf teamwork:DashboardSections ;
.
teamwork:TagStatusDashboardGadget
  a teamwork:DashboardGadget ;
  teamwork:dashboardGadgetIndex 20 ;
  teamwork:dashboardSection teamwork:ProcessDashboardSection ;
  ui:prototype """
<ui:group let:tagCount=\"{#
        SELECT (COUNT(?tag) AS ?result)
        WHERE {
            BIND (teamwork:teamGraph(?projectGraph) AS ?teamGraph) .
            GRAPH ?teamGraph {
                ?tag a teamwork:Tag .
            } .
        } }\" let:title=\"Workflow Statuses\">
    <ui:if ui:condition=\"{= ?tagCount = 0 }\">
        <teamwork:DashboardGadgetContainer arg:label=\"{= ?title }\">
            <ui:insert ui:into=\"subtitle\">
                <div>No Workflows exist.</div>
            </ui:insert>
        </teamwork:DashboardGadgetContainer>
    </ui:if>
    <ui:else>
        <ui:group let:committedCount=\"{= teamwork:tagCountWithStatus(?projectGraph, teamwork:Committed) }\">
            <teamwork:DashboardGadgetContainer arg:label=\"{= ?title }\">
                <ui:insert ui:into=\"subtitle\">
                    <div>{= ?tagCount } Workflows exist.</div>
                    <div>{= ?committedCount } of them ({= round(((?committedCount / ?tagCount) * 100)) }%) have beeen committed.</div>
                </ui:insert>
                <ui:insert ui:into=\"body\">
                    <swa:PieChart arg:dataLabels=\"percent\" arg:height=\"{= 160 }\" arg:resultSet='{#
                            SELECT ?value (?status AS ?resource) ?label
                            WHERE {
                                GRAPH &lt;http://topbraid.org/teamwork&gt; {
                                    ?status a teamwork:TagStatus .
                                    BIND (ui:label(?status) AS ?baseLabel) .
                                } .
                                BIND (teamwork:tagCountWithStatus(?projectGraph, ?status) AS ?value) .
                                BIND (CONCAT(str(?value), \" \", ?baseLabel) AS ?label) .
                                FILTER (?value &gt; 0) .
                            }
                            ORDER BY (?status) }' arg:seriesColors=\"['#6AC20A','#EFB700','#FF6060','#C0C0FF']\" arg:showLegend=\"{= true }\" arg:width=\"{= 300 }\"/>
                </ui:insert>
            </teamwork:DashboardGadgetContainer>
        </ui:group>
    </ui:else>
</ui:group>
"""^^ui:Literal ;
  rdfs:label "Tag status dashboard gadget" ;
  rdfs:subClassOf teamwork:DashboardGadgets ;
.
teamwork:ValidationDashboardGadget
  a teamwork:DashboardGadget ;
  teamwork:dashboardSection teamwork:CompletenessAndValidityDashboardSection ;
  ui:prototype """
<ui:group letrs:data=\"{#
        SELECT ?value1 ?value2 ?label ?timeStamp
        WHERE {
            BIND (teamwork:teamGraph(?projectGraph) AS ?teamGraph) .
            GRAPH ?teamGraph {
                ?r a teamwork:ValidationReport .
                ?r teamwork:errorCount ?value1 .
                ?r teamwork:warningCount ?value2 .
                ?r teamwork:timeStamp ?timeStamp .
            } .
        }
        ORDER BY (?timeStamp) }\">
    <ui:group let:label=\"Data Validity over Time\">
        <ui:if ui:condition=\"{= spr:isEmpty(?data) }\">
            <teamwork:DashboardGadgetContainer arg:iconName=\"Unknown\" ui:args=\"*\">
                <ui:insert ui:into=\"subtitle\">
                    <div>No constraint violations have been recorded.</div>
                    <div>Run <b>Problems and Suggestions Report</b> on the <b>Reports</b> tab.</div>
                </ui:insert>
            </teamwork:DashboardGadgetContainer>
        </ui:if>
        <ui:else let:last=\"{= spr:rowCount(?data) - 1 }\">
            <ui:group let:errorCount=\"{= spr:cell(?data, ?last, 0) }\" let:lastEditTime=\"{= teamwork:lastChangeTime(?projectGraph) }\" let:timeStamp=\"{= spr:cell(?data, ?last, 3) }\" let:warningCount=\"{= spr:cell(?data, ?last, 1) }\">
                <teamwork:DashboardGadgetContainer arg:iconName=\"{= IF((?lastEditTime &gt; ?timeStamp), &quot;Unknown&quot;, IF((?errorCount &gt; 0), &quot;Error&quot;, IF((?warningCount &gt; 0), &quot;Warning&quot;, &quot;OK&quot;))) }\" ui:args=\"*\">
                    <ui:insert ui:into=\"subtitle\">
                        <div>
                            <span>{= spr:rowCount(?data) } reports shown.</span>
                            <br/>
                            <span>Most recent report from {= ui:label(?timeStamp) }:</span>
                            <br/>
                            <span>{= ?errorCount } Errors, {= ?warningCount } Warnings</span>
                            <ui:if ui:condition=\"{= ?lastEditTime &gt; ?timeStamp }\">
                                <span class=\"teamwork-dashboard-gadget-warning\">&nbsp;(This report is out of date)</span>
                            </ui:if>
                        </div>
                    </ui:insert>
                    <ui:insert ui:into=\"body\">
                        <swa:LineChart arg:height=\"{= 120 }\" arg:minValue=\"{= 0 }\" arg:resultSet=\"{= ?data }\" arg:seriesColors=\"['#FF0000','#EFB700']\" arg:seriesLabels=\"Errors,Warnings\" arg:showLegend=\"{= true }\" arg:width=\"{= 360 }\"/>
                    </ui:insert>
                </teamwork:DashboardGadgetContainer>
            </ui:group>
        </ui:else>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  rdfs:label "Validation dashboard gadget" ;
  rdfs:subClassOf teamwork:DashboardGadgets ;
.
teamwork:dashboardGadget
  a rdf:Property ;
  rdfs:comment "Lists the gadgets that shall appear on the Dashboard tab for vocabularies of this type." ;
  rdfs:domain teamwork:ProjectType ;
  rdfs:label "dashboard gadget" ;
  rdfs:range teamwork:DashboardGadget ;
.
teamwork:dashboardGadgetIndex
  a rdf:Property ;
  rdfs:domain teamwork:DashboardGadget ;
  rdfs:label "dashboard gadget index" ;
  rdfs:range xsd:integer ;
.
teamwork:dashboardSection
  a rdf:Property ;
  rdfs:domain teamwork:DashboardGadget ;
  rdfs:label "dashboard section" ;
  rdfs:range teamwork:DashboardSection ;
.
<http://topbraid.org/teamworkdashboard>
  a owl:Ontology ;
  owl:imports <http://topbraid.org/teamwork.ui> ;
  owl:versionInfo "Created with TopBraid Composer" ;
.
