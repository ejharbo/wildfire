# baseURI: http://teamwork.topbraidlive.org/ui/tracker
# imports: http://server.topbraidlive.org/system-applications/teamworkconfig
# imports: http://topbraid.org/swa
# prefix: tracker

@prefix adminguide: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix autotagger: <http://evn.topbraidlive.org/autotagger#> .
@prefix cfg: <http://server.topbraidlive.org/web/2009/config#> .
@prefix charts: <http://uispin.org/charts#> .
@prefix compliance: <http://topbraid.org/compliance#> .
@prefix composite: <http://www.topbraid.org/2007/05/composite.owl#> .
@prefix conceptmatch: <http://topbraid.org/conceptmatch#> .
@prefix config: <http://server.topbraidlive.org/dynamic/config#> .
@prefix contact: <http://www.w3.org/2000/10/swap/pim/contact#> .
@prefix core-soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix crosswalk: <http://topbraid.org/crosswalk#> .
@prefix crosswalk.spin: <http://topbraid.org/crosswalk.spin#> .
@prefix crosswalkapp: <http://topbraid.org/swa/crosswalkapp#> .
@prefix crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#> .
@prefix css: <http://uispin.org/css#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dashboard: <http://example.org/dashboard#> .
@prefix dataset: <http://teamwork.topbraidlive.org/dataset#> .
@prefix datasetapp: <http://topbraid.org/swa/datasetapp#> .
@prefix datasetviewer: <http://topbraid.org/swa/datasetviewer#> .
@prefix datatype: <http://qudt.org/vocab/datatype/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcam: <http://purl.org/dc/dcam/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix default: <http://uispin.org/default#> .
@prefix defaultapp: <http://topbraid.org/swa/defaultapp#> .
@prefix deployProjectToServer: <http://server.topbraidlive.org/doc/deployProjectToServer#> .
@prefix devguide: <http://evn.topbraidlive.org/evndoc.www/devguide#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix doc: <http://www.w3.org/2000/10/swap/pim/doc#> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix edg: <http://edg.topbraid.solutions/model/> .
@prefix edg.c: <http://edg.topbraid.solutions/controller/> .
@prefix edg.glossary: <http://edg.topbraid.solutions/glossary/> .
@prefix edg.sqoop: <http://edg.topbraid.solutions/model/sqoop/> .
@prefix edg.v: <http://edg.topbraid.solutions/view/> .
@prefix eeh-lib: <http://www.environmenthub.no/spin/1.0/eeh-lib#> .
@prefix eeh-reportlib: <http://www.environmenthub.no/spin/1.0/eeh-reportlib#> .
@prefix elements: <http://purl.org/dc/elements/1.1/> .
@prefix email: <http://topbraid.org/email#> .
@prefix evn: <http://topbraid.org/evn/evn#> .
@prefix evnAdminIndex: <http://evn.topbraidlive.org/evnAdminIndex#> .
@prefix evnIntro: <http://evn.topbraidlive.org/evndoc.www/evnIntro#> .
@prefix evndoc: <http://evn.topbraidlive.org/evndoc.www/evndoc#> .
@prefix evnimport: <http://evn.topbraidlive.org/uispin/evnimport#> .
@prefix evninstallguide: <http://teamwork.topbraidlive.org/doc/evninstallguide#> .
@prefix evnui: <http://evn.topbraidlive.org/ui#> .
@prefix ex: <http://example.org/> .
@prefix extjs: <http://uispin.com/extjs#> .
@prefix flow: <http://www.w3.org/2005/01/wf/flow#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix formTemplate: <http://teamwork.topbraidlive.org/system/formTemplate#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix gettingstarted: <http://evn.topbraidlive.org/evndoc.www/gettingstarted#> .
@prefix glossary: <http://evn.topbraidlive.org/evndoc.www/glossary#> .
@prefix governance: <http://topbraid.org/teamworkgovernance.ui#> .
@prefix gr: <http://purl.org/goodrelations/v1#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix graphql.search: <http://teamwork.topbraidlive.org/graphql.search#> .
@prefix html: <http://uispin.org/html#> .
@prefix imported: <http://topbraid.org/imported#> .
@prefix json: <http://topbraid.org/json#> .
@prefix kennedys: <http://topbraid.org/examples/kennedys#> .
@prefix let: <http://uispin.org/let#> .
@prefix letrs: <http://uispin.org/letrs#> .
@prefix list: <http://jena.hpl.hp.com/ARQ/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix metadata: <http://topbraid.org/metadata#> .
@prefix ontologyprojects: <http://teamwork.topbraidlive.org/ontologyprojects#> .
@prefix ontologyviewer: <http://topbraid.org/swa/ontologyviewer#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix permissionGroupMgmt: <http://server.topbraidlive.org/doc/permissionGroupMgmt#> .
@prefix pg: <http://server.topbraidlive.org/web/2013/permissiongroups#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix provo: <http://www.w3.org/ns/prov#> .
@prefix quantity: <http://qudt.org/vocab/quantity/> .
@prefix qudd: <http://qudt.org/schema/datastructure/> .
@prefix quds: <http://qudt.org/schema/datastructure/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt-refdata: <http://qudt.org/vocab/refdata/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix raci: <http://topbraid.org/raci#> .
@prefix raci.spin: <http://topbraid.org/raci.spin#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdm: <http://rdm.topbraidlive.org/rdm/> .
@prefix rdmapp: <http://rdm.topbraidlive.org/rdmapp#> .
@prefix rdmfact: <http://topbraid.org/rdmfact#> .
@prefix rdmprojects: <http://rdm.topbraidlive.org/rdmprojects#> .
@prefix rdmviewer: <http://rdm.topbraidlive.org/rdmviewer#> .
@prefix saf: <http://topbraid.org/saf/> .
@prefix safconfig: <http://topbraid.org/safconfig/> .
@prefix safm: <http://saf.topbraidlive.org/metaschema/> .
@prefix savedQueries: <http://teamwork.topbraidlive.org/ui/savedQueries#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix search: <http://topbraid.org/search#> .
@prefix search.spin: <http://topbraid.org/search.spin#> .
@prefix server: <http://server.topbraidlive.org/server.ui#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sharepoint: <http://topbraid.org/sharepoint#> .
@prefix sharepoint.spin: <http://topbraid.org/sharepoint.spin#> .
@prefix sioc: <http://rdfs.org/sioc/ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosapp: <http://evn.topbraidlive.org/uiplugins#> .
@prefix skostemplate: <http://topbraid.org/spin/skostemplates#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix softwareprojects: <http://teamwork.topbraidlive.org/software/softwareprojects#> .
@prefix solr: <http://topbraid.org/solr#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparqlmotionlib-swp: <http://topbraid.org/sparqlmotionlib-swp#> .
@prefix sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#> .
@prefix spell: <http://topbraid.org/spellcheckresults#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spin.ui: <http://spinrdf.org/spin.ui#> .
@prefix spinx: <http://spinrdf.org/spinx#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix spl-dynamic-ranges: <http://spinrdf.org/spl-dynamic-ranges#> .
@prefix spr: <http://spinrdf.org/spr#> .
@prefix spra: <http://spinrdf.org/spra#> .
@prefix status: <http://topbraid.org/status#> .
@prefix style: <http://uispin.org/style#> .
@prefix svg: <http://uispin.org/svg#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix swaclasses: <http://topbraid.org/swaclasses#> .
@prefix swadoc: <http://topbraid.org/swadoc#> .
@prefix swaeditor: <http://topbraid.org/swaeditor#> .
@prefix swaowl: <http://topbraid.org/swaowl#> .
@prefix swash: <http://topbraid.org/swash#> .
@prefix swashacl: <http://topbraid.org/swashacl#> .
@prefix swauml: <http://topbraid.org/swauml#> .
@prefix swon: <http://uispin.org/swon#> .
@prefix sxml: <http://topbraid.org/sxml#> .
@prefix tables: <http://topbraid.org/tables#> .
@prefix tagger: <http://evn.topbraidlive.org/tagger#> .
@prefix taggerprojects: <http://evn.topbraidlive.org/taggerprojects#> .
@prefix task: <http://topbraid.org/task#> .
@prefix tasks: <http://topbraid.org/tasks#> .
@prefix tasks.spin: <http://topbraid.org/tasks.spin#> .
@prefix taxonomies: <http://evn.topbraidlive.org/evnprojects#> .
@prefix tbl: <http://topbraidlive.org/functions#> .
@prefix tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#> .
@prefix tbladmindoc: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix tblinstallguide: <http://server.topbraidlive.org/doc/tblinstallguide#> .
@prefix tblui: <http://server.topbraidlive.org/tblui#> .
@prefix teaminstallsec: <http://teamwork.topbraidlive.org/doc/teamworkInstallGuideSections#> .
@prefix teamwork: <http://topbraid.org/teamwork#> .
@prefix teamworkAdmin: <http://teamwork.topbraidlive.org/doc/teamworkAdmin#> .
@prefix teamworkconfig: <http://server.topbraidlive.org/system-applications/teamworkconfig#> .
@prefix teamworkconstraints: <http://topbraid.org/teamworkconstraints#> .
@prefix teamworkdashboard: <http://topbraid.org/teamworkdashboard#> .
@prefix teamworknotifications: <http://topbraid.org/teamworknotifications#> .
@prefix teamworkrules: <http://topbraid.org/teamworkrules#> .
@prefix teamworkscripts: <http://topbraid.org/teamworkscripts#> .
@prefix teamworkupdate: <http://teamworkAPI.topbraid.com/teamworkUpdate#> .
@prefix textindex: <http://topbraid.org/textindex#> .
@prefix tops: <http://www.topbraid.org/tops#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix tosh.ui: <http://topbraid.org/tosh.ui#> .
@prefix tracker: <http://teamwork.topbraidlive.org/ui/tracker#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix uitest: <http://uispin.org/test#> .
@prefix uix: <http://topbraidlive.org/uix#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix userAdminIndex: <http://evn.topbraidlive.org/userAdminIndex#> .
@prefix userIndex: <http://evn.topbraidlive.org/evndoc.www/userIndex#> .
@prefix userdat: <http://teamwork.topbraidlive.org/ui/userdata> .
@prefix userdata: <http://teamwork.topbraidlive.org/ui/userdata#> .
@prefix usingtagger: <http://evn.topbraidlive.org/taggerdoc.www/usingtagger#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix victory: <http://edg.topbraid.solutions/victory/> .
@prefix voag: <http://voag.linkedmodel.org/voag/> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix wf: <http://www.w3.org/2005/01/wf/flow#> .
@prefix wot: <http://xmlns.com/wot/0.1/> .
@prefix xhtml: <http://topbraid.org/xhtml#> .
@prefix xlink: <http://www.w3.org/1999/xlink#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

arg:projectName
  a rdf:Property ;
  rdfs:subPropertyOf sp:arg ;
.
<http://teamwork.topbraidlive.org/ui/tracker>
  a owl:Ontology ;
  rdfs:comment "Implements an integration of TopBraid with an external Issue Tracker, defaulting to JIRA. Other trackers may be supported using ui:overrides." ;
  owl:imports <http://server.topbraidlive.org/system-applications/teamworkconfig> ;
  owl:imports <http://topbraid.org/swa> ;
.
tracker:CreateJIRAIssueResourceAction
  a swa:ResourceAction ;
  arg:appName "Editor" ;
  arg:condition [
      a sp:if ;
      sp:arg1 [
          a sp:and ;
          sp:arg1 [
              a sp:isIRI ;
              sp:arg1 [
                  sp:varName "resource" ;
                ] ;
            ] ;
          sp:arg2 [
              a tracker:isJIRAConfiguredForProject ;
              arg:projectGraph [
                  a teamwork:currentMasterGraph ;
                ] ;
            ] ;
        ] ;
      sp:arg2 true ;
      sp:arg3 [
          sp:varName "none" ;
        ] ;
    ] ;
  arg:group "Tracker" ;
  arg:onSelect "teamwork.createJIRAIssue(resourceURI)" ;
  rdfs:label "Create JIRA Issue" ;
.
tracker:JIRAProjectTab
  a teamwork:ProjectTab ;
  teamwork:linkExpression [
      a sp:concat ;
      sp:arg1 [
          a tracker:getJIRAURL ;
        ] ;
      sp:arg2 "issues/?jql=project%20%3D%20" ;
      sp:arg3 [
          a tracker:getJIRAProjectKey ;
          arg:projectGraph [
              sp:varName "projectGraph" ;
            ] ;
        ] ;
      sp:arg4 [
          a sp:coalesce ;
          sp:arg1 [
              a tracker:getJIRAStatusesClause ;
            ] ;
          sp:arg2 "" ;
        ] ;
    ] ;
  teamwork:pluginIndex 41 ;
  teamwork:pluginValidExpression [
      a tracker:isJIRAConfiguredForProject ;
      arg:projectGraph [
          sp:varName "projectGraph" ;
        ] ;
    ] ;
  teamwork:validForACResults true ;
  teamwork:validForTags false ;
  html:target "_new" ;
  rdfs:label "JIRA" ;
  rdfs:subClassOf teamwork:ProjectTabs ;
.
tracker:ProjectTrackerButton
  a ui:NodeClass ;
  ui:prototype """
<ui:if ui:condition=\"{= tracker:isJIRAConfiguredForProject(?projectGraph) }\">
    <span>
        <i aria-hidden=\"true\" class=\"fas fa-external-link-alt\"/>
        <a href=\"{= tracker:getJIRAURL() }issues/?jql=project%20%3D%20{= tracker:getJIRAProjectKey(?projectGraph) }{= tracker:getJIRAStatusesClause() }\" id=\"jira-link\" target=\"_new\">Open in JIRA</a>
    </span>
</ui:if>
"""^^ui:Literal ;
  rdfs:comment "Renders a link that opens the JIRA project associated with the Teamwork project in a new tab. Not currently used, replaced by JIRAProjectTab, but left for documentation purposes." ;
  rdfs:subClassOf teamwork:ProjectElements ;
.
tracker:SearchLabelOnJIRAResourceAction
  a swa:ResourceAction ;
  arg:appName "Editor" ;
  arg:condition [
      a sp:if ;
      sp:arg1 [
          a sp:and ;
          sp:arg1 [
              a sp:isIRI ;
              sp:arg1 [
                  sp:varName "resource" ;
                ] ;
            ] ;
          sp:arg2 [
              a tracker:isJIRAConfiguredForProject ;
              arg:projectGraph [
                  a teamwork:currentMasterGraph ;
                ] ;
            ] ;
        ] ;
      sp:arg2 true ;
      sp:arg3 [
          sp:varName "none" ;
        ] ;
    ] ;
  arg:group "Tracker" ;
  arg:onSelect "teamwork.searchLabelOnJIRA(resourceURI)" ;
  rdfs:label "Search label on JIRA" ;
.
tracker:SearchURIOnJIRAResourceAction
  a swa:ResourceAction ;
  arg:appName "Editor" ;
  arg:condition [
      a sp:if ;
      sp:arg1 [
          a sp:and ;
          sp:arg1 [
              a sp:isIRI ;
              sp:arg1 [
                  sp:varName "resource" ;
                ] ;
            ] ;
          sp:arg2 [
              a tracker:isJIRAConfiguredForProject ;
              arg:projectGraph [
                  a teamwork:currentMasterGraph ;
                ] ;
            ] ;
        ] ;
      sp:arg2 true ;
      sp:arg3 [
          sp:varName "none" ;
        ] ;
    ] ;
  arg:group "Tracker" ;
  arg:onSelect "teamwork.searchURIOnJIRA(resourceURI)" ;
  rdfs:label "Search URI on JIRA" ;
.
tracker:TrackerConfigFormPlugin
  a ui:NodeClass ;
  ui:prototype """
<swa:ObjectsEnum arg:label=\"JIRA Integration Parameters\" default:labelWidth=\"250px\" default:subject=\"{= ?subject }\">
    <swa:Object arg:editWidget=\"{= swa:PlainTextFieldEditor }\" arg:label=\"JIRA Server URL\" arg:predicate=\"{= cfg:jiraURL }\"/>
    <swa:Object arg:editWidget=\"{= swa:PlainTextFieldEditor }\" arg:label=\"JIRA Issue Statuses\" arg:predicate=\"{= cfg:jiraStatuses }\"/>
    <swa:Object arg:editWidget=\"{= swa:PlainTextFieldEditor }\" arg:label=\"JIRA User Name\" arg:predicate=\"{= cfg:jiraUser }\"/>
    <tbladmin:PasswordSection arg:config=\"{= ?subject }\" arg:name=\"JIRA Password\" arg:urlProperty=\"{= cfg:jiraURL }\" arg:userNameProperty=\"{= cfg:jiraUser }\"/>
</swa:ObjectsEnum>
"""^^ui:Literal ;
  rdfs:subClassOf teamworkconfig:ConfigFormPlugins ;
.
tracker:TrackerManagePlugin
  a teamwork:ManagePlugin ;
  teamwork:pluginValidExpression true ;
  ui:prototype """
<ui:if ui:condition=\"{= tracker:isJIRAConfigured() }\">
    <ui:setContext let:teamGraph=\"{= teamwork:teamGraph(?projectGraph) }\" ui:queryGraph=\"{= teamwork:teamGraph(?projectGraph) }\" ui:silentTransactions=\"{= true }\">
        <teamwork:ActionLink arg:comment=\"The JIRA project key is the abbreviated name of a project, e.g. MyVocabulary, that is also used by JIRA to identify issues.\" arg:icon=\"{= ui:lib() }/teamwork/build/images/teamwork/JIRA-96x96.png\" arg:title=\"JIRA Project Key\">
            <div>
                <span>Project Key:&nbsp;</span>
                <input class=\"form-control\" type=\"text\" value=\"{= tracker:getJIRAProjectKey(?projectGraph) }\">
                    <ui:handle arg:value=\"$(this).val() &amp;&amp; $(this).val() != '' ? '&quot;' + $(this).val() + '&quot;' : 0\" ui:event=\"onchange\">
                        <ui:setPropertyValue arg:property=\"{= tracker:jiraProjectKey }\" arg:value=\"{= IF((?value != 0), ?value, ?none) }\" ui:this=\"{= ?teamGraph }\"/>
                    </ui:handle>
                </input>
            </div>
        </teamwork:ActionLink>
    </ui:setContext>
</ui:if>
"""^^ui:Literal ;
  rdfs:comment "Implements an input field to enter the JIRA project key for the given vocabulary. This is only visible if a JIRA has been configured (globally)." ;
  rdfs:label "JIRA project key plugin" ;
  rdfs:subClassOf teamwork:ManagePlugins ;
.
tracker:getJIRACreateIssueURL
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:optional true ;
      spl:predicate arg:resource ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "An optional resource to also return the label of." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:pid=\"{= tracker:getJIRAProjectId(tracker:getJIRAProjectKey(teamwork:currentMasterGraph())) }\">
    <ui:if ui:condition=\"{= bound(?pid) }\">
        <swon:Object let:desc=\"For {= ui:label(?resource) } ({= ?resource }):\">
            <swon:Value arg:name=\"url\" arg:value=\"{= tracker:getJIRAURL() }CreateIssueDetails!init.jspa?issuetype=3&amp;pid={= ?pid }&amp;description={= ui:encodeURL(?desc) }\"/>
        </swon:Object>
    </ui:if>
    <ui:else>
        <ui:setResponseHeader ui:statusCode=\"{= 412 }\"/>
        <ui:group>TopBraid misconfigured for JIRA</ui:group>
    </ui:else>
</ui:group>
"""^^ui:Literal ;
  rdfs:label "get JIRA create issue URL" ;
  rdfs:subClassOf ui:JSONServices ;
.
tracker:getJIRAProjectId
  a ui:Function ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:projectName ;
      spl:valueType xsd:string ;
      rdfs:comment "The JIRA project name (e.g. \"PLAT\")." ;
    ] ;
  spin:returnType xsd:string ;
  ui:prototype """
<sml:ImportTextFromURL sm:outputVariable=\"text\" sml:securePasswordURL=\"{= tracker:getJIRAURL() }\" sml:url=\"{= tracker:getJIRAURL() }rest/api/2/project/{= ui:encodeURL(?projectName) }\" sml:userName=\"{= tracker:getJIRAUserName() }\">
    <swon:parse arg:text=\"{= ?text }\">
        <ui:setContext ui:queryGraph=\"{= ui:tempGraph }\">
            <ui:return ui:result=\"{= swon:getValue(?json, &quot;id&quot;) }\"/>
        </ui:setContext>
    </swon:parse>
</sml:ImportTextFromURL>
"""^^ui:Literal ;
  rdfs:comment "Gets the JIRA project id (pid) for a given JIRA project name. This does a REST service call using the provided user name and password against the JIRA API." ;
  rdfs:subClassOf ui:Functions ;
.
tracker:getJIRAProjectKey
  a spin:Function ;
  spin:body [
      a sp:Select ;
      sp:resultVariables (
          [
            sp:varName "result" ;
          ]
        ) ;
      sp:where (
          [
            a sp:Bind ;
            sp:expression [
                a teamwork:teamGraph ;
                sp:arg1 [
                    sp:varName "projectGraph" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "teamGraph" ;
              ] ;
          ]
          [
            a sp:Bind ;
            sp:expression [
                a spl:objectInGraph ;
                sp:arg1 [
                    sp:varName "teamGraph" ;
                  ] ;
                sp:arg2 tracker:jiraProjectKey ;
                sp:arg3 [
                    sp:varName "teamGraph" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "result" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:projectGraph ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The project graph." ;
    ] ;
  spin:private true ;
  spin:returnType xsd:string ;
  rdfs:comment "Gets the current configured JIRA server URL, which is unbound by default." ;
  rdfs:label "get JIRA URL" ;
  rdfs:subClassOf spin:Functions ;
.
tracker:getJIRASearchURL
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:optional true ;
      spl:predicate arg:resource ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "An optional resource to also return the label of." ;
    ] ;
  ui:private true ;
  ui:prototype """
<swon:Object>
    <swon:Value arg:name=\"url\" arg:value=\"{= tracker:getJIRAURL() }issues/?jql=project%20%3D%20{= tracker:getJIRAProjectKey(teamwork:currentMasterGraph()) }{= tracker:getJIRAStatusesClause() }%20AND%20text%20~%20\"/>
    <ui:if ui:condition=\"{= bound(?resource) }\">
        <swon:Value arg:name=\"label\" arg:value=\"{= ui:label(?resource) }\"/>
    </ui:if>
</swon:Object>
"""^^ui:Literal ;
  rdfs:label "get JIRA search URL" ;
  rdfs:subClassOf ui:JSONServices ;
.
tracker:getJIRAStatusesClause
  a ui:Function ;
  spin:private true ;
  spin:returnType xsd:string ;
  ui:prototype """
<ui:group let:s=\"{= smf:configParam(&quot;jiraStatuses&quot;) }\">
    <ui:if ui:condition=\"{= bound(?s) }\">
        <ui:group let:ss=\"{#
                SELECT GROUP_CONCAT(?clause; SEPARATOR=' OR ')
                WHERE {
                    ?status spif:split ( ?s &quot;,&quot; ) .
                    BIND (CONCAT(&quot;status=\\&quot;&quot;, ?status, &quot;\\&quot;&quot;) AS ?clause) .
                } }\">
            <ui:return ui:result=\"%20AND%20({= ?ss })\"/>
        </ui:group>
    </ui:if>
</ui:group>
"""^^ui:Literal ;
  rdfs:label "get JIRA statuses clause" ;
  rdfs:subClassOf ui:Functions ;
.
tracker:getJIRAURL
  a spin:Function ;
  spin:body [
      a sp:Select ;
      sp:resultVariables (
          [
            sp:varName "result" ;
          ]
        ) ;
      sp:where (
          [
            a sp:Bind ;
            sp:expression [
                a smf:configParam ;
                arg:param "jiraURL" ;
              ] ;
            sp:variable [
                sp:varName "result" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:private true ;
  spin:returnType xsd:string ;
  rdfs:comment "Gets the currently configured JIRA server URL, which is unbound by default." ;
  rdfs:label "get JIRA URL" ;
  rdfs:subClassOf spin:Functions ;
.
tracker:getJIRAUserName
  a spin:Function ;
  spin:body [
      a sp:Select ;
      sp:resultVariables (
          [
            sp:varName "result" ;
          ]
        ) ;
      sp:where (
          [
            a sp:Bind ;
            sp:expression [
                a smf:configParam ;
                arg:param "jiraUser" ;
              ] ;
            sp:variable [
                sp:varName "result" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:private true ;
  spin:returnType xsd:string ;
  rdfs:comment "Gets the currently configured JIRA user name, as configured by an admin." ;
  rdfs:label "get JIRA user name" ;
  rdfs:subClassOf spin:Functions ;
.
tracker:isJIRAConfigured
  a spin:Function ;
  spin:body [
      a sp:Ask ;
      sp:where (
          [
            a sp:Bind ;
            sp:expression [
                a tracker:getJIRAURL ;
              ] ;
            sp:variable [
                sp:varName "url" ;
              ] ;
          ]
          [
            a sp:Bind ;
            sp:expression [
                a tracker:getJIRAUserName ;
              ] ;
            sp:variable [
                sp:varName "userName" ;
              ] ;
          ]
          [
            a sp:Filter ;
            sp:expression [
                a sp:and ;
                sp:arg1 [
                    a sp:bound ;
                    sp:arg1 [
                        sp:varName "url" ;
                      ] ;
                  ] ;
                sp:arg2 [
                    a sp:bound ;
                    sp:arg1 [
                        sp:varName "userName" ;
                      ] ;
                  ] ;
              ] ;
          ]
        ) ;
    ] ;
  spin:private true ;
  spin:returnType xsd:boolean ;
  rdfs:comment "Checks if JIRA has been configured for this TopBraid instance, using the configuration parameters page." ;
  rdfs:label "is JIRA configured" ;
  rdfs:subClassOf spin:Functions ;
.
tracker:isJIRAConfiguredForProject
  a spin:Function ;
  spin:body [
      a sp:Ask ;
      sp:where (
          (
            [
              a sp:Filter ;
              sp:expression [
                  a tracker:isJIRAConfigured ;
                ] ;
            ]
          )
          [
            a sp:Bind ;
            sp:expression [
                a tracker:getJIRAProjectKey ;
                arg:projectGraph [
                    sp:varName "projectGraph" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "key" ;
              ] ;
          ]
          [
            a sp:Filter ;
            sp:expression [
                a sp:bound ;
                sp:arg1 [
                    sp:varName "key" ;
                  ] ;
              ] ;
          ]
        ) ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:projectGraph ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The project graph." ;
    ] ;
  spin:private true ;
  spin:returnType xsd:boolean ;
  rdfs:comment "Checks if JIRA has been configured for a given project. Also requires that JIRA is configured globally." ;
  rdfs:label "is JIRA configured for project" ;
  rdfs:subClassOf spin:Functions ;
.
tracker:jiraProjectKey
  a rdf:Property ;
  rdfs:comment "The JIRA project key, e.g. \"MyOntology\" specified per vocabulary and stored in the owl:Ontology instance of the vocabulary's TCH graph." ;
  rdfs:domain owl:Ontology ;
  rdfs:label "JIRA project key" ;
  rdfs:range xsd:string ;
.
