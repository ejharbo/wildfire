# baseURI: http://qudt.org/2.0/schema/datatype
# imports: http://datashapes.org/dash
# imports: http://qudt.org/2.0/schema/qudt
# imports: http://qudt.org/2.0/schema/scalar-datatypes
# imports: http://www.linkedmodel.org/schema/dtype
# imports: http://www.linkedmodel.org/schema/vaem
# imports: http://www.w3.org/2004/02/skos/core
# imports: http://www.w3.org/ns/shacl#

@prefix dash: <http://datashapes.org/dash#> .
@prefix datatype: <http://qudt.org/vocab/datatype/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix edg: <http://edg.topbraid.solutions/model/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix voag: <http://voag.linkedmodel.org/schema/voag#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

dcterms:contributor
  a owl:AnnotationProperty ;
  vaem:isMetadataFor <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "contributor" ;
.
dcterms:creator
  a owl:AnnotationProperty ;
  vaem:isMetadataFor <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "creator" ;
.
dcterms:description
  a owl:AnnotationProperty ;
  vaem:isMetadataFor <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "description" ;
.
dcterms:rights
  a owl:AnnotationProperty ;
  vaem:isMetadataFor <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "rights" ;
.
dcterms:subject
  a owl:AnnotationProperty ;
  vaem:isMetadataFor <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "subject" ;
.
dcterms:title
  a owl:AnnotationProperty ;
  vaem:isMetadataFor <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "title" ;
.
<http://qudt.org/2.0/schema/datatype>
  a owl:Ontology ;
  dcterms:contributor "Chip Masters" ;
  dcterms:contributor "Daniel Mekonnen" ;
  dcterms:creator "Ralph Hodgson" ;
  dcterms:description "The QUDT 'Datatype' ontology extends VAEM 'DTYPE' with further classes and properties for the specification of data types." ;
  dcterms:subject "Datatypes" ;
  dcterms:title "The QUDT Datatype Ontology" ;
  vaem:hasCatalogEntry voag:QUDT-SchemaCatalogEntry ;
  vaem:hasGraphMetadata <http://qudt.org/schema/datatype/GMD_datatype> ;
  vaem:hasGraphRole vaem:SchemaGraph ;
  vaem:hasLicenseType voag:CC-SHAREALIKE_3PT0-US ;
  vaem:intent "This ontology is to be used by other ontologies that need to reference type definitions." ;
  vaem:namespace "http://qudt.org/schema/dtype/" ;
  vaem:namespacePrefix "qudt.type" ;
  vaem:specificity 1 ;
  vaem:url "http://qudt.org/2.0/schema/dtype"^^xsd:anyURI ;
  rdfs:label "QUDT SCHEMA - Datatypes" ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports <http://qudt.org/2.0/schema/qudt> ;
  owl:imports <http://qudt.org/2.0/schema/scalar-datatypes> ;
  owl:imports <http://www.linkedmodel.org/schema/dtype> ;
  owl:imports <http://www.linkedmodel.org/schema/vaem> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  owl:imports sh: ;
.
<http://qudt.org/schema/datatype/GMD_datatype>
  a vaem:GraphMetaData ;
  dcterms:modified "2016-12-18"^^xsd:date ;
  dcterms:rights "<p>This ontology is issued under a restricted copyright license that prohibits reproduction, distribution, copying and any other form of sharing. The license agreement can be found at <a href='http://www.topquadrant.com/docs/legal/EULA.pdf'>http://www.topquadrant.com/docs/legal/EULA.pdf.</p>"^^rdf:HTML ;
  vaem:hasGraphRole vaem:SchemaGraph ;
  vaem:hasLicenseType <voag:TopQuadrant_ONTOLOGY-LICENSE> ;
  vaem:hasOwner vaem:TopQuadrant ;
  vaem:hasSteward vaem:TopQuadrant ;
  vaem:isMetadataFor <http://qudt.org/2.0/schema/datatype> ;
  vaem:name "EDG" ;
  vaem:namespace "http://edg.topbraid.solutions/model/" ;
  vaem:namespacePrefix "edg" ;
  vaem:owner "TopQuadrant, Inc." ;
  vaem:releaseDate "2016-12-18"^^xsd:date ;
  vaem:revision "1.0" ;
  vaem:usesNonImportedResource dcterms:abstract ;
  vaem:usesNonImportedResource dcterms:author ;
  vaem:usesNonImportedResource dcterms:created ;
  vaem:usesNonImportedResource dcterms:modified ;
  vaem:usesNonImportedResource dcterms:rights ;
  vaem:usesNonImportedResource dcterms:title ;
  vaem:usesNonImportedResource <http://voag.linkedmodel.org/voag#TopQuadrant_ONTOLOGY-LICENSE> ;
  vaem:withAttributionTo "Any references to this ontology should give attribution to TopQuadrant, Inc." ;
.
qudt:AlignmentType
  a owl:Class ;
  dcterms:description "Specifies how a physical data field is aligned. The alignment could be at a bit, byte or word boundary." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Alignment type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
  owl:oneOf (
      qudt:BitAligned
      qudt:ByteAligned
      qudt:WordAligned
    ) ;
.
qudt:ArrayDataOrderType
  a owl:Class ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Array data order type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
  owl:oneOf (
      qudt:ByColumn
      qudt:ByRow
      qudt:ByLeftMostIndex
    ) ;
.
qudt:ArrayIndex-elementType
  a sh:PropertyShape ;
  sh:path qudt:elementType ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:integer ;
.
qudt:ArrayType-byRow
  a sh:PropertyShape ;
  sh:path qudt:byRow ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:boolean ;
  sh:maxCount 1 ;
.
qudt:ArrayType-dataOrder
  a sh:PropertyShape ;
  sh:path qudt:dataOrder ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:ArrayDataOrderType ;
  sh:maxCount 1 ;
.
qudt:ArrayType-dimensionVector
  a sh:PropertyShape ;
  sh:path qudt:dimensionVector ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:DimensionVector ;
  sh:maxCount 1 ;
.
qudt:ArrayType-dimensionality
  a sh:PropertyShape ;
  sh:path qudt:dimensionality ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:integer ;
  sh:maxCount 1 ;
.
qudt:ArrayType-typeMatrix
  a sh:PropertyShape ;
  sh:path qudt:typeMatrix ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:typeMatrix ;
  sh:maxCount 1 ;
.
qudt:BigEndian
  a qudt:EndianType ;
  qudt:description "A big-endian machine stores the most significant byte first."^^rdf:HTML ;
  dtype:literal "big" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Big Endian" ;
.
qudt:BitAligned
  a qudt:AlignmentType ;
  qudt:description "Alignment at a bit level."^^rdf:HTML ;
  dtype:literal "bit" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Bit Aligned" ;
.
qudt:BitEncodingType
  a owl:Class ;
  dcterms:description "A bit encoding is a correspondence between the two possible values of a bit, 0 or 1, and some interpretation. For example, in a boolean encoding, a bit denotes a truth value, where 0 corresponds to False and 1 corresponds to True." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Bit Encoding" ;
  rdfs:subClassOf qudt:Encoding ;
.
qudt:BitField
  a rdfs:Datatype ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "bitfield" ;
  rdfs:subClassOf xsd:string ;
.
qudt:BitFieldType-encodedValue
  a sh:PropertyShape ;
  sh:path qudt:encodedValue ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:BitField ;
  sh:maxCount 1 ;
  sh:minCount 0 ;
.
qudt:BooleanEncoding
  a qudt:BooleanEncodingType ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Boolean Encoding" ;
.
qudt:BooleanEncodingType
  a owl:Class ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Boolean encoding type" ;
  rdfs:subClassOf qudt:Encoding ;
.
qudt:BooleanTypeEnumeratedValue
  a owl:Class ;
  dcterms:description "Specifies how a boolean value is expressed" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "boolean value" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
.
qudt:ByColumn
  a qudt:ArrayDataOrderType ;
  dtype:literal "byColumn" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "By Column" ;
.
qudt:ByLeftMostIndex
  a qudt:ArrayDataOrderType ;
  dtype:literal "byLeftMostIndex" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "By Left Most Index" ;
.
qudt:ByRow
  a qudt:ArrayDataOrderType ;
  dtype:literal "byRow" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "By Row" ;
.
qudt:ByteAligned
  a qudt:AlignmentType ;
  qudt:description "Alignment of a field at a byte boundary."^^rdf:HTML ;
  dtype:literal "byte" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Byte Aligned" ;
.
qudt:CRC32
  a rdfs:Datatype ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "CRC-32" ;
  rdfs:subClassOf xsd:integer ;
  owl:equivalentClass [
      a rdfs:Datatype ;
      owl:onDatatype xsd:integer ;
      owl:withRestrictions (
          [
            xsd:minInclusive 0 ;
          ]
          [
            xsd:maxInclusive "4294967295"^^xsd:unsignedInt ;
          ]
        ) ;
    ] ;
.
qudt:CT_COUNTABLY-INFINITE
  a qudt:CardinalityType ;
  qudt:description "A set of numbers is called countably infinite if there is a way to enumerate them.  Formally this is done with a bijection function that associates each number in the set with exactly one of the positive integers.  The set of all fractions is also countably infinite.  In other words, any set $X$ that has the same cardinality as the set of the natural numbers, or $| X | \\; =  \\; | \\mathbb N | \\; = \\; \\aleph0$, is said to be a countably infinite set."^^rdf:HTML ;
  qudt:literal "countable" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Countably Infinite Cardinality Type" ;
  prov:wasInfluencedBy "http://www.math.vanderbilt.edu/~schectex/courses/infinity.pdf"^^xsd:anyURI ;
.
qudt:CT_FINITE
  a qudt:CardinalityType ;
  qudt:description "Any set $X$ with cardinality less than that of the natural numbers, or $| X | \\; <  \\; | \\mathbb N | $, is said to be a finite set."^^rdf:HTML ;
  qudt:literal "finite" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Finite Cardinality Type" ;
.
qudt:CT_UNCOUNTABLE
  a qudt:CardinalityType ;
  qudt:description "Any set with cardinality greater than that of the natural numbers, or $| X | \\; >  \\; | \\mathbb N | $,  for example $| R| \\; =  \\;  c  \\; > |\\mathbb N |$, is said to be uncountable."^^rdf:HTML ;
  qudt:literal "uncountable" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Uncountable Cardinality Type" ;
.
qudt:CardinalityType
  a owl:Class ;
  dcterms:description "In mathematics, the cardinality of a set is a measure of the number of elements of the set.  For example, the set $A = {2, 4, 6}$ contains 3 elements, and therefore $A$ has a cardinality of 3. There are two approaches to cardinality – one which compares sets directly using bijections and injections, and another which uses cardinal numbers." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Cardinality Type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
  owl:oneOf (
      qudt:CT_COUNTABLY-INFINITE
      qudt:CT_FINITE
    ) ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Cardinal_number> ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Cardinality> ;
.
qudt:CompositeDatatype-alignment
  a sh:PropertyShape ;
  sh:path qudt:alignment ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:AlignmentType ;
.
qudt:CompositeDatatype-elementType
  a sh:PropertyShape ;
  sh:path qudt:elementType ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:Datatype ;
.
qudt:CompositeDatatype-padding
  a sh:PropertyShape ;
  sh:path qudt:padding ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:PaddingType ;
  sh:maxCount 1 ;
.
qudt:CompositionFunction
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Composition function" ;
  rdfs:subClassOf qudt:Function ;
.
qudt:CompositionTreeType-compositionFunction
  a sh:PropertyShape ;
  sh:path qudt:function ;
  sh:class qudt:CompositionFunction ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:Concept
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "QUDT Concept" ;
  rdfs:subClassOf owl:Thing ;
.
qudt:Container-elementTypeCount
  a sh:PropertyShape ;
  sh:path qudt:elementTypeCount ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class xsd:integer ;
  sh:hasValue 1 ;
.
qudt:Datatype
  a owl:Class ;
  a sh:NodeShape ;
  dcterms:description "A data type is a definition of a set of values (for example, \"all integers between 0 and 10\"), and the allowable operations on those values; the meaning of the data; and the way values of that type can be stored. Some types are primitive - built-in to the language, with no visible internal structure - e.g. Boolean; others are composite - constructed from one or more other types (of either kind) - e.g. lists, arrays, structures, unions. Object-oriented programming extends this with classes which encapsulate both the structure of a type and the operations that can be performed on it. Some languages provide strong typing, others allow implicit type conversion and/or explicit type conversion." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "QUDT Datatype" ;
  rdfs:subClassOf qudt:Concept ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Data_type> ;
  prov:wasInfluencedBy <http://foldoc.org/data+type> ;
  prov:wasInfluencedBy <http://www.princeton.edu/~achaney/tmve/wiki100k/docs/Data_type.html> ;
  sh:property qudt:Datatype-ansiSQLName ;
  sh:property qudt:Datatype-basis ;
  sh:property qudt:Datatype-bounded ;
  sh:property qudt:Datatype-cName ;
  sh:property qudt:Datatype-cardinality ;
  sh:property qudt:Datatype-description ;
  sh:property qudt:Datatype-id ;
  sh:property qudt:Datatype-javaName ;
  sh:property qudt:Datatype-jsName ;
  sh:property qudt:Datatype-matlabName ;
  sh:property qudt:Datatype-microsoftSQLServerName ;
  sh:property qudt:Datatype-mySQLName ;
  sh:property qudt:Datatype-odbcName ;
  sh:property qudt:Datatype-oleDBName ;
  sh:property qudt:Datatype-oracleSQLName ;
  sh:property qudt:Datatype-orderedType ;
  sh:property qudt:Datatype-protocolBuffersName ;
  sh:property qudt:Datatype-pythonName ;
  sh:property qudt:Datatype-vbName ;
.
qudt:Datatype-ansiSQLName
  a sh:PropertyShape ;
  sh:path qudt:ansiSQLName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-basis
  a sh:PropertyShape ;
  sh:path qudt:basis ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:Datatype ;
  sh:maxCount 1 ;
.
qudt:Datatype-bounded
  a sh:PropertyShape ;
  sh:path qudt:bounded ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class xsd:boolean ;
  sh:maxCount 1 ;
.
qudt:Datatype-cName
  a sh:PropertyShape ;
  sh:path qudt:cName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-cardinality
  a sh:PropertyShape ;
  sh:path qudt:cardinality ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:CardinalityType ;
  sh:maxCount 1 ;
.
qudt:Datatype-description
  a sh:PropertyShape ;
  sh:path vaem:description ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:deactivated true ;
  sh:maxCount 1 ;
.
qudt:Datatype-id
  a sh:PropertyShape ;
  sh:path qudt:id ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:deactivated true ;
.
qudt:Datatype-javaName
  a sh:PropertyShape ;
  sh:path qudt:javaName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-jsName
  a sh:PropertyShape ;
  sh:path qudt:jsName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-matlabName
  a sh:PropertyShape ;
  sh:path qudt:matlabName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-microsoftSQLServerName
  a sh:PropertyShape ;
  sh:path qudt:microsoftSQLServerName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-mySQLName
  a sh:PropertyShape ;
  sh:path qudt:mySQLName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-odbcName
  a sh:PropertyShape ;
  sh:path qudt:odbcName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-oleDBName
  a sh:PropertyShape ;
  sh:path qudt:oleDBName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-oracleSQLName
  a sh:PropertyShape ;
  sh:path qudt:oracleSQLName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-orderedType
  a sh:PropertyShape ;
  sh:path qudt:orderedType ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:OrderedType ;
  sh:maxCount 1 ;
.
qudt:Datatype-protocolBuffersName
  a sh:PropertyShape ;
  sh:path qudt:protocolBuffersName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-pythonName
  a sh:PropertyShape ;
  sh:path qudt:pythonName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Datatype-vbName
  a sh:PropertyShape ;
  sh:path qudt:vbName ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:EnumeratedValue
  a owl:Class ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf dtype:EnumeratedValue ;
.
qudt:Enumeration
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "QUDT Enumeration" ;
  rdfs:subClassOf dtype:Enumeration ;
  sh:property qudt:Enumeration-bits ;
  sh:property qudt:Enumeration-defaultValue ;
  sh:property qudt:Enumeration-encoding ;
  sh:property qudt:Enumeration-value ;
.
qudt:Enumeration-bits
  a sh:PropertyShape ;
  sh:path qudt:bits ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:datatype xsd:integer ;
  sh:maxCount 1 ;
.
qudt:Enumeration-defaultValue
  a sh:PropertyShape ;
  sh:path qudt:defaultValue ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:EnumeratedValue ;
.
qudt:Enumeration-encoding
  a sh:PropertyShape ;
  sh:path qudt:encoding ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:maxCount 1 ;
.
qudt:Enumeration-value
  a sh:PropertyShape ;
  sh:path dtype:value ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  sh:class qudt:EnumeratedValue ;
.
qudt:LimitType
  a owl:Class ;
  rdfs:label "Limit type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
.
qudt:OrdinalType
  a owl:Class ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Ordinal Type" ;
  rdfs:subClassOf qudt:ScalarDatatype ;
.
qudt:PaddingType
  a owl:Class ;
  dcterms:description "This describes how unused bits of a field are filled. Unused bits could be set to one or zero. A third option is \"don't care\"." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Padding type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
  owl:oneOf (
      qudt:PadWithOnes
      qudt:PadWithZeros
      qudt:PadWithAny
    ) ;
.
qudt:PartiallyOrdered
  a qudt:OrderedType ;
  qudt:description "Partial ordered structure."^^rdf:HTML ;
  qudt:literal "partial" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Partially Ordered" ;
.
qudt:TotallyOrdered
  a qudt:OrderedType ;
  qudt:description "Totally ordered structure."^^rdf:HTML ;
  qudt:literal "total" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Totally Ordered" ;
.
qudt:Unordered
  a qudt:OrderedType ;
  qudt:description "Unordered structure."^^rdf:HTML ;
  qudt:literal "unordered" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Unordered" ;
.
qudt:abbreviation
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "abbreviation" ;
.
qudt:accuracy
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  dcterms:description """Accuracy is the degree to which a given quantity is correct and free from error. For example, a quantity specified as 100+/-1 has an (absolute) accuracy of +/-1 (meaning its true value can fall in the range 99-101), while a quantity specified as 100+/-2% has a (relative) accuracy of +/-2% (meaning its true value can fall in the range 98-102).

The concepts of accuracy and precision are both closely related and often confused. While the accuracy of a number x is given by the number of significant decimal (or other) digits to the right of the decimal point in x, the precision of x is the total number of significant decimal (or other) digits. """ ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "accuracy" ;
.
qudt:alignment
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "alignment" ;
.
qudt:allowedPattern
  a owl:DatatypeProperty ;
  dcterms:description "This property relates a date string encoding (c.f. type:DateStringEncodingType) to one or more XML Schema compliant regular expressions that together determine the allowed lexical expressions that can be unambiguously parsed to determine a temporal quantity." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "allowed pattern" ;
.
qudt:ansiSQLName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "ANSI SQL name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:base
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "base" ;
.
qudt:basis
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "basis" ;
.
qudt:bitOrder
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "bit order" ;
.
qudt:bits
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "bits" ;
.
qudt:bounded
  a owl:DatatypeProperty ;
  dcterms:description "A datatype is bounded if its value space has either a finite upper and lower bound. Either bound may be inclusive or exclusive. " ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "bounded" ;
.
qudt:byRow
  a owl:DatatypeProperty ;
  a owl:DeprecatedProperty ;
  dcterms:description "A boolean to specify whether an array is presented row by row or column by column." ;
  vaem:rationale "Replaced with an enumeration. See type:ArrayDataOrderType" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "by row" ;
.
qudt:byteOrder
  a owl:ObjectProperty ;
  dcterms:description "Byte order is an enumeration of two values: 'Big Endian' and 'Little Endian' and is used to denote whether the most signiticant byte is either first or last, respectively." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "byte order" ;
.
qudt:bytes
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "bytes" ;
.
qudt:cName
  a owl:DatatypeProperty ;
  rdfs:comment "the name in the C programming language" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "C name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:cardinality
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "cardinality" ;
.
qudt:columns
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "columns" ;
.
qudt:dataOrder
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "data order" ;
.
qudt:defaultValue
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Default Value" ;
.
qudt:description
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "description" ;
.
qudt:dimension
  a owl:DatatypeProperty ;
  dcterms:description "The number of elements in a vector." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "dimension" ;
.
qudt:dimensionVector
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "dimension vector" ;
.
qudt:dimensionality
  a owl:DatatypeProperty ;
  dcterms:description "The number of dimensions making up an array. For example a 4 by 4 array has a dimensionality of 2. Whereas a vector or a string has a dimensionality of 1." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "dimensionality" ;
.
qudt:elementKind
  a owl:ObjectProperty ;
  dcterms:description "This property is used to describe the quantity kind for a dimensional data type." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "element kind" ;
.
qudt:elementLabel
  a rdf:Property ;
  dcterms:description "This property is used to label the field of a composite data structure." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "element label" ;
.
qudt:elementName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "element name" ;
.
qudt:elementType
  a rdf:Property ;
  rdfs:comment "This property is used to relate a structured data type with the data type of the structured type's elements. It is used for homogeneous structured data types, that is, those whose elements that are all of the same type." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "element type" ;
.
qudt:elementTypeCount
  a owl:DatatypeProperty ;
  dcterms:description "This property determines the allowed number of element types that a structured data type may have." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "element type count" ;
.
qudt:elementUnit
  a owl:FunctionalProperty ;
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "element unit" ;
.
qudt:encodedValue
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "encoded value" ;
.
qudt:encoding
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "encoding" ;
.
qudt:encodingDescription
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "encoding description" ;
.
qudt:enumeration
  a owl:ObjectProperty ;
  rdfs:label "enumeration" ;
.
qudt:exponent
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  rdfs:label "exponent" ;
.
qudt:field
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
.
qudt:float_X
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "float X" ;
.
qudt:float_Y
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "float Y" ;
.
qudt:float_Z
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "float Z" ;
.
qudt:hasDimension
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "has dimension" ;
.
qudt:hexbinary
  a rdfs:Datatype ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "hexbinary" ;
  rdfs:subClassOf xsd:string ;
  owl:equivalentClass [
      a rdfs:Datatype ;
      owl:onDatatype xsd:string ;
      owl:withRestrictions (
          [
            xsd:pattern "[0-9A-F]*" ;
          ]
        ) ;
    ] ;
.
qudt:id
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "id" ;
.
qudt:inverted
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "inverted" ;
.
qudt:isByteString
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "is byte string" ;
.
qudt:isComprisedOf
  a rdf:Property ;
.
qudt:javaName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "java name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:jsName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Javascript name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:length
  a owl:DatatypeProperty ;
  dcterms:description "The length of a structure, for example the size of a vector" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "length" ;
  rdfs:subPropertyOf qudt:maxLength ;
  rdfs:subPropertyOf qudt:minLength ;
.
qudt:lowerBound
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "lower bound" ;
.
qudt:mantissa
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  rdfs:comment "In scientific notation, the mantissa of a real number is the integer coefficient preceding the base raised to the exponent." ;
  rdfs:label "mantissa" ;
.
qudt:matlabName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "matlab name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:maxBits
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "maximum bits" ;
.
qudt:maxDepth
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "max depth" ;
.
qudt:maxExclusive
  a owl:DatatypeProperty ;
  dcterms:description "maxExclusive is the exclusive upper bound of the value space for a datatype with the ordered property. The value of maxExclusive must be in the value space of the base type or be equal to {value} in {base type definition}." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "max exclusive" ;
.
qudt:maxExponent
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "max exponent" ;
.
qudt:maxInclusive
  a owl:DatatypeProperty ;
  dcterms:description "maxInclusive is the inclusive upper bound of the value space for a datatype with the ordered property. The value of maxInclusive must be in the value space of the base type." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "max inclusive" ;
  rdfs:subPropertyOf qudt:upperBound ;
.
qudt:maxLength
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "max length" ;
.
qudt:maxMantissa
  a owl:DatatypeProperty ;
  qudt:description "<p>The maximium mantissa is the largest integer that may appear as a coefficient in a finite precision representation of a real number.  For a given numeric data type, the value of <em>maxMantissa}</em> (<em>M</em>) and the values of <em>base</em> (<em>b</em>) and  <em>precision</em> (<em>p</em>) are related by the formula: <em>M = b<sup></sup> - 1</em> .</p>"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "max mantissa" ;
.
qudt:microsoftSQLServerName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Microsoft SQL Server name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:minBits
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "minimum bits" ;
.
qudt:minExclusive
  a owl:DatatypeProperty ;
  dcterms:description "minExclusive is the exclusive lower bound of the value space for a datatype with the ordered property. The value of minExclusive must be in the value space of the base type or be equal to {value} in {base type definition}." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "min exclusive" ;
  rdfs:subPropertyOf qudt:lowerBound ;
.
qudt:minInclusive
  a owl:DatatypeProperty ;
  dcterms:description "minInclusive is the inclusive lower bound of the value space for a datatype with the ordered property. The value of minInclusive must be in the value space of the base type." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "min inclusive" ;
  rdfs:subPropertyOf qudt:lowerBound ;
.
qudt:minLength
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "min length" ;
.
qudt:minMantissa
  a owl:DatatypeProperty ;
  qudt:description "<p>The minimium mantissa is the negative integer with the greatest magnitude that may appear as a coefficient in a finite precision representation of a real number.  For a given numeric data type, the value of <em>minMantissa</em> (<em>M</em>) and the values of <em>base</em> (<em>b</em>) and <em>precision</em> (<em>p</em>) are related by the formula: <em>M = -(b<sup>p</sup> - 1)</em>.</p>"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "min mantissa" ;
.
qudt:minValue
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "minimum value" ;
.
qudt:modifiability
  a owl:ObjectProperty ;
  rdfs:comment "Reference to one in a list of enumerated elements that indicates whether data (e.g. variable or parameter) can be changed." ;
  rdfs:label "modifiability" ;
.
qudt:mySQLName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "MySQL name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:octets
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "octets" ;
.
qudt:odbcName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "ODBC name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:oleDBName
  a owl:DatatypeProperty ;
  dcterms:description "OLE DB (Object Linking and Embedding, Database, sometimes written as OLEDB or OLE-DB), an API designed by Microsoft, allows accessing data from a variety of sources in a uniform manner. The API provides a set of interfaces implemented using the Component Object Model (COM); it is otherwise unrelated to OLE. " ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "OLE DB name" ;
  rdfs:subPropertyOf qudt:id ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/OLE_DB> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/windows/desktop/ms714931(v=vs.85).aspx> ;
.
qudt:optional
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "optional" ;
.
qudt:oracleSQLName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "ORACLE SQL name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:orderInStructure
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "order in structure" ;
.
qudt:orderedType
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "ordered type" ;
.
qudt:orderingRelation
  a owl:FunctionalProperty ;
  a owl:ObjectProperty ;
  dcterms:description "This property identifies the mathematical comparison operator (such as \"<\" or \">\") that is used to order the elements of a collection." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Ordering Relation" ;
.
qudt:originDefinition
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "origin definition" ;
.
qudt:padding
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "padding" ;
.
qudt:pattern
  a owl:DatatypeProperty ;
  dcterms:description "A pattern is a constraint on the value space of a datatype which is achieved by constraining the lexical space to literals which match a specific pattern. The value of pattern must be a regular expression." ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "pattern" ;
.
qudt:precision
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  dcterms:description """Precision is the number of digits used to perform a given computation. The concepts of accuracy and precision are both closely related and often confused. While the accuracy of a number x is given by the number of significant decimal (or other) digits to the right of the decimal point in x, the precision of x is the total number of significant decimal (or other) digits.

For a given numeric data type, the value of type:precision (?p) is related to the values of type:maxMantissa (?M) and type:base (?b) by the formula 

?p := log(?b, ?M) 

where log(a,y) = x iff y=a^x.""" ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "precision" ;
.
qudt:protocolBuffersName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "protocol buffers name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:pythonName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "python name" ;
  rdfs:subPropertyOf qudt:id ;
.
qudt:rdfsDatatype
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "rdfs datatype" ;
.
qudt:realization
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "realization" ;
.
qudt:rgbCode
  a owl:DatatypeProperty ;
  rdfs:label "rgb code" ;
.
qudt:rollRotationDefinition
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "roll rotation definition" ;
  rdfs:subPropertyOf qudt:rotationDefinition ;
.
qudt:rows
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "rows" ;
.
qudt:signedness
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "signedness" ;
.
qudt:significantDigits
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "significant digits" ;
.
qudt:stringValue
  a owl:DatatypeProperty ;
  rdfs:label "string value" ;
  rdfs:subPropertyOf qudt:scalarValue ;
.
qudt:timeDatatype
  a owl:ObjectProperty ;
  rdfs:label "time datatype" ;
  rdfs:subPropertyOf qudt:type ;
.
qudt:totalDigits
  a owl:DatatypeProperty ;
  rdfs:label "total digits" ;
.
qudt:type
  a owl:ObjectProperty ;
  rdfs:comment "A reference to the specification of the data type of a variable or constant." ;
  rdfs:label "type" ;
.
qudt:upperBound
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "upper bound" ;
.
qudt:value
  a rdf:Property ;
  rdfs:comment "This property identifies the value associated with a data structure. The value may be a scalar or a reference to another object. The disjoint sub-properties of this data:value distinguish between scalar values and object references." ;
  rdfs:label "value" ;
  rdfs:subPropertyOf rdf:value ;
.
qudt:valueRange
  a owl:ObjectProperty ;
  rdfs:label "value range" ;
.
qudt:valueType
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "value type" ;
.
qudt:valueVector
  a owl:ObjectProperty ;
  rdfs:comment "A list of the values of elements in a Partial Array." ;
  rdfs:label "value vector" ;
.
qudt:vbName
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.0/schema/datatype> ;
  rdfs:label "Visual Basic name" ;
  rdfs:subPropertyOf qudt:id ;
.
