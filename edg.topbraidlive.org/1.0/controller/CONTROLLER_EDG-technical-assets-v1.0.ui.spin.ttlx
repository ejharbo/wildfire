# baseURI: http://edg.topbraid.solutions/1.0/project/technical-assets
# imports: http://edg.topbraid.solutions/1.0/diagram/lg/library-common
# imports: http://edg.topbraid.solutions/1.0/project/common
# imports: http://edg.topbraid.solutions/1.0/schema/controllers
# imports: http://edg.topbraid.solutions/1.0/schema/edg
# imports: http://edg.topbraid.solutions/1.0/schema/technical-assets
# imports: http://edg.topbraid.solutions/1.0/shapes/technical-assets
# imports: http://edg.topbraid.solutions/1.0/spin/library
# imports: http://spinrdf.org/spin
# imports: http://topbraid.org/metadata
# imports: http://topbraid.org/teamwork
# imports: http://uispin.org/ui

@prefix acjob: <http://evn.topbraidlive.org/tagger/acjob#> .
@prefix acpp: <http://topbraid.org/nlp/autoclassifier-preproc#> .
@prefix adminguide: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix autotagger: <http://evn.topbraidlive.org/autotagger#> .
@prefix cfg: <http://server.topbraidlive.org/web/2009/config#> .
@prefix charts: <http://uispin.org/charts#> .
@prefix compliance: <http://topbraid.org/compliance#> .
@prefix composite: <http://www.topbraid.org/2007/05/composite.owl#> .
@prefix conceptmatch: <http://topbraid.org/conceptmatch#> .
@prefix config: <http://server.topbraidlive.org/dynamic/config#> .
@prefix config-importers: <http://edg.topbraidlive.org/config/importers#> .
@prefix contact: <http://www.w3.org/2000/10/swap/pim/contact#> .
@prefix core-soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix corpus: <http://topbraid.org/corpus#> .
@prefix corpusprojects: <http://topbraid.org/corpus-projects#> .
@prefix crosswalk: <http://topbraid.org/crosswalk#> .
@prefix crosswalk.spin: <http://topbraid.org/crosswalk.spin#> .
@prefix crosswalkapp: <http://topbraid.org/swa/crosswalkapp#> .
@prefix crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#> .
@prefix css: <http://uispin.org/css#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dashboard: <http://example.org/dashboard#> .
@prefix datagraph: <http://teamwork.topbraidlive.org/datagraph/datagraphprojects#> .
@prefix dataset: <http://teamwork.topbraidlive.org/dataset#> .
@prefix datasetapp: <http://topbraid.org/swa/datasetapp#> .
@prefix datasetviewer: <http://topbraid.org/swa/datasetviewer#> .
@prefix datatype: <http://qudt.org/vocab/datatype/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcam: <http://purl.org/dc/dcam/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix ddl: <http://edg.topbraidlive.org/1.0/importers/ddl#> .
@prefix debug-swa: <http://debug.topbraidlive.org/1.0/swa/> .
@prefix default: <http://uispin.org/default#> .
@prefix defaultapp: <http://topbraid.org/swa/defaultapp#> .
@prefix deployProjectToServer: <http://server.topbraidlive.org/doc/deployProjectToServer#> .
@prefix devguide: <http://evn.topbraidlive.org/evndoc.www/devguide#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix doc: <http://www.w3.org/2000/10/swap/pim/doc#> .
@prefix document: <http://topbraid.org/document#> .
@prefix documents: <http://edg.topbraid.solutions/1.0/shapes/documents#> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix edg: <http://edg.topbraid.solutions/model/> .
@prefix edg-config: <http://edg.ext.topbraidlive.org/schema/config/importers#> .
@prefix edg-importer: <http://edg.topbraidlive.org/importer/> .
@prefix edg-qa: <http://edg.topbraidlive.org/utility/qa/> .
@prefix edg.c: <http://edg.topbraid.solutions/controller/> .
@prefix edg.global: <urn:x-evn-global:> .
@prefix edg.glossary: <http://edg.topbraid.solutions/glossary/> .
@prefix edg.sqoop: <http://edg.topbraid.solutions/model/sqoop/> .
@prefix edg.v: <http://edg.topbraid.solutions/view/> .
@prefix edgproduct: <http://edg.topbraidlive.org/edgproduct#> .
@prefix eeh-lib: <http://www.environmenthub.no/spin/1.0/eeh-lib#> .
@prefix eeh-reportlib: <http://www.environmenthub.no/spin/1.0/eeh-reportlib#> .
@prefix elements: <http://purl.org/dc/elements/1.1/> .
@prefix email: <http://topbraid.org/email#> .
@prefix evn: <http://topbraid.org/evn/evn#> .
@prefix evnAdminIndex: <http://evn.topbraidlive.org/evnAdminIndex#> .
@prefix evnIntro: <http://evn.topbraidlive.org/evndoc.www/evnIntro#> .
@prefix evndoc: <http://evn.topbraidlive.org/evndoc.www/evndoc#> .
@prefix evnimport: <http://evn.topbraidlive.org/uispin/evnimport#> .
@prefix evninstallguide: <http://teamwork.topbraidlive.org/doc/evninstallguide#> .
@prefix evnui: <http://evn.topbraidlive.org/ui#> .
@prefix ex: <http://example.org/> .
@prefix extjs: <http://uispin.com/extjs#> .
@prefix flow: <http://www.w3.org/2005/01/wf/flow#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix formTemplate: <http://teamwork.topbraidlive.org/system/formTemplate#> .
@prefix forms: <http://www.topbraid.org/2007/01/forms.owl#> .
@prefix frbr: <http://purl.org/vocab/frbr/core#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix gettingstarted: <http://evn.topbraidlive.org/evndoc.www/gettingstarted#> .
@prefix glossary: <http://evn.topbraidlive.org/evndoc.www/glossary#> .
@prefix governance: <http://topbraid.org/teamworkgovernance.ui#> .
@prefix gr: <http://purl.org/goodrelations/v1#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix graphql.search: <http://teamwork.topbraidlive.org/graphql.search#> .
@prefix html: <http://uispin.org/html#> .
@prefix imported: <http://topbraid.org/imported#> .
@prefix inference: <http://www.topbraid.org/2007/06/inference.owl#> .
@prefix jdbc: <http://edg.topbraidlive.org/1.0/importers/jdbc#> .
@prefix json: <http://topbraid.org/json#> .
@prefix kennedys: <http://topbraid.org/examples/kennedys#> .
@prefix let: <http://uispin.org/let#> .
@prefix letrs: <http://uispin.org/letrs#> .
@prefix lib-importer: <http://edg.topbraid.solutions/importer/lib#> .
@prefix lineage-transform: <http://edg.topbraid.solutions/transform/importer/lineage#> .
@prefix list: <http://jena.hpl.hp.com/ARQ/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix metadata: <http://topbraid.org/metadata#> .
@prefix o2o: <http://lib.topquadrant.com/owl/srg/o2o#> .
@prefix ontologyprojects: <http://teamwork.topbraidlive.org/ontologyprojects#> .
@prefix ontologyviewer: <http://topbraid.org/swa/ontologyviewer#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix permissionGroupMgmt: <http://server.topbraidlive.org/doc/permissionGroupMgmt#> .
@prefix pg: <http://server.topbraidlive.org/web/2013/permissiongroups#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix provo: <http://www.w3.org/ns/prov#> .
@prefix proxy-lineage: <http://edg.topbraid.solutions/proxy/importer/lineage#> .
@prefix quantity: <http://qudt.org/vocab/quantity/> .
@prefix qudd: <http://qudt.org/schema/datastructure/> .
@prefix quds: <http://qudt.org/schema/datastructure/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt-refdata: <http://qudt.org/vocab/refdata/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix raci: <http://topbraid.org/raci#> .
@prefix raci.spin: <http://topbraid.org/raci.spin#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdm: <http://rdm.topbraidlive.org/rdm/> .
@prefix rdmapp: <http://rdm.topbraidlive.org/rdmapp#> .
@prefix rdmfact: <http://topbraid.org/rdmfact#> .
@prefix rdmprojects: <http://rdm.topbraidlive.org/rdmprojects#> .
@prefix rdmviewer: <http://rdm.topbraidlive.org/rdmviewer#> .
@prefix saf: <http://topbraid.org/saf/> .
@prefix safconfig: <http://topbraid.org/safconfig/> .
@prefix safindex: <http://topbraid.org/safindex#> .
@prefix safm: <http://saf.topbraidlive.org/metaschema/> .
@prefix savedQueries: <http://teamwork.topbraidlive.org/ui/savedQueries#> .
@prefix scheduler: <http://topbraid.org/scheduler#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix search: <http://topbraid.org/search#> .
@prefix search.spin: <http://topbraid.org/search.spin#> .
@prefix server: <http://server.topbraidlive.org/server.ui#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shapesgraph: <http://teamwork.topbraidlive.org/shapesgraph/shapesgraphprojects#> .
@prefix sharepoint: <http://topbraid.org/sharepoint#> .
@prefix sharepoint.spin: <http://topbraid.org/sharepoint.spin#> .
@prefix sioc: <http://rdfs.org/sioc/ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosapp: <http://evn.topbraidlive.org/uiplugins#> .
@prefix skosshapes: <http://topbraid.org/skos.shapes#> .
@prefix skostemplate: <http://topbraid.org/spin/skostemplates#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix softwareprojects: <http://teamwork.topbraidlive.org/software/softwareprojects#> .
@prefix solr: <http://topbraid.org/solr#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparql: <http://datashapes.org/sparql#> .
@prefix sparqlmotionlib-swp: <http://topbraid.org/sparqlmotionlib-swp#> .
@prefix sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#> .
@prefix spell: <http://topbraid.org/spellcheckresults#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spin.ui: <http://spinrdf.org/spin.ui#> .
@prefix spinmap: <http://spinrdf.org/spinmap#> .
@prefix spinmapl: <http://topbraid.org/spin/spinmapl#> .
@prefix spinx: <http://spinrdf.org/spinx#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix spl-dynamic-ranges: <http://spinrdf.org/spl-dynamic-ranges#> .
@prefix spr: <http://spinrdf.org/spr#> .
@prefix spra: <http://spinrdf.org/spra#> .
@prefix ss: <http://www.topbraidcomposer.org/owl/2006/08/spreadsheets.owl#> .
@prefix stats: <http://topbraid.org/statistics#> .
@prefix status: <http://topbraid.org/status#> .
@prefix style: <http://uispin.org/style#> .
@prefix svg: <http://uispin.org/svg#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix swaclasses: <http://topbraid.org/swaclasses#> .
@prefix swadoc: <http://topbraid.org/swadoc#> .
@prefix swaeditor: <http://topbraid.org/swaeditor#> .
@prefix swaowl: <http://topbraid.org/swaowl#> .
@prefix swash: <http://topbraid.org/swash#> .
@prefix swashacl: <http://topbraid.org/swashacl#> .
@prefix swauml: <http://topbraid.org/swauml#> .
@prefix swon: <http://uispin.org/swon#> .
@prefix sxml: <http://topbraid.org/sxml#> .
@prefix tables: <http://topbraid.org/tables#> .
@prefix tablesmap: <http://topbraid.org/spin/tablesmap#> .
@prefix tagger: <http://evn.topbraidlive.org/tagger#> .
@prefix taggerprojects: <http://evn.topbraidlive.org/taggerprojects#> .
@prefix taggerspin: <http://evn.topbraidlive.org/taggerspin#> .
@prefix taggerui: <http://evn.topbraidlive.org/taggerui#> .
@prefix task: <http://topbraid.org/task#> .
@prefix tasks: <http://topbraid.org/tasks#> .
@prefix tasks.spin: <http://topbraid.org/tasks.spin#> .
@prefix taxonomies: <http://evn.topbraidlive.org/evnprojects#> .
@prefix tbl: <http://topbraidlive.org/functions#> .
@prefix tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#> .
@prefix tbladmindoc: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix tblinstallguide: <http://server.topbraidlive.org/doc/tblinstallguide#> .
@prefix tblui: <http://server.topbraidlive.org/tblui#> .
@prefix teaminstallsec: <http://teamwork.topbraidlive.org/doc/teamworkInstallGuideSections#> .
@prefix teamwork: <http://topbraid.org/teamwork#> .
@prefix teamworkAdmin: <http://teamwork.topbraidlive.org/doc/teamworkAdmin#> .
@prefix teamworkconfig: <http://server.topbraidlive.org/system-applications/teamworkconfig#> .
@prefix teamworkconstraints: <http://topbraid.org/teamworkconstraints#> .
@prefix teamworkdashboard: <http://topbraid.org/teamworkdashboard#> .
@prefix teamworknotifications: <http://topbraid.org/teamworknotifications#> .
@prefix teamworkrules: <http://topbraid.org/teamworkrules#> .
@prefix teamworkscripts: <http://topbraid.org/teamworkscripts#> .
@prefix teamworkupdate: <http://teamworkAPI.topbraid.com/teamworkUpdate#> .
@prefix textindex: <http://topbraid.org/textindex#> .
@prefix tika-importer: <http://teamwork.topbraidlive.org/corpus/tika-importer#> .
@prefix tops: <http://www.topbraid.org/tops#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix tosh.ui: <http://topbraid.org/tosh.ui#> .
@prefix tracker: <http://teamwork.topbraidlive.org/ui/tracker#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix uitest: <http://uispin.org/test#> .
@prefix uix: <http://topbraidlive.org/uix#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix userAdminIndex: <http://evn.topbraidlive.org/userAdminIndex#> .
@prefix userIndex: <http://evn.topbraidlive.org/evndoc.www/userIndex#> .
@prefix userdat: <http://teamwork.topbraidlive.org/ui/userdata> .
@prefix userdata: <http://teamwork.topbraidlive.org/ui/userdata#> .
@prefix usingtagger: <http://evn.topbraidlive.org/taggerdoc.www/usingtagger#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix victory: <http://edg.topbraid.solutions/victory/> .
@prefix visual: <http://topbraid.org/visual#> .
@prefix voag: <http://voag.linkedmodel.org/voag/> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix wf: <http://www.w3.org/2005/01/wf/flow#> .
@prefix wot: <http://xmlns.com/wot/0.1/> .
@prefix xhtml: <http://topbraid.org/xhtml#> .
@prefix xlink: <http://www.w3.org/1999/xlink#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://edg.topbraid.solutions/1.0/project/technical-assets>
  a owl:Ontology ;
  vaem:hasGraphMetadata <http://edg.topbraid.solutions/project/technical-assets/GMD_technical-assets> ;
  rdfs:label "technical-assets" ;
  owl:imports <http://edg.topbraid.solutions/1.0/diagram/lg/library-common> ;
  owl:imports <http://edg.topbraid.solutions/1.0/project/common> ;
  owl:imports <http://edg.topbraid.solutions/1.0/schema/controllers> ;
  owl:imports <http://edg.topbraid.solutions/1.0/schema/edg> ;
  owl:imports <http://edg.topbraid.solutions/1.0/schema/technical-assets> ;
  owl:imports <http://edg.topbraid.solutions/1.0/shapes/technical-assets> ;
  owl:imports <http://edg.topbraid.solutions/1.0/spin/library> ;
  owl:imports <http://spinrdf.org/spin> ;
  owl:imports <http://topbraid.org/metadata> ;
  owl:imports <http://topbraid.org/teamwork> ;
  owl:imports <http://uispin.org/ui> ;
  owl:versionInfo "Created with TopBraid Composer" ;
.
edg:ClearSessionVariables
  a ui:NodeClass ;
  ui:prototype """
<ui:group let:result=\"{= ui:setSessionAttribute(&quot;flowContext&quot;, &quot;&quot;) }\"/>
"""^^ui:Literal ;
  rdfs:comment "Added by RH 20190522 to reset session variables that control contexts for resource creation. An exampe of this is when a physical flow is created from a logical flow the souirce and target need to be the same. We need a conversation on other ways of doing this." ;
  rdfs:label "Clear session variables" ;
  rdfs:subClassOf swa:Elements ;
.
edg:CreateDirectMappingResourceHandler
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:contextResource ;
      spl:valueType edg:DirectMappingsCollection ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <!--ui:dumpScope ui:message=\"AAA: edg:CreateDirectMappingResourceHandler\"/-->
    <ui:transaction ui:checkConstraints=\"{= true }\" ui:logMessage=\"Create {= ui:label(?resourceType) } with URI {= ?uri }\" ui:metadata=\"{= ?metadata }\">
        <ui:preCondition ui:errorMessage=\"{= swa:labelExistsPreCondition(?label) }\">
            <ui:update ui:updateQuery=\"{!
                    INSERT {
                        ?resource a ?resourceType .
                        ?resource ?labelProperty ?prefLabel .
                        ?contextResource edg:mapping ?resource .
                    }
                    WHERE {
                        BIND (IRI(str(?uri)) AS ?resource) .
                        BIND (IF(bound(?labelLang), STRLANG(?label, ?labelLang), ?label) AS ?prefLabel) .
                        BIND (swa:labelProperty(?resourceType) AS ?labelProperty) .
                    } }\"/>
            <swa:createPrimaryKeyTriple ui:args=\"*\"/>
            <swa:addDefaultValues arg:resource=\"{= IRI(str(?uri)) }\"/>
        </ui:preCondition>
    </ui:transaction>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "The updates that need to happen to create a new resource with a given type." ;
  rdfs:label "Create direct mapping resource handler" ;
  rdfs:subClassOf swa:CreateHandlers ;
.
edg:CreateLogicalFlowResourceHandler
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <!--ui:dumpScope ui:message=\"AAA: edg:CreateLogicalFlowResourceHandler\"/-->
    <!-- TBD: revise for flow -->
    <ui:transaction ui:checkConstraints=\"{= true }\" ui:logMessage=\"Create {= ui:label(?resourceType) } with URI {= ?uri }\" ui:metadata=\"{= ?metadata }\">
        <ui:preCondition ui:errorMessage=\"{= swa:labelExistsPreCondition(?label) }\">
            <ui:update ui:updateQuery=\"{!
                    INSERT {
                        ?resource a ?resourceType .
                        ?resource ?labelProperty ?prefLabel .
                        ?contextResource edg:mapping ?resource .
                    }
                    WHERE {
                        BIND (IRI(str(?uri)) AS ?resource) .
                        BIND (IF(bound(?labelLang), STRLANG(?label, ?labelLang), ?label) AS ?prefLabel) .
                        BIND (swa:labelProperty(?resourceType) AS ?labelProperty) .
                    } }\"/>
            <swa:createPrimaryKeyTriple ui:args=\"*\"/>
            <swa:addDefaultValues arg:resource=\"{= IRI(str(?uri)) }\"/>
        </ui:preCondition>
    </ui:transaction>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "The updates that need to happen to create a new resource with a given type." ;
  rdfs:label "Create logical flow resource handler" ;
  rdfs:subClassOf swa:CreateHandlers ;
.
edg:CreateResourceDialogForFlowsPlugin
  a swa:CreateResourceDialogPlugin ;
  spin:constraint [
      a spl:Argument ;
      spl:optional true ;
      spl:predicate edg:resourceURIconstructorFunction ;
      spl:valueType rdfs:Resource ;
    ] ;
  swa:createResourceDialogPluginWeight [
      a swa:WeightedExpression ;
      swa:expression [
          a sp:exists ;
          sp:elements (
              [
                a sp:TriplePath ;
                sp:object edg:Flow ;
                sp:path [
                    a sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 0 ;
                    sp:subPath rdfs:subClassOf ;
                  ] ;
                sp:subject [
                    sp:varName "resourceType" ;
                  ] ;
              ]
            ) ;
        ] ;
      swa:weight 100 ;
    ] ;
  ui:prototype """
<ui:group let:mayHaveFlowContext=\"{= ui:getSessionAttribute(&quot;flowContext&quot;) }\" let:resourceSpecificConstructor=\"{= edg:getClassPropertyValue(?resourceType, edg:resourceURIconstructorFunction) }\" let:uid=\"{= ui:uniqueId() }\">
    <ui:group let:mayHaveFlowContextResource=\"{= IRI(?mayHaveFlowContext) }\">
        <ui:group let:source=\"{= IF(bound(?mayHaveFlowContextResource), spl:object(?mayHaveFlowContextResource, edg:source), rdf:nil) }\" let:target=\"{= IF(bound(?mayHaveFlowContextResource), spl:object(?mayHaveFlowContextResource, edg:target), rdf:nil) }\">
            <ui:loadable let:identifierDivId=\"identifier-{= ?uid }\" let:resourceURIconstructor=\"{= COALESCE(?resourceURIconstructorFunction, ?resourceSpecificConstructor, edg:newResourceWithUUID) }\" let:sourceDivId=\"source-{= ?uid }\" let:targetDivId=\"target-{= ?uid }\" ui:loadId=\"create-resource-dialog-body\">
                <!--ui:dumpScope ui:message=\"AAA: edg:CreateResourceDialogForFlowsPlugin\"/-->
                <script src=\"{= ui:lib() }/edg/js/edgxtra.js\"/>
                <div data-handler=\"edg:CreateFlowResourceHandler\" data-height=\"380\" id=\"swa-modal-config\">
                    <swa:CreateResourceDialogTypeSelectionPanelForAssetCollection arg:resourceType=\"{= ?resourceType }\" arg:suppressTypeSelection=\"{= ?suppressTypeSelection }\"/>
                    <swa:LabeledElement arg:label=\"Label:\">
                        <input autocomplete=\"off\" class=\"form-control swa-create-resource-label-input\" id=\"label-input\" type=\"text\"/>
                        <swa:LangSelector arg:uid=\"label\"/>
                    </swa:LabeledElement>
                    <swa:LabeledElement arg:label=\"Source:\">
                        <ui:if ui:condition=\"{= ?source != rdf:nil }\">
                            <input autocomplete=\"off\" class=\"form-control swa-create-resource-label-input\" data-property=\"source\" id=\"source-{= ?uid }\" name=\"source-{= ?uid }\" readonly=\"readonly\" swa-label=\"{= ui:label(?source) }\" type=\"hidden\" value=\"{= ui:encodeNode(?source, true, true) }\"/>
                            <input class=\"form-control swa-create-resource-label-input\" readonly=\"readonly\" swa-label=\"{= ui:label(?source) }\" type=\"text\" value=\"{= ui:label(?source) }\"/>
                        </ui:if>
                        <ui:else>
                            <swa:AutoComplete arg:class=\"swa-text-field\" arg:id=\"{= ?sourceDivId }\" arg:onSelect=\"edgxtra.flowSource( { graph : '&lt;{= ui:currentQueryGraph() }&gt;', resourceType : '{= ?resourceType }', source : '&lt;' + resource + '&gt;', 'sourceDivId': '{= ?sourceDivId }', 'targetDivId': '{= ?targetDivId }', 'identifierDivId': '{= ?identifierDivId }'})\" arg:placeholder=\"Select source\" arg:type=\"{= edg:Interoperable }\"/>
                        </ui:else>
                    </swa:LabeledElement>
                    <ui:loadable ui:loadId=\"{= ?targetDivId }\">
                        <swa:LabeledElement arg:label=\"Target:\">
                            <ui:if ui:condition=\"{= ?target != rdf:nil }\">
                                <input autocomplete=\"off\" class=\"form-control swa-create-resource-label-input\" data-property=\"target\" id=\"target-{= ?uid }\" name=\"target-{= ?uid }\" readonly=\"readonly\" swa-label=\"{= ui:label(?target) }\" type=\"hidden\" value=\"{= ui:encodeNode(?target, true, true) }\"/>
                                <input class=\"form-control swa-create-resource-label-input\" readonly=\"readonly\" swa-label=\"{= ui:label(?target) }\" type=\"text\" value=\"{= ui:label(?target) }\"/>
                            </ui:if>
                            <ui:else>
                                <swa:AutoComplete arg:class=\"swa-text-field\" arg:id=\"{= ?targetDivId }\" arg:onSelect=\"edgxtra.flowTarget( { graph : '&lt;{= ui:currentQueryGraph() }&gt;', resourceType : '{= ?resourceType }', target : '&lt;' + resource + '&gt;', 'sourceDivId': '{= ?sourceDivId }', 'targetDivId': '{= ?targetDivId }', 'identifierDivId': '{= ?identifierDivId }'})\" arg:placeholder=\"Select target\" arg:type=\"{= edg:Interoperable }\"/>
                            </ui:else>
                        </swa:LabeledElement>
                    </ui:loadable>
                    <ui:loadable ui:loadId=\"{= ?identifierDivId }\">
                        <swa:LabeledElement arg:label=\"Identifier:\" let:uri=\"{= edg:newResourceWithUUID(?resourceType, &quot;&quot;) }\">
                            <p class=\"text-info\">Identifiers for <strong>{= ui:label(?resourceType) }</strong> instances are generated using a prefix followed by a UUID. </p>
                            <input class=\"form-control swa-uri-field swa-create-resource-with-primary-key-dialog-plugin-identifier\" id=\"uri-input\" readonly=\"readonly\" size=\"{= fn:string-length(?uri) + 90 } \" type=\"text\" value=\"{= ?uri }\"/>
                        </swa:LabeledElement>
                    </ui:loadable>
                </div>
            </ui:loadable>
        </ui:group>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  vaem:todo "Finish this dialog - make it bigger and fix the type selector so OK button works wightout have to go to another menu item and back [RH20190503]" ;
  rdfs:comment "A create dialog for resources that can have anonymous nodes expressed as prefixed GUIDs.  Examples are flows and servive endpoints." ;
  rdfs:label "Create resource dialog for flows plugin" ;
  rdfs:subClassOf edg:DialogElements ;
  rdfs:subClassOf swa:CreateResourceDialogPlugins ;
.
edg:DataTableResults
  spin:constraint [
      a spl:Argument ;
      spl:optional true ;
      spl:predicate arg:resource ;
      spl:valueType rdfs:Resource ;
    ] ;
.
edg:DataTableResultsCallbackForFlow
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:rows ;
      spl:valueType xsd:integer ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:instance=\"{= COALESCE(?resource, IRI(ui:getSessionAttribute(&quot;persistresource&quot;))) }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsCallbackForFlow\"/-->
    <ui:resourceView ui:matchIds=\"datatable-flow\" ui:resource=\"{= ?instance }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "Needed for data table callbacks" ;
  rdfs:label "Data table results callback for flow" ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:DataTableResultsCallbackForInteroperableDownstreamDependency
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:rows ;
      spl:valueType xsd:integer ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:instance=\"{= COALESCE(?resource, IRI(ui:getSessionAttribute(&quot;persistresource&quot;))) }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsCallbackForInteroperableDownstreamDependency\"/-->
    <ui:if ui:condition=\"{= bound(?instance) }\">
        <edg:DataTableResultsForInteroperableDependency arg:dependencyTemplate=\"{= edg:GetDownstreamSoftwareDependencies }\" arg:resource=\"{= ?instance }\" arg:text=\"Downstream\"/>
    </ui:if>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:label "Data table results callback for interoperable downstream dependency" ;
  rdfs:seeAlso edg:ResourceDataTableInteroperableDownstreamColumns ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:DataTableResultsCallbackForInteroperableUpstreamDependency
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:rows ;
      spl:valueType xsd:integer ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:instance=\"{= COALESCE(?resource, IRI(ui:getSessionAttribute(&quot;persistresource&quot;))) }\">
    <ui:group ui:id=\"datatable-flow\" ui:priority=\"{= -1 }\">
        <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsCallbackForInteroperableUpstreamDependency datatable\"/-->
        <ui:if ui:condition=\"{= bound(?instance) }\">
            <edg:DataTableResultsForInteroperableDependency arg:dependencyTemplate=\"{= edg:GetUpstreamDependencies }\" arg:resource=\"{= ?instance }\" arg:text=\"Upstream\"/>
        </ui:if>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:label "Data table results callback for interoperable upstream dependency" ;
  rdfs:seeAlso edg:GetUpstreamDependencies ;
  rdfs:seeAlso edg:ResourceDataTableInteroperableUpstreamColumns ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:DataTableResultsCallbackForLogicalFlows
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:rows ;
      spl:valueType xsd:integer ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:instance=\"{= COALESCE(?resource, IRI(ui:getSessionAttribute(&quot;persistresource&quot;))) }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsCallbackForFlow\"/-->
    <ui:resourceView ui:matchIds=\"datatable-logical-flows\" ui:resource=\"{= ?instance }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:label "Data table results callback for logical flows" ;
  rdfs:seeAlso edg:ResourceDataTableLogicalFlowColumns ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:DataTableResultsCallbackForPhysicalFlows
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:rows ;
      spl:valueType xsd:integer ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:instance=\"{= COALESCE(?resource, IRI(ui:getSessionAttribute(&quot;persistresource&quot;))) }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsCallbackForPhysicallFlows\"/-->
    <ui:resourceView ui:matchIds=\"datatable-physical-flows\" ui:resource=\"{= ?instance }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:label "Data table results callback for physical flows" ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:DataTableResultsForDirectMappingsCollection
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resource ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:dataGraph=\"{= swa:dataGraph() }\" let:masterGraph=\"{= teamwork:currentMasterGraph() }\">
    <ui:group let:graphId=\"{= teamwork:graphIdFromGraph(?masterGraph) }\">
        <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsForDirectMappings\"/-->
        <ui:setContext ui:queryGraph=\"{= ui:unionGraph }\">
            <ui:group ui:id=\"datatable-data\" ui:priority=\"{= -1 }\">
                <ui:setContext ui:queryGraph=\"{= ui:unionGraph }\">
                    <swon:Object>
                        <swon:Value arg:name=\"data\">
                            <swon:Array>
                                <ui:forEach ui:resultSet=\"{#
                                        SELECT ?mapping ?source ?target
                                        WHERE {
                                            ?resource edg:mapping ?mapping .
                                            OPTIONAL {
                                                ?mapping edg:input ?source .
                                            } .
                                            OPTIONAL {
                                                ?mapping edg:output ?target .
                                            } .
                                        }
                                        ORDER BY (ui:label(?mapping)) }\">
                                    <swon:Object>
                                        <swon:Value arg:name=\"uri\" arg:value=\"{= str(?mapping) }\"/>
                                        <swon:Value arg:name=\"mapping\" arg:value=\"{= ui:label(?mapping) }\"/>
                                        <ui:if ui:condition=\"{= bound(?source) }\">
                                            <swon:Value arg:name=\"source\" arg:value=\"{= ui:label(?source) }\"/>
                                        </ui:if>
                                        <ui:if ui:condition=\"{= bound(?target) }\">
                                            <swon:Value arg:name=\"target\" arg:value=\"{= ui:label(?target) }\"/>
                                        </ui:if>
                                        <swon:Value arg:name=\"defaultContent\" arg:value=\"-\"/>
                                    </swon:Object>
                                </ui:forEach>
                            </swon:Array>
                        </swon:Value>
                    </swon:Object>
                </ui:setContext>
            </ui:group>
        </ui:setContext>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:label "Data table results for direct mappings collection" ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:DataTableResultsForFlows
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resource ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:dataGraph=\"{= swa:dataGraph() }\" let:masterGraph=\"{= teamwork:currentMasterGraph() }\">
    <ui:group let:graphId=\"{= teamwork:graphIdFromGraph(?masterGraph) }\">
        <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsForFlows\"/-->
        <ui:group ui:id=\"datatable-flow\" ui:priority=\"{= -1 }\">
            <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsForFlows\"/-->
            <ui:setContext ui:queryGraph=\"{= ui:unionGraph }\">
                <swon:Object>
                    <swon:Value arg:name=\"data\">
                        <swon:Array>
                            <ui:forEach ui:resultSet=\"{#
                                    SELECT ?flow ?type ?label ?source ?target
                                    WHERE {
                                        ?flow edg:source|edg:target ?resource .
                                        ?flow a ?type .
                                        OPTIONAL {
                                            ?flow edg:source ?source .
                                        } .
                                        OPTIONAL {
                                            ?flow edg:target ?target .
                                        } .
                                        BIND (ui:label(?flow) AS ?label) .
                                    }
                                    ORDER BY DESC (?type) (?label) }\">
                                <swon:Object>
                                    <swon:Value arg:name=\"uri\" arg:value=\"{= ?flow }\"/>
                                    <swon:Value arg:name=\"type\" arg:value=\"{= ui:label(?type) }\"/>
                                    <swon:Value arg:name=\"label\" arg:value=\"{= ?label }\"/>
                                    <ui:if ui:condition=\"{= bound(?source) }\">
                                        <swon:Value arg:name=\"source\">
                                            <swon:Object>
                                                <swon:Value arg:name=\"label\" arg:value=\"{= ui:label(?source) }\"/>
                                                <swon:Value arg:name=\"uri\" arg:value=\"{= str(?source) }\"/>
                                                <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                            </swon:Object>
                                        </swon:Value>
                                    </ui:if>
                                    <ui:if ui:condition=\"{= bound(?target) }\">
                                        <swon:Value arg:name=\"target\">
                                            <swon:Object>
                                                <swon:Value arg:name=\"label\" arg:value=\"{= ui:label(?target) }\"/>
                                                <swon:Value arg:name=\"uri\" arg:value=\"{= str(?target) }\"/>
                                                <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                            </swon:Object>
                                        </swon:Value>
                                    </ui:if>
                                </swon:Object>
                            </ui:forEach>
                        </swon:Array>
                    </swon:Value>
                </swon:Object>
            </ui:setContext>
        </ui:group>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:label "Data table results for flows" ;
  rdfs:seeAlso edg:ResourceDataTableLogicalFlowColumns ;
  rdfs:seeAlso edg:ResourceDataTablePhysicalFlowColumns ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:DataTableResultsForInteroperableDependency
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:dependencyTemplate ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resource ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:rows ;
      spl:valueType xsd:integer ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:text ;
      spl:valueType xsd:string ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:dataGraph=\"{= swa:dataGraph() }\" let:masterGraph=\"{= teamwork:currentMasterGraph() }\">
    <ui:group let:graphId=\"{= teamwork:graphIdFromGraph(?masterGraph) }\">
        <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsForInteroperableDependency\"/-->
        <ui:if ui:condition=\"{= bound(?resource) }\">
            <ui:setContext ui:queryGraph=\"{= ui:unionGraph }\">
                <swon:Object>
                    <swon:Value arg:name=\"data\">
                        <swon:Array>
                            <ui:call arg:resource=\"{= ?resource }\" ui:template=\"{= ?dependencyTemplate }\" ui:varName=\"dependencies\">
                                <!--ui:dumpResultSet ui:message=\"AAA2: edg:DataTableResultsForInteroperableDependency -  {= ?focusNode }\"
  ui:resultSet=\"{= ?dependencies }\"/-->
                                <ui:forEach ui:resultSet=\"{= ?dependencies }\">
                                    <ui:if ui:condition=\"{= bound(?softwareDependency) }\">
                                        <swon:Object let:parentSoftware=\"{= edg:highestDepictionForSoftwareExecutable(?softwareDependency) }\">
                                            <swon:Value arg:name=\"uri\" arg:value=\"{= ?softwareDependency }\"/>
                                            <swon:Value arg:name=\"dependencyType\" arg:value=\"{= ui:label(?dependencyType) }\"/>
                                            <swon:Value arg:name=\"degree\" arg:value=\"{= IF((?flowCount &gt; 0), ?flowCount, 1) }\"/>
                                            <swon:Value arg:name=\"dependency\">
                                                <swon:Object>
                                                    <swon:Value arg:name=\"label\" arg:value=\"{= ui:label(?softwareDependency) }\"/>
                                                    <swon:Value arg:name=\"uri\" arg:value=\"{= str(?softwareDependency) }\"/>
                                                    <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                                </swon:Object>
                                            </swon:Value>
                                            <ui:if ui:condition=\"{= bound(?parentSoftware) &amp;&amp; (?parentSoftware != ?softwareDependency) }\">
                                                <swon:Value arg:name=\"partOf\">
                                                    <swon:Object>
                                                        <swon:Value arg:name=\"label\" arg:value=\"{= ui:label(?parentSoftware) }\"/>
                                                        <swon:Value arg:name=\"uri\" arg:value=\"{= str(?parentSoftware) }\"/>
                                                        <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                                    </swon:Object>
                                                </swon:Value>
                                            </ui:if>
                                            <ui:else>
                                                <swon:Value arg:name=\"partOf\">
                                                    <swon:Object>
                                                        <swon:Value arg:name=\"label\" arg:value=\"&lt;div class='text-info'&gt;-&lt;/div&gt;\"/>
                                                    </swon:Object>
                                                </swon:Value>
                                            </ui:else>
                                        </swon:Object>
                                    </ui:if>
                                </ui:forEach>
                            </ui:call>
                        </swon:Array>
                    </swon:Value>
                </swon:Object>
            </ui:setContext>
        </ui:if>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:label "Data table results for interoperable dependency" ;
  rdfs:seeAlso edg:ResourceDataTableInteroperableDownstreamColumns ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:DataTableResultsForLogicalFlows
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resource ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:dataGraph=\"{= swa:dataGraph() }\" let:masterGraph=\"{= teamwork:currentMasterGraph() }\">
    <ui:group let:graphId=\"{= teamwork:graphIdFromGraph(?masterGraph) }\">
        <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsForLogicalFlows\"/-->
        <ui:setContext ui:queryGraph=\"{= ui:unionGraph }\">
            <ui:call arg:resource=\"{= ?resource }\" arg:type=\"{= edg:LogicalFlow }\" ui:template=\"{= edg:GetFlows }\" ui:varName=\"flows\">
                <!--ui:dumpResultSet ui:message=\"AAA: edg:DataTableResultsForLogicalFlows\" ui:resultSet=\"{= ?flows }\"/-->
                <swon:Object>
                    <swon:Value arg:name=\"data\">
                        <swon:Array>
                            <ui:if ui:condition=\"{= !spr:isEmpty(?flows) }\">
                                <ui:forEach ui:resultSet=\"{= ?flows }\">
                                    <swon:Object>
                                        <swon:Value arg:name=\"uri\" arg:value=\"{= ?flow }\"/>
                                        <swon:Value arg:name=\"flow\">
                                            <swon:Object>
                                                <swon:Value arg:name=\"label\" arg:value=\"{= ?label }\"/>
                                                <swon:Value arg:name=\"uri\" arg:value=\"{= str(?flow) }\"/>
                                                <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                            </swon:Object>
                                        </swon:Value>
                                        <swon:Value arg:name=\"type\" arg:value=\"{= ui:label(?flowType) }\"/>
                                        <ui:if ui:condition=\"{= bound(?source) &amp;&amp; (?source = ?resource) }\">
                                            <swon:Value arg:name=\"direction\" arg:value=\"to\"/>
                                            <ui:if ui:condition=\"{= bound(?target) }\">
                                                <swon:Value arg:name=\"endpoint\">
                                                    <swon:Object>
                                                        <swon:Value arg:name=\"label\" arg:value=\"{= ui:label(?target) }\"/>
                                                        <swon:Value arg:name=\"uri\" arg:value=\"{= str(?target) }\"/>
                                                        <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                                    </swon:Object>
                                                </swon:Value>
                                            </ui:if>
                                        </ui:if>
                                        <ui:elseif ui:condition=\"{= bound(?target) &amp;&amp; (?target = ?resource) }\">
                                            <swon:Value arg:name=\"direction\" arg:value=\"from\"/>
                                            <ui:if ui:condition=\"{= bound(?source) }\">
                                                <swon:Value arg:name=\"endpoint\">
                                                    <swon:Object>
                                                        <swon:Value arg:name=\"label\" arg:value=\"{= ui:label(?source) }\"/>
                                                        <swon:Value arg:name=\"uri\" arg:value=\"{= str(?source) }\"/>
                                                        <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                                    </swon:Object>
                                                </swon:Value>
                                            </ui:if>
                                        </ui:elseif>
                                        <edg:GenerateJSONforDatatableCellObjects arg:arrayName=\"informationExchanged\" arg:class=\"{= edg:Asset }\" arg:graphId=\"{= ?graphId }\" arg:limit=\"{= 20 }\" arg:name=\"label\" arg:property=\"{= edg:transfersAsset }\" arg:resource=\"{= ?flow }\"/>
                                        <edg:GenerateJSONforDatatableCellObjects arg:arrayName=\"involvedEntities\" arg:class=\"{= edg:ExchangeableEntity }\" arg:graphId=\"{= ?graphId }\" arg:limit=\"{= 20 }\" arg:name=\"label\" arg:property=\"{= edg:involvedEntity }\" arg:resource=\"{= ?flow }\"/>
                                        <edg:GenerateJSONforDatatableCellObjects arg:arrayName=\"realizedAs\" arg:class=\"{= edg:PhysicalFlow }\" arg:graphId=\"{= ?graphId }\" arg:limit=\"{= 10 }\" arg:name=\"label\" arg:property=\"{= edg:realizedAs }\" arg:resource=\"{= ?flow }\"/>
                                    </swon:Object>
                                </ui:forEach>
                            </ui:if>
                        </swon:Array>
                    </swon:Value>
                </swon:Object>
            </ui:call>
        </ui:setContext>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:label "Data table results for logical flows" ;
  rdfs:seeAlso edg:DataTableResultsForPhysicalFlows ;
  rdfs:seeAlso edg:ResourceDataTableLogicalFlowColumns ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:DataTableResultsForPhysicalFlows
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resource ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:dataGraph=\"{= swa:dataGraph() }\" let:masterGraph=\"{= teamwork:currentMasterGraph() }\">
    <ui:group let:graphId=\"{= teamwork:graphIdFromGraph(?masterGraph) }\">
        <!--ui:dumpScope ui:message=\"AAA: edg:DataTableResultsForPhysicalFlows datatable for flow\"/-->
        <ui:setContext ui:queryGraph=\"{= ui:unionGraph }\">
            <ui:call arg:resource=\"{= ?resource }\" arg:type=\"{= edg:PhysicalFlow }\" ui:template=\"{= edg:GetFlows }\" ui:varName=\"flows\">
                <!--ui:dumpResultSet ui:message=\"AAA: edg:DataTableResultsForPhysicalFlows\" ui:resultSet=\"{= ?flows }\"/-->
                <swon:Object>
                    <swon:Value arg:name=\"data\">
                        <swon:Array>
                            <ui:if ui:condition=\"{= !spr:isEmpty(?flows) }\">
                                <ui:forEach let:logicalFlow=\"{= spl:subject(edg:realizedAs, ?flow) }\" ui:resultSet=\"{= ?flows }\">
                                    <swon:Object>
                                        <swon:Value arg:name=\"uri\" arg:value=\"{= ?flow }\"/>
                                        <swon:Value arg:name=\"flow\">
                                            <swon:Object>
                                                <swon:Value arg:name=\"label\" arg:value=\"{= ?label }\"/>
                                                <swon:Value arg:name=\"uri\" arg:value=\"{= str(?flow) }\"/>
                                                <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                            </swon:Object>
                                        </swon:Value>
                                        <swon:Value arg:name=\"type\" arg:value=\"{= ui:label(?flowType) }\"/>
                                        <ui:if ui:condition=\"{= bound(?source) &amp;&amp; (?source = ?resource) }\">
                                            <swon:Value arg:name=\"direction\" arg:value=\"to\"/>
                                            <ui:if ui:condition=\"{= bound(?target) }\">
                                                <swon:Value arg:name=\"endpoint\">
                                                    <swon:Object>
                                                        <swon:Value arg:name=\"label\" arg:value=\"{= ui:label(?target) }\"/>
                                                        <swon:Value arg:name=\"uri\" arg:value=\"{= str(?target) }\"/>
                                                        <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                                    </swon:Object>
                                                </swon:Value>
                                            </ui:if>
                                        </ui:if>
                                        <ui:elseif ui:condition=\"{= bound(?target) &amp;&amp; (?target = ?resource) }\">
                                            <swon:Value arg:name=\"direction\" arg:value=\"from\"/>
                                            <ui:if ui:condition=\"{= bound(?source) }\">
                                                <swon:Value arg:name=\"endpoint\">
                                                    <swon:Object>
                                                        <swon:Value arg:name=\"label\" arg:value=\"{= ui:label(?source) }\"/>
                                                        <swon:Value arg:name=\"uri\" arg:value=\"{= str(?source) }\"/>
                                                        <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                                    </swon:Object>
                                                </swon:Value>
                                            </ui:if>
                                        </ui:elseif>
                                        <ui:if ui:condition=\"{= bound(?logicalFlow) }\">
                                            <swon:Value arg:name=\"implements\">
                                                <swon:Object>
                                                    <swon:Value arg:name=\"label\" arg:value=\"{= ui:label(?logicalFlow) }\"/>
                                                    <swon:Value arg:name=\"uri\" arg:value=\"{= str(?logicalFlow) }\"/>
                                                    <swon:Value arg:name=\"graphId\" arg:value=\"{= ?graphId }\"/>
                                                </swon:Object>
                                            </swon:Value>
                                        </ui:if>
                                    </swon:Object>
                                </ui:forEach>
                            </ui:if>
                        </swon:Array>
                    </swon:Value>
                </swon:Object>
            </ui:call>
        </ui:setContext>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:label "Data table results for physical flows" ;
  rdfs:seeAlso edg:DataTableResultsForLogicalFlows ;
  rdfs:seeAlso edg:ResourceDataTablePhysicalFlowColumns ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:Dataflow
  ui:instanceView """
<ui:group ui:id=\"datatable-columns\" ui:priority=\"{= -1 }\">
    <edg:ResourceDataTableDataflowDetailsColumns/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"flow-details\" ui:priority=\"{= 10 }\">
    <edg:DataflowDetails arg:resource=\"{= ?this }\" arg:style=\"{= ?style }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"resource-summary\" ui:priority=\"{= 10 }\">
    <edg:DataflowDetails arg:resource=\"{= ?this }\" arg:style=\"{= ?style }\"/>
</ui:group>
"""^^ui:Literal ;
.
edg:DataflowDetails
  a swa:ObjectViewerClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resource ;
      spl:valueType edg:Interoperable ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:style ;
      spl:valueType xsd:string ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:interoperableSource=\"{= spl:object(?resource, edg:source) }\" let:interoperableTarget=\"{= spl:object(?resource, edg:target) }\" let:projectGraph=\"{= teamwork:currentMasterGraph() }\" let:teamGraph=\"{= COALESCE(IF(bound(?resource), teamwork:teamGraph(IRI(smf:definedIn(?resource))), ?none), teamwork:currentTeamGraph()) }\">
    <ui:group let:tagId=\"{= teamwork:tagIdFromTagGraph(?projectGraph) }\">
        <!--ui:dumpScope ui:message=\"AAA1: edg:DataflowDetails - resource is {= ?resource }\"/-->
        <ui:setContext ui:queryGraph=\"{= ui:graphWithImports(?projectGraph) }\">
            <div class=\"box-rounded {= ?style }\">
                <div class=\"container-fluid\">
                    <span class=\"edg-heading\">
                        <edg:ResourceLink arg:resource=\"{= ?resource }\"/>
                    </span>
                    <edg:ObjectsEnum arg:hideIfEmpty=\"{= true }\" arg:label=\"Dataflow Connectivity\" arg:open=\"{= true }\" arg:openable=\"{= true }\">
                        <ui:if ui:condition=\"{= bound(?interoperableSource) }\">
                            <ui:resourceView arg:style=\"{= ?style }\" edg:flow=\"{= ?resource }\" ui:matchIds=\"flow-source-details\" ui:resource=\"{= ?interoperableSource }\"/>
                        </ui:if>
                        <ui:else>
                            <span style=\"color:red\"> - missing interoperable source resource.</span>
                            <br/>
                        </ui:else>
                        <ui:if ui:condition=\"{= bound(?interoperableTarget) }\">
                            <ui:resourceView arg:style=\"{= ?style }\" edg:flow=\"{= ?resource }\" ui:matchIds=\"flow-target-details\" ui:resource=\"{= ?interoperableTarget }\"/>
                        </ui:if>
                        <ui:else>
                            <span style=\"color:red\"> - missing interoperable target resource.</span>
                            <br/>
                        </ui:else>
                    </edg:ObjectsEnum>
                    <edg:ObjectsEnum arg:hideIfEmpty=\"{= true }\" arg:label=\"Data Exchanged\" arg:open=\"{= true }\" arg:openable=\"{= true }\">
                        <edg:ResponsiveObjectsViewer arg:class=\"{= edg:DataPackage }\" arg:matchIds=\"resource-summary\" arg:property=\"{= edg:transfersPackage }\" arg:resource=\"{= ?resource }\" arg:style=\"background-light-egyptian-blue\" arg:text=\"Transfers:\"/>
                    </edg:ObjectsEnum>
                    <ui:classView ui:class=\"{= edg:Protectable }\" ui:matchIds=\"show-aspect-summary\" ui:resource=\"{= ?this }\"/>
                    <edg:ObjectsEnum arg:hideIfEmpty=\"{= true }\" arg:label=\"Associated Logical Flows\" arg:open=\"{= true }\" arg:openable=\"{= true }\">
                        <edg:ResponsiveSubjectsViewer arg:class=\"{= edg:LogicalFlow }\" arg:matchIds=\"resource-summary\" arg:property=\"{= edg:realizedAs }\" arg:resource=\"{= ?resource }\" arg:style=\"background-light-egyptian-blue\" arg:text=\"Implements logical flow(s):\"/>
                    </edg:ObjectsEnum>
                </div>
            </div>
        </ui:setContext>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:HTML ;
  rdfs:comment "A viewer that shows the details of dataflows of an interoperable resource. Typically this is a business application." ;
  rdfs:label "Dataflow Details" ;
  rdfs:subClassOf swa:ObjectElements ;
.
edg:DataflowSummaryGadget
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <ui:loadable class=\"swa-labeled-objects\" ui:loadId=\"{= ui:uniqueId() }\">
        <!--ui:dumpScope ui:message=\"AAA1: edg:DataflowSummaryGadget - {= ?focusNode }\"/-->
        <ui:if ui:condition=\"{= bound(?focusNode) &amp;&amp; spl:instanceOf(?focusNode, edg:Dataflow) }\">
            <ui:resourceView arg:style=\"background-azure\" ui:matchIds=\"flow-details\" ui:resource=\"{= ?focusNode }\"/>
        </ui:if>
    </ui:loadable>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "The gadget for object resources that serve as sources and targets of a dataflow." ;
  rdfs:label "Dataflow Summary Gadget" ;
  rdfs:seeAlso edg:LogicalFlowSummaryGadget ;
  rdfs:subClassOf edg:PathElements ;
.
edg:DirectMappingsCollection
  ui:instanceView """
<ui:group ui:id=\"datatable-columns\" ui:priority=\"{= -1 }\">
    <!--ui:dumpScope ui:message=\"AAA1: edg:DirectMappingsCollection\"/-->
    <edg:ResourceDataTableDirectMappingsCollectionColumns/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"datatable-data\" ui:priority=\"{= -1 }\">
    <edg:DataTableResultsForDirectMappingsCollection arg:resource=\"{= ?this }\"/>
</ui:group>
"""^^ui:Literal ;
.
edg:DirectMappingsCollectionGadget
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <ui:loadable class=\"swa-labeled-objects\" ui:loadId=\"{= ui:uniqueId() }\">
        <!--ui:dumpScope ui:message=\"AAA1: edg:DirectMappingsCollectionGadget -  {= ?focusNode }\"/-->
        <ui:group let:mappings=\"{= IF(spl:instanceOf(?focusNode, edg:ServiceEndpoint), spl:object(?focusNode, ?path), IF(spl:instanceOf(?focusNode, edg:DirectMappingsCollection), ?focusNode, rdf:nil)) }\">
            <!--ui:dumpScope ui:message=\"AAA1: edg:DirectMappingsCollectionGadget\"/-->
            <ui:if ui:condition=\"{= bound(?mappings) }\">
                <!--ui:dumpScope ui:message=\"AAA2: edg:DirectMappingsCollectionGadget\"/-->
                <div class=\"box-rounded\" title=\"{= ?mappings }\">
                    <div class=\"size12px\">
                        <span class=\"edg-heading\">
                            <swa:Link arg:resource=\"{= ?mappings }\"/>
                        </span>
                        <edg:ResourceInstancesDataTable arg:columnService=\"{= edg:ResourceDataTableDirectMappingsCollectionColumns }\" arg:createResourceHandler=\"{= edg:CreateDirectMappingResourceHandler }\" arg:resource=\"{= ?mappings }\" arg:resourceType=\"{= edg:DirectMapping }\"/>
                    </div>
                </div>
            </ui:if>
        </ui:group>
    </ui:loadable>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "A gadget that shows a table of direct mappings. The gadget is invoked from the 'edg:DirectMappingsPropertiesGroup' property group using tosh:viewGadget. Depending on the resourcw in focus, the variable ?this is either bound to an instances of a service endpoint or a direct mappings collection." ;
  rdfs:label "Dataflow Gadget" ;
  rdfs:subClassOf edg:PathElements ;
.
edg:Flow
  ui:instanceView """
<ui:group ui:id=\"datatable-columns\" ui:priority=\"{= -1 }\">
    <swon:Array>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"data\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= false }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Source\"/>
            <swon:Value arg:name=\"data\" arg:value=\"source\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"{= edg:input }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Target\"/>
            <swon:Value arg:name=\"data\" arg:value=\"target\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"{= edg:output }\"/>
        </swon:Object>
    </swon:Array>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"datatables-results\" ui:priority=\"{= 1 }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:Flow datatables-results\"/-->
    <swa:SimpleDataTableResults arg:createResourceHandler=\"{= edg:CreateFlowResourceHandler }\" arg:frozen=\"{= ?frozen }\" arg:hasFixedHeader=\"{= true }\" arg:hasFixedToolbar=\"{= true }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"results-table-config\" ui:priority=\"{= 1 }\">
    <swon:Array>
        <swon:Object>
            <swon:Value arg:name=\"createService\" arg:value=\"{= swa:CreateResourceDialogBodyForAssetCollection }\"/>
            <swon:Value arg:name=\"createResourceHandler\" arg:value=\"{= edg:CreateFlowResourceHandler }\"/>
        </swon:Object>
    </swon:Array>
</ui:group>
"""^^ui:Literal ;
.
edg:FlowIdentifierSetter
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:source ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The PVS instance" ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:target ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The PVS instance" ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:graph ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:loadId ;
      spl:valueType xsd:integer ;
      rdfs:comment "PVS property div id" ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:projectGraph ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resourceType ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The PVS instance" ;
    ] ;
  ui:prototype """
<ui:group>
    <!--ui:dumpScope ui:message=\"AAA: edg:FlowIdentifierSetter\"/-->
    <ui:if ui:condition=\"{= bound(?graph) }\">
        <ui:setContext ui:queryGraph=\"{= ?graph }\">
            <ui:group>
                <swa:LabeledElement arg:label=\"Identifier:\" let:uri=\"{= edg:newResourceWithUUID(?resourceType, &quot;&quot;) }\">
                    <input class=\"form-control swa-uri-field swa-create-resource-with-primary-key-dialog-plugin-identifier\" disabled=\"disabled\" id=\"uri-input\" size=\"{= fn:string-length(?uri) + 90 } \" type=\"text\" value=\"{= ?uri }\"/>
                </swa:LabeledElement>
            </ui:group>
        </ui:setContext>
    </ui:if>
    <ui:else>
        <ui:throw ui:message=\"Failed to create new flow - graph missing for identifier creation\"/>
    </ui:else>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:HTML ;
  rdfs:label "Flow Identifier Setter" ;
  rdfs:subClassOf swa:Elements ;
.
edg:FlowTargetSelector
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:source ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The PVS instance" ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:graph ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:loadId ;
      spl:valueType xsd:string ;
      rdfs:comment "PVS property div id" ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:projectGraph ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resourceType ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The PVS instance" ;
    ] ;
  ui:prototype """
<ui:group let:uid=\"{= ui:uniqueId() }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:FlowTargetSelector\"/-->
    <ui:if ui:condition=\"{= bound(?graph) }\">
        <ui:setContext ui:queryGraph=\"{= ?graph }\">
            <swa:LabeledElement arg:label=\"Target:\">
                <swa:AutoComplete arg:class=\"swa-text-field\" arg:id=\"flow-target\" arg:onSelect=\"edgxtra.flowTarget( { graph : '&lt;{= ui:currentQueryGraph() }&gt;', resourceType : '{= ?resourceType }', source : '&lt;' + '{= ?source }' + '&gt;',  target : '&lt;' + resource + '&gt;','identifierDivId': '{= ?loadId }','targetDivId': 'flow-target'})\" arg:placeholder=\"Select target\" arg:type=\"{= edg:Interoperable }\"/>
            </swa:LabeledElement>
        </ui:setContext>
    </ui:if>
    <ui:else>
        <ui:throw ui:message=\"Failed to create new flow - graph missing\"/>
    </ui:else>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:HTML ;
  rdfs:label "Flow Target Selector" ;
  rdfs:subClassOf swa:Elements ;
.
edg:GetDownstreamSoftwareExecutableDependents
  rdfs:seeAlso edg:GetDownstreamSoftwareDependencies ;
.
edg:GetFlows
  a spin:Template ;
  spin:body [
      a sp:Select ;
      sp:orderBy (
          [
            a sp:Desc ;
            sp:expression [
                sp:varName "label" ;
              ] ;
          ]
          [
            sp:varName "flowType" ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "flow" ;
          ]
          [
            sp:varName "flowType" ;
          ]
          [
            sp:varName "label" ;
          ]
          [
            sp:varName "source" ;
          ]
          [
            sp:varName "target" ;
          ]
        ) ;
      sp:where (
          [
            a sp:TriplePath ;
            sp:object [
                sp:varName "resource" ;
              ] ;
            sp:path [
                a sp:AltPath ;
                sp:path1 edg:source ;
                sp:path2 edg:target ;
              ] ;
            sp:subject [
                sp:varName "flow" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "flowType" ;
              ] ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "flow" ;
              ] ;
          ]
          [
            a sp:TriplePath ;
            sp:object [
                sp:varName "type" ;
              ] ;
            sp:path [
                a sp:ModPath ;
                sp:modMax -2 ;
                sp:modMin 0 ;
                sp:subPath rdfs:subClassOf ;
              ] ;
            sp:subject [
                sp:varName "flowType" ;
              ] ;
          ]
          [
            a sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "source" ;
                    ] ;
                  sp:predicate edg:source ;
                  sp:subject [
                      sp:varName "flow" ;
                    ] ;
                ]
              ) ;
          ]
          [
            a sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "target" ;
                    ] ;
                  sp:predicate edg:target ;
                  sp:subject [
                      sp:varName "flow" ;
                    ] ;
                ]
              ) ;
          ]
          [
            a sp:Bind ;
            sp:expression [
                a ui:label ;
                sp:arg1 [
                    sp:varName "flow" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "label" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:type ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The type of flow, logical or physical." ;
    ] ;
  spin:private true ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/diagram/lg/library-common> ;
  rdfs:label "Get flows" ;
  rdfs:subClassOf edg:SelectTemplates ;
.
edg:Interoperable
  ui:instanceView """
<ui:group ui:id=\"datatable-logical-flows\" ui:priority=\"{= -1 }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:SoftwareCapable datatable for logical flows\"/-->
    <edg:DataTableResultsForLogicalFlows arg:resource=\"{= ?this }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"datatable-physical-flows\" ui:priority=\"{= -1 }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:SoftwareCapable datatable for physical flows\"/-->
    <edg:DataTableResultsForPhysicalFlows arg:resource=\"{= ?this }\"/>
</ui:group>
"""^^ui:Literal ;
.
edg:InteroperableDownstreamDependenciesGadget
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <ui:loadable class=\"swa-labeled-objects\" let:gid=\"{= ui:uniqueId() }\" ui:loadId=\"{= ui:uniqueId() }\">
        <!--ui:dumpScope ui:message=\"AAA1: edg:InteroperableDownstreamDependenciesGadget -  {= ?focusNode }\"/-->
        <edg:ResourceInstancesDataTable arg:columnService=\"{= edg:ResourceDataTableInteroperableDownstreamColumns }\" arg:dataEndpoint=\"{= edg:DataTableResultsCallbackForInteroperableDownstreamDependency }\" arg:resource=\"{= ?focusNode }\" arg:resourceType=\"{= edg:Interoperable }\"/>
    </ui:loadable>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "A gadget for viewing the centrality connectiveness of the interoperable graph of an interoperable entity, typically a business application or system." ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/project/technical-assets> ;
  rdfs:label "Interoperable Downstream Dependencies Gadget" ;
  rdfs:subClassOf edg:PathElements ;
.
edg:InteroperableFlowDetails
  a swa:ObjectViewerClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resource ;
      spl:valueType edg:Interoperable ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <ui:if ui:condition=\"{= bound(?resource) }\">
        <!--ui:dumpScope ui:message=\"AAA: edg:InteroperableFlowDetails\" /-->
        <div class=\"box-rounded background-very-pale-blue\">
            <div class=\"container-fluid size12px\">
                <ui:group let:incomingFlow=\"{= spl:subject(edg:target, ?resource) }\" let:outgoingFlow=\"{= spl:subject(edg:source, ?resource) }\">
                    <div class=\"row\">
                        <span class=\"edg-heading size14px\">Direct Flows</span>
                        <div class=\"float-right\">
                            <a class=\"btn btn-default btn-xs\" id=\"{= ?gid }-create-incoming-flow-button\" title=\"Create Incoming Flow\">
                                <div class=\"ui-icon ui-icon-circle-plus swa-float-left\"/>
                                <div class=\"swa-float-left\" id=\"uniqueId414-reveal-button-count\">Create Incoming Flow</div>
                            </a>
                        </div>
                        <!--script>{= ui:functionCall(\"edgxtra.initButton\", ?gid, ?graphQLService, str(?resource), ui:label(?resource)) }</script-->
                        <br/>
                        <ui:if ui:condition=\"{= bound(?incomingFlow) }\">
                            <span class=\"edg-heading\">Incoming Flow:</span>
                            <ui:resourceView arg:style=\"background-light-grayish-orange\" ui:matchIds=\"flow-details\" ui:resource=\"{= ?incomingFlow }\"/>
                        </ui:if>
                        <ui:else>
                            <div class=\"\">No direct incoming flows</div>
                        </ui:else>
                    </div>
                    <div class=\"row\">
                        <div class=\"float-right\">
                            <a class=\"btn btn-default btn-xs\" id=\"{= ?gid }-create-outgoing-flow-button\" title=\"Create Outgoing Flow\">
                                <div class=\"ui-icon ui-icon-circle-plus swa-float-left\"/>
                                <div class=\"swa-float-left\" id=\"uniqueId414-reveal-button-count\">Create Outgoing Flow</div>
                            </a>
                        </div>
                        <!--script>{= ui:functionCall(\"edgxtra.initButton\", ?gid, ?graphQLService, str(?resource), ui:label(?resource)) }</script-->
                        <ui:if ui:condition=\"{= bound(?outgoingFlow) }\">
                            <span class=\"edg-heading size14px\">Outgoing Flow:</span>
                            <ui:resourceView arg:style=\"background-light-grayish-orange\" ui:matchIds=\"flow-details\" ui:resource=\"{= ?outgoingFlow }\"/>
                        </ui:if>
                        <ui:else>
                            <div class=\"\">No direct outgiong flows</div>
                        </ui:else>
                    </div>
                </ui:group>
            </div>
        </div>
    </ui:if>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:HTML ;
  rdfs:comment "A viewer that shows the details of flows associated with an interoperable resource. Typically this is a business application." ;
  rdfs:label "Interoperable Flow Details" ;
  rdfs:subClassOf swa:ObjectElements ;
.
edg:InteroperableFlowOverviewGadget
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <ui:loadable class=\"swa-labeled-objects\" let:gid=\"{= ui:uniqueId() }\" ui:loadId=\"{= ui:uniqueId() }\">
        <!--ui:dumpScope ui:message=\"AAA1: edg:InteroperableSummaryGadget_v3 -  {= ?focusNode }\"/-->
        <ui:if ui:condition=\"{= ?path = edg:isLogicalFlowsGadget }\">
            <edg:ResourceInstancesDataTable arg:canEdit=\"{= ?false }\" arg:columnService=\"{= edg:ResourceDataTableLogicalFlowColumns }\" arg:createResourceHandler=\"{= edg:CreateLogicalFlowResourceHandler }\" arg:dataEndpoint=\"{= edg:DataTableResultsCallbackForLogicalFlows }\" arg:resource=\"{= ?focusNode }\" arg:resourceType=\"{= edg:Flow }\"/>
        </ui:if>
        <ui:elseif ui:condition=\"{= ?path = edg:isPhysicalFlowsGadget }\">
            <edg:ResourceInstancesDataTable arg:canEdit=\"{= ?false }\" arg:columnService=\"{= edg:ResourceDataTablePhysicalFlowColumns }\" arg:createResourceHandler=\"{= edg:CreatePhysicalFlowResourceHandler }\" arg:dataEndpoint=\"{= edg:DataTableResultsCallbackForPhysicalFlows }\" arg:resource=\"{= ?focusNode }\" arg:resourceType=\"{= edg:Flow }\"/>
        </ui:elseif>
    </ui:loadable>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "A gadget for viewing a summary of the interoperable behavior of an interoperable entity, typically a business application or system." ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/project/technical-assets> ;
  rdfs:label "Interoperable Flow Overview Gadget" ;
  rdfs:subClassOf edg:PathElements ;
.
edg:InteroperableServiceEndpointGadget
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:loadable class=\"swa-labeled-objects\" ui:loadId=\"{= ui:uniqueId() }\">
    <!--ui:dumpScope ui:message=\"AAA1: edg:InteroperableServiceEndpointGadget\"/-->
    <edg:InteroperableFlowDetails arg:resource=\"{= ?focusNode }\"/>
    <edg:ServiceEndpointFlowDetails arg:path=\"{= ?path }\" arg:resource=\"{= ?focusNode }\"/>
    <edg:ResponsiveObjectsViewer arg:class=\"{= edg:SoftwareFunction }\" arg:property=\"{= edg:usesSoftwareFunction }\" arg:resource=\"{= ?focusNode }\" arg:text=\"Interface Functions:\"/>
    <edg:ResponsiveObjectsViewer arg:class=\"{= edg:DirectMappingsCollection }\" arg:property=\"{= edg:mappingsCollection }\" arg:resource=\"{= ?focusNode }\" arg:text=\"Diect Mappings Collection:\"/>
    <div class=\"clear=both\"/>
    <br/>
</ui:loadable>
"""^^ui:Literal ;
  rdfs:comment "A gadget for viewing references an interoperable resource makes to edg:ServiceEndpoirt." ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/project/technical-assets> ;
  rdfs:label "Interoperable Service Endpoint Gadget" ;
  rdfs:subClassOf edg:PathElements ;
.
edg:InteroperableSummaryGadget
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:loadable class=\"swa-labeled-objects\" let:gid=\"{= ui:uniqueId() }\" ui:loadId=\"{= ui:uniqueId() }\">
    <edg:InteroperableFlowDetails arg:resource=\"{= ?focusNode }\"/>
    <edg:ServiceEndpointFlowDetails arg:path=\"{= edg:serviceEndpoint }\" arg:resource=\"{= ?focusNode }\"/>
    <edg:ResponsiveObjectsViewer arg:class=\"{= edg:SoftwareFunction }\" arg:property=\"{= edg:usesSoftwareExecutable }\" arg:resource=\"{= ?focusNode }\" arg:style=\"background-very-pale-blue\" arg:text=\"Interface Functions:\"/>
    <edg:ResponsiveObjectsViewer arg:class=\"{= edg:DirectMappingsCollection }\" arg:property=\"{= edg:mappingsCollection }\" arg:resource=\"{= ?focusNode }\" arg:style=\"background-very-pale-blue\" arg:text=\"Diect Mappings Collection:\"/>
    <div class=\"clear=both\"/>
    <br/>
</ui:loadable>
"""^^ui:Literal ;
  rdfs:comment "A gadget for viewing a summary of the interoperable behavior of an interoperable entity, typically a business application or system." ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/project/technical-assets> ;
  rdfs:label "Interoperable Summary Gadget" ;
  rdfs:subClassOf edg:PathElements ;
.
edg:InteroperableUpstreamDependenciesGadget
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <ui:loadable class=\"swa-labeled-objects\" let:gid=\"{= ui:uniqueId() }\" ui:loadId=\"{= ui:uniqueId() }\">
        <!--ui:dumpScope ui:message=\"AAA1: edg:InteroperableUpstreamDependenciesGadget -  {= ?focusNode }\"/-->
        <edg:ResourceInstancesDataTable arg:columnService=\"{= edg:ResourceDataTableInteroperableUpstreamColumns }\" arg:dataEndpoint=\"{= edg:DataTableResultsCallbackForInteroperableUpstreamDependency }\" arg:resource=\"{= ?focusNode }\" arg:resourceType=\"{= edg:Interoperable }\"/>
    </ui:loadable>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "A gadget for viewing the centrality connectiveness of the interoperable graph of an interoperable entity, typically a business application or system." ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/project/technical-assets> ;
  rdfs:label "Interoperable Upstream Dependencies Gadget" ;
  rdfs:subClassOf edg:PathElements ;
.
edg:LogicalFlow
  ui:instanceView """
<ui:group ui:id=\"datatable-columns\" ui:priority=\"{= -1 }\">
    <edg:ResourceDataTableLogicalFlowDetailsColumns/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"datatables-results\" ui:priority=\"{= 1 }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:Flow datatables-results\"/-->
    <swa:SimpleDataTableResults arg:createResourceHandler=\"{= edg:CreateFlowResourceHandler }\" arg:frozen=\"{= ?frozen }\" arg:hasFixedHeader=\"{= true }\" arg:hasFixedToolbar=\"{= true }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"flow-details\" ui:priority=\"{= 10 }\">
    <!--ui:dumpScope ui:message=\"AAA1: edg:LogicalFlow\"/-->
    <edg:LogicalFlowDetails arg:resource=\"{= ?this }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"resource-summary\" ui:priority=\"{= 10 }\">
    <edg:ResourceLink arg:resource=\"{= ?this }\"/>
    <edg:ResponsiveObjectsViewer arg:class=\"{= edg:InformationAsset }\" arg:matchIds=\"resource-summary\" arg:property=\"{= edg:transfersInformationAsset }\" arg:resource=\"{= ?this }\" arg:style=\"background-blue6\" arg:text=\"Information Exchanged:\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"results-table-config\" ui:priority=\"{= 1 }\">
    <swon:Array>
        <swon:Object>
            <swon:Value arg:name=\"createService\" arg:value=\"{= swa:CreateResourceDialogBodyForAssetCollection }\"/>
            <swon:Value arg:name=\"createResourceHandler\" arg:value=\"{= edg:CreateFlowResourceHandler }\"/>
        </swon:Object>
    </swon:Array>
</ui:group>
"""^^ui:Literal ;
.
edg:LogicalFlow-exchangedEntities
  sh:class edg:ExchangeableEntity ;
.
edg:LogicalFlowDetails
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resource ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The number of rows to deliver." ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group let:dataGraph=\"{= swa:dataGraph() }\" let:masterGraph=\"{= teamwork:currentMasterGraph() }\">
    <ui:group let:graphId=\"{= teamwork:graphIdFromGraph(?masterGraph) }\" let:interoperableSource=\"{= spl:object(?resource, edg:source) }\" let:interoperableTarget=\"{= spl:object(?resource, edg:target) }\" let:projectGraph=\"{= teamwork:currentMasterGraph() }\" let:teamGraph=\"{= COALESCE(IF(bound(?resource), teamwork:teamGraph(IRI(smf:definedIn(?resource))), ?none), teamwork:currentTeamGraph()) }\">
        <!--ui:dumpScope ui:message=\"AAA: edg:LogicalFlowDetails\"/-->
        <ui:setContext ui:queryGraph=\"{= ui:graphWithImports(?projectGraph) }\">
            <div class=\"box-rounded {= ?style }\" title=\"{= ?resource }\">
                <div class=\"container-fluid\">
                    <edg:ObjectsEnum arg:hideIfEmpty=\"{= true }\" arg:label=\"Logical Flow Connectivity\" arg:open=\"{= true }\" arg:openable=\"{= true }\">
                        <span class=\"edg-heading\">
                            <edg:ResourceLink arg:resource=\"{= ?resource }\"/>
                        </span>
                        <ui:if ui:condition=\"{= bound(?interoperableSource) }\">
                            <ui:resourceView arg:style=\"{= ?style }\" edg:flow=\"{= ?resource }\" ui:matchIds=\"flow-source-details\" ui:resource=\"{= ?interoperableSource }\"/>
                        </ui:if>
                        <ui:else>
                            <span style=\"color:red\"> - missing interoperable source resource.</span>
                            <br/>
                        </ui:else>
                        <ui:if ui:condition=\"{= bound(?interoperableTarget) }\">
                            <ui:resourceView arg:style=\"{= ?style }\" edg:flow=\"{= ?resource }\" ui:matchIds=\"flow-target-details\" ui:resource=\"{= ?interoperableTarget }\"/>
                        </ui:if>
                        <ui:else>
                            <span style=\"color:red\"> - missing interoperable target resource.</span>
                            <br/>
                        </ui:else>
                    </edg:ObjectsEnum>
                    <edg:ObjectsEnum arg:hideIfEmpty=\"{= true }\" arg:label=\"Information Exchanged\" arg:open=\"{= true }\" arg:openable=\"{= true }\">
                        <edg:ResponsiveObjectsViewer arg:class=\"{= edg:InformationAsset }\" arg:matchIds=\"resource-summary\" arg:property=\"{= edg:transfersInformationAsset }\" arg:resource=\"{= ?resource }\" arg:style=\"background-light-grayish-blue\" arg:text=\"\"/>
                    </edg:ObjectsEnum>
                    <edg:ObjectsEnum arg:hideIfEmpty=\"{= true }\" arg:label=\"Packages Exchanged\" arg:open=\"{= true }\" arg:openable=\"{= true }\">
                        <edg:ResponsiveObjectsViewer arg:class=\"{= edg:LogicalPackage }\" arg:matchIds=\"resource-summary\" arg:property=\"{= edg:transfersPackage }\" arg:resource=\"{= ?resource }\" arg:style=\"background-light-grayish-blue\" arg:text=\"\"/>
                    </edg:ObjectsEnum>
                    <edg:ObjectsEnum arg:hideIfEmpty=\"{= true }\" arg:label=\"Relevant Entities\" arg:open=\"{= true }\" arg:openable=\"{= true }\">
                        <edg:ResponsiveObjectsViewer arg:class=\"{= edg:LogicalEntity }\" arg:matchIds=\"resource-summary\" arg:property=\"{= edg:involvedEntity }\" arg:resource=\"{= ?resource }\" arg:style=\"background-azure\" arg:text=\"\"/>
                    </edg:ObjectsEnum>
                    <edg:ObjectsEnum arg:hideIfEmpty=\"{= true }\" arg:label=\"Associated Physical Flows\" arg:open=\"{= true }\" arg:openable=\"{= true }\">
                        <edg:ResponsiveObjectsViewer arg:class=\"{= edg:PhysicalFlow }\" arg:matchIds=\"resource-summary\" arg:property=\"{= edg:realizedAs }\" arg:resource=\"{= ?resource }\" arg:style=\"background-azure\" arg:text=\"\"/>
                    </edg:ObjectsEnum>
                </div>
            </div>
        </ui:setContext>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:label "Logical flow details" ;
  rdfs:subClassOf edg:DataTableResults ;
.
edg:LogicalFlowSummaryGadget
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group let:result=\"{= ui:setSessionAttribute(&quot;flowContext&quot;, str(?focusNode)) }\">
    <!--ui:dumpScope ui:message=\"AAA1: edg:LogicalFlowSummaryGadget - {= ?focusNode }\"/-->
    <ui:loadable class=\"swa-labeled-objects\" ui:loadId=\"{= ui:uniqueId() }\">
        <ui:if ui:condition=\"{= bound(?focusNode) &amp;&amp; spl:instanceOf(?focusNode, edg:LogicalFlow) }\">
            <ui:resourceView arg:style=\"background-very-pale-blue\" ui:matchIds=\"flow-details\" ui:resource=\"{= ?focusNode }\"/>
        </ui:if>
    </ui:loadable>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "The gadget for object resources that serve as sources and targets of a logical flow." ;
  rdfs:label "Logical Flow Summary Gadget" ;
  rdfs:seeAlso edg:DataflowSummaryGadget ;
  rdfs:subClassOf edg:PathElements ;
.
edg:Protectable
  ui:instanceView """
<ui:group ui:id=\"show-aspect-summary\" ui:priority=\"{= 10 }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:Protectable\"/-->
    <edg:ObjectsEnum arg:hideIfEmpty=\"{= true }\" arg:label=\"Data Protection\" arg:open=\"{= true }\" arg:openable=\"{= true }\">
        <!--swa:ObjectViewer arg:object=\"{= spl:object(?subject, edg:personalDataCategory) }\"
  arg:predicate=\"edg:personalDataCategory\"
  arg:subject=\"{= ?subject }\"/-->
        <edg:ResponsiveObjectsBody arg:predicate=\"{= edg:isPersonallyIdentifiableInformation }\" arg:projectGraph=\"{= ?projectsGraph }\" arg:single=\"{= true }\" arg:subject=\"{= ?this }\" arg:tag=\"{= ?tag }\"/>
        <edg:ResponsiveObjectsBody arg:predicate=\"{= edg:personalDataCategory }\" arg:projectGraph=\"{= ?projectsGraph }\" arg:single=\"{= true }\" arg:subject=\"{= ?this }\" arg:tag=\"{= ?tag }\"/>
        <edg:ResponsiveObjectsBody arg:predicate=\"{= edg:personalDataUseConsent }\" arg:projectGraph=\"{= ?projectsGraph }\" arg:single=\"{= true }\" arg:subject=\"{= ?this }\" arg:tag=\"{= ?tag }\"/>
        <edg:ResponsiveObjectsBody arg:predicate=\"{= edg:obfuscatedBy }\" arg:projectGraph=\"{= ?projectsGraph }\" arg:single=\"{= true }\" arg:subject=\"{= ?this }\" arg:tag=\"{= ?tag }\"/>
    </edg:ObjectsEnum>
</ui:group>
"""^^ui:Literal ;
.
edg:ResourceDataTableDataflowDetailsColumns
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <!--ui:dumpScope ui:message=\"AAA: edg:ResourceDataTableDataflowDetailsColumns\"/-->
    <swon:Array>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"data\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= false }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Source\"/>
            <swon:Value arg:name=\"data\" arg:value=\"source\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"{= edg:input }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Target\"/>
            <swon:Value arg:name=\"data\" arg:value=\"target\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"{= edg:output }\"/>
        </swon:Object>
    </swon:Array>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "JSON representation of the columns needed for showing dataflow details" ;
  rdfs:label "Resource data table dataflow details columns" ;
  rdfs:subClassOf edg:DataTableColumns ;
.
edg:ResourceDataTableDirectMappingsCollectionColumns
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group let:resource=\"{= IRI(ui:getSessionAttribute(&quot;persistresource&quot;)) }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:ResourceDataTableDirectMappingsCollectionColumns\"/-->
    <swon:Array>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"data\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= false }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Mapping\"/>
            <swon:Value arg:name=\"data\" arg:value=\"mapping\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"String\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Source\"/>
            <swon:Value arg:name=\"data\" arg:value=\"source\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"{= edg:input }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Target\"/>
            <swon:Value arg:name=\"data\" arg:value=\"target\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"{= edg:output }\"/>
        </swon:Object>
    </swon:Array>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "JSON representation of the columns needed for direct mappings" ;
  rdfs:label "Resource data table direct mappings collection columns" ;
  rdfs:subClassOf edg:DataTableColumns ;
.
edg:ResourceDataTableFlowColumns
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group let:resource=\"{= IRI(ui:getSessionAttribute(&quot;persistresource&quot;)) }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:ResourceDataTableFlowColumns\"/-->
    <swon:Array>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"data\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= false }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Type\"/>
            <swon:Value arg:name=\"data\" arg:value=\"type\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Label\"/>
            <swon:Value arg:name=\"data\" arg:value=\"label\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"String\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Source\"/>
            <swon:Value arg:name=\"data\" arg:value=\"source\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Target\"/>
            <swon:Value arg:name=\"data\" arg:value=\"target\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
        </swon:Object>
    </swon:Array>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "JSON representation of the columns needed for a resource in a flow DataTable. " ;
  rdfs:label "Resource data table flow columns" ;
  rdfs:subClassOf edg:DataTableColumns ;
.
edg:ResourceDataTableInteroperableDownstreamColumns
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <!--ui:dumpScope ui:message=\"AAA: edg:ResourceDataTableInteroperableColumns\"/-->
    <swon:Array>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"data\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= false }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Dependency Type\"/>
            <swon:Value arg:name=\"data\" arg:value=\"dependencyType\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"string\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Downstream Degree\"/>
            <swon:Value arg:name=\"data\" arg:value=\"degree\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"1\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"num\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Downstream Dependency\"/>
            <swon:Value arg:name=\"data\" arg:value=\"dependency\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Part of\"/>
            <swon:Value arg:name=\"data\" arg:value=\"partOf\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
        </swon:Object>
    </swon:Array>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "JSON representation of the columns needed for a resource in an interoperable downstream DataTable. " ;
  rdfs:seeAlso edg:DataTableResultsCallbackForInteroperableDownstreamDependency ;
  rdfs:seeAlso edg:ResourceDataTableInteroperableUpstreamColumns ;
  rdfs:subClassOf edg:DataTableColumns ;
.
edg:ResourceDataTableInteroperableUpstreamColumns
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <!--ui:dumpScope ui:message=\"AAA: edg:ResourceDataTableInteroperableColumns\"/-->
    <swon:Array>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"data\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= false }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Dependency Type\"/>
            <swon:Value arg:name=\"data\" arg:value=\"dependencyType\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"string\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Upstream Degree\"/>
            <swon:Value arg:name=\"data\" arg:value=\"degree\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"1\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"num\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Upstream Dependency\"/>
            <swon:Value arg:name=\"data\" arg:value=\"dependency\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Part of\"/>
            <swon:Value arg:name=\"data\" arg:value=\"partOf\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
        </swon:Object>
    </swon:Array>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "JSON representation of the columns needed for a resource in an upstream interoperable DataTable. " ;
  rdfs:seeAlso edg:DataTableResultsCallbackForInteroperableUpstreamDependency ;
  rdfs:seeAlso edg:ResourceDataTableInteroperableDownstreamColumns ;
  rdfs:subClassOf edg:DataTableColumns ;
.
edg:ResourceDataTableLogicalFlowColumns
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group let:dataGraph=\"{= swa:dataGraph() }\" let:masterGraph=\"{= teamwork:currentMasterGraph() }\" let:resource=\"{= IRI(ui:getSessionAttribute(&quot;persistresource&quot;)) }\">
    <ui:group let:graphId=\"{= teamwork:graphIdFromGraph(?masterGraph) }\">
        <!--ui:dumpScope ui:message=\"AAA: edg:ResourceDataTableColumns\"/-->
        <!--ui:resourceView ui:matchIds=\"datatable-flow-columns\" ui:resource=\"{= ?this }\"/-->
        <swon:Array>
            <swon:Object>
                <swon:Value arg:name=\"title\" arg:value=\"uri\"/>
                <swon:Value arg:name=\"data\" arg:value=\"uri\"/>
                <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
                <swon:Value arg:name=\"visible\" arg:value=\"{= false }\"/>
                <swon:Value arg:name=\"orderable\" arg:value=\"{= false }\"/>
            </swon:Object>
            <swon:Object>
                <swon:Value arg:name=\"title\" arg:value=\"Logical Flow\"/>
                <swon:Value arg:name=\"data\" arg:value=\"flow\"/>
                <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
                <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
            </swon:Object>
            <swon:Object>
                <swon:Value arg:name=\"title\" arg:value=\"Type\"/>
                <swon:Value arg:name=\"data\" arg:value=\"type\"/>
                <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
                <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            </swon:Object>
            <swon:Object>
                <swon:Value arg:name=\"title\" arg:value=\"To/From\"/>
                <swon:Value arg:name=\"data\" arg:value=\"direction\"/>
                <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
                <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"type\" arg:value=\"String\"/>
            </swon:Object>
            <swon:Object>
                <swon:Value arg:name=\"title\" arg:value=\"Endpoint\"/>
                <swon:Value arg:name=\"data\" arg:value=\"endpoint\"/>
                <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
                <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
                <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
            </swon:Object>
            <swon:Object>
                <swon:Value arg:name=\"title\" arg:value=\"Information Exchanged\"/>
                <swon:Value arg:name=\"data\" arg:value=\"informationExchanged\"/>
                <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
                <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
                <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
            </swon:Object>
            <swon:Object>
                <swon:Value arg:name=\"title\" arg:value=\"Relevant Entities\"/>
                <swon:Value arg:name=\"data\" arg:value=\"involvedEntities\"/>
                <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
                <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
                <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
            </swon:Object>
            <swon:Object>
                <swon:Value arg:name=\"title\" arg:value=\"Realized as\"/>
                <swon:Value arg:name=\"data\" arg:value=\"realizedAs\"/>
                <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
                <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
                <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
                <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
            </swon:Object>
        </swon:Array>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "JSON representation of the columns needed for a resource in a flow DataTable. " ;
  rdfs:label "Resource data table logical flow columns" ;
  rdfs:seeAlso edg:DataTableResultsCallbackForLogicalFlows ;
  rdfs:seeAlso edg:DataTableResultsForLogicalFlows ;
  rdfs:subClassOf edg:DataTableColumns ;
.
edg:ResourceDataTableLogicalFlowDetailsColumns
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <!--ui:dumpScope ui:message=\"AAA: edg:ResourceDataTableLogicalFlowDetailsColumns\"/-->
    <swon:Array>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"data\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= false }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Type\"/>
            <swon:Value arg:name=\"data\" arg:value=\"type\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"{= rdf:type }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Source\"/>
            <swon:Value arg:name=\"data\" arg:value=\"source\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"{= edg:source }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Target\"/>
            <swon:Value arg:name=\"data\" arg:value=\"target\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"{= edg:target }\"/>
        </swon:Object>
    </swon:Array>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "JSON representation of the columns needed for showing lofical flow details" ;
  rdfs:label "Resource data table logical flow details columns" ;
  rdfs:subClassOf edg:DataTableColumns ;
.
edg:ResourceDataTablePhysicalFlowColumns
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group let:resource=\"{= IRI(ui:getSessionAttribute(&quot;persistresource&quot;)) }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:ResourceDataTableColumns\"/-->
    <swon:Array>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"data\" arg:value=\"uri\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= false }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Physical Flow\"/>
            <swon:Value arg:name=\"data\" arg:value=\"flow\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Type\"/>
            <swon:Value arg:name=\"data\" arg:value=\"type\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Direction\"/>
            <swon:Value arg:name=\"data\" arg:value=\"direction\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"type\" arg:value=\"String\"/>
        </swon:Object>
        <swon:Object>
            <swon:Value arg:name=\"title\" arg:value=\"Endpoint\"/>
            <swon:Value arg:name=\"data\" arg:value=\"endpoint\"/>
            <swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
            <swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
            <swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
            <swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
        </swon:Object>
        <!--swon:Object>
<swon:Value arg:name=\"title\" arg:value=\"Realizes Logical Flow\"/>
<swon:Value arg:name=\"data\" arg:value=\"implements\"/>
<swon:Value arg:name=\"defaultContent\" arg:value=\"\"/>
<swon:Value arg:name=\"searchable\" arg:value=\"{= false }\"/>
<swon:Value arg:name=\"visible\" arg:value=\"{= true }\"/>
<swon:Value arg:name=\"orderable\" arg:value=\"{= true }\"/>
<swon:Value arg:name=\"render\" arg:value=\"detailsLink\"/>
</swon:Object-->
    </swon:Array>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "JSON representation of the columns needed for a resource in a flow DataTable. " ;
  rdfs:label "Resource data table physical flow columns" ;
  rdfs:seeAlso edg:DataTableResultsForPhysicalFlows ;
  rdfs:seeAlso edg:InteroperableFlowOverviewGadget ;
  rdfs:subClassOf edg:DataTableColumns ;
.
edg:ResponsiveObjectsListViewer
  a swa:ObjectViewerClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <ui:if ui:condition=\"{= bound(?object) }\">
        <div class=\"box-rounded\" style=\"{= ?style }\" title=\"{= ?this }\">
            <div class=\"container-fluid \">
                <div class=\"size12px\">
                    <edg:ResponsiveObjectsViewer arg:property=\"{= ?predicate }\" arg:resource=\"{= ?object }\" arg:text=\"Interface Functions:\"/>
                </div>
            </div>
        </div>
    </ui:if>
    <ui:else>
        <swa:URIResourceViewer ui:args=\"*\"/>
    </ui:else>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "A viewer that uses bootstrap to list all objects of a given resource and property" ;
  rdfs:label "Responsive Objects List Viewer" ;
  rdfs:subClassOf swa:ObjectElements ;
.
edg:ServiceEndpoint
  ui:instanceView """
<ui:group let:downstreamInteroperableResource=\"{= spl:subject(edg:serviceEndpoint, ?this) }\" ui:id=\"flow-target-details\" ui:priority=\"{= 10 }\">
    <!--ui:dumpScope ui:message=\"AAA1: edg:ServiceEndpoint - target is {= ?this }\"/-->
    <span> to service endpoint <span class=\"edg-heading\">
            <edg:ResourceLink arg:resource=\"{= ?this }\"/>
        </span>
        <ui:if ui:condition=\"{= bound(?downstreamInteroperableResource) }\">
            <span> on <span class=\"edg-heading\">
                    <edg:ResourceLink arg:resource=\"{= ?downstreamInteroperableResource }\"/>
                </span>
            </span>
        </ui:if>
        <ui:else>
            <span> on missing interoperable source resource</span>
        </ui:else>
    </span>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group let:upstreamInteroperableResource=\"{= spl:subject(edg:serviceEndpoint, ?this) }\" ui:id=\"flow-source-details\" ui:priority=\"{= 10 }\">
    <!--ui:dumpScope ui:message=\"AAA1: edg:ServiceEndpoint - source is {= ?this }\"/-->
    <span> from service endpoint <span class=\"edg-heading\">
            <edg:ResourceLink arg:resource=\"{= ?this }\"/>
        </span>
        <ui:if ui:condition=\"{= bound(?upstreamInteroperableResource) }\">
            <span> on <span class=\"edg-heading\">
                    <edg:ResourceLink arg:resource=\"{= ?upstreamInteroperableResource }\"/>
                </span>
            </span>
        </ui:if>
        <ui:else>
            <span> on missing interoperable source resource</span>
        </ui:else>
    </span>
</ui:group>
"""^^ui:Literal ;
.
edg:ServiceEndpointDataExchangeDetailsGadget
  a ui:NodeClass ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <!--ui:dumpScope ui:message=\"AAA1: edg:ServiceEndpointDatafExchangeDetailsGadget -  {= ?focusNode }\"/-->
    <ui:loadable class=\"swa-labeled-objects\" ui:loadId=\"{= ui:uniqueId() }\">
        <ui:if ui:condition=\"{= bound(?focusNode) &amp;&amp; spl:instanceOf(?focusNode, edg:ServiceEndpoint) }\">
            <ui:group>
                <div class=\"box-rounded background-very-light-blue\">
                    <div class=\"size14px\" title=\"{= ?focusNode }\">
                        <ui:group let:interoperableOwner=\"{= spl:subject(edg:serviceEndpoint, ?focusNode) }\">
                            <ui:if ui:condition=\"{= bound(?interoperableOwner) }\">
                                <span class=\"edg-heading\">
                                    <swa:Link arg:resource=\"{= ?focusNode }\"/> is an endpoint on:&nbsp;
<swa:Link arg:resource=\"{= ?interoperableOwner }\"/>
                                </span>
                            </ui:if>
                            <ui:else>
                                <p class=\"edg-heading\" style=\"color:red\">Endpoint is missing an interoperable owner resource.</p>
                            </ui:else>
                        </ui:group>
                    </div>
                    <edg:ResponsiveSubjectsViewer arg:class=\"{= edg:Flow }\" arg:matchIds=\"flow-details\" arg:noneText=\"No outgoing flows associated with this service endpoint\" arg:property=\"{= edg:source }\" arg:resource=\"{= ?focusNode }\" arg:style=\"background-very-soft-blue\" arg:text=\"Outgoing Flows:\"/>
                    <edg:ResponsiveSubjectsViewer arg:class=\"{= edg:Flow }\" arg:matchIds=\"flow-details\" arg:noneText=\"No incoming flows associated with this service endpoint\" arg:property=\"{= edg:target }\" arg:resource=\"{= ?focusNode }\" arg:style=\"background-very-soft-blue\" arg:text=\"Incoming Flows:\"/>
                </div>
            </ui:group>
        </ui:if>
    </ui:loadable>
</ui:group>
"""^^ui:Literal ;
  rdfs:comment "The gadget for showing the interoperable entities and data exchanged over a service endpoint." ;
  rdfs:label "Service endpoint data exchange gadget" ;
  rdfs:subClassOf edg:PathElements ;
.
edg:ServiceEndpointFlowDetails
  a swa:ObjectViewerClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:path ;
      spl:valueType rdf:Property ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:resource ;
      spl:valueType edg:Interoperable ;
    ] ;
  ui:private true ;
  ui:prototype """
<ui:group>
    <ui:if ui:condition=\"{= bound(?resource) }\">
        <ui:call arg:class=\"{= edg:Asset }\" arg:property=\"{= ?path }\" arg:resource=\"{= ?resource }\" ui:template=\"{= edg:getPropertyValuesForResource }\" ui:varName=\"endpoints\">
            <!--ui:dumpResultSet ui:message=\"AAA: edg:ServiceEndpointGadget\" ui:resultSet=\"{= ?endpoints }\"/-->
            <ui:if ui:condition=\"{= !spr:isEmpty(?endpoints) }\">
                <div class=\"box-rounded background-very-pale-blue\">
                    <div class=\"container-fluid size12px\">
                        <ui:forEach ui:resultSet=\"{= ?endpoints }\">
                            <div class=\"row\">
                                <ui:group let:incomingFlow=\"{= spl:subject(edg:target, ?value) }\" let:outgoingFlow=\"{= spl:subject(edg:source, ?value) }\">
                                    <span class=\"edg-heading size14px\">Flows on Endpoint: <swa:Link arg:resource=\"{= ?value }\"/>
                                    </span>
                                    <br/>
                                    <ui:if ui:condition=\"{= bound(?incomingFlow) }\">
                                        <span class=\"edg-heading\">Incoming Flow:</span>
                                        <ui:resourceView arg:style=\"background-light-grayish-orange\" ui:matchIds=\"flow-details\" ui:resource=\"{= ?incomingFlow }\"/>
                                    </ui:if>
                                    <ui:else>
                                        <div class=\"\">No incoming flows to this endpoint.</div>
                                    </ui:else>
                                    <ui:if ui:condition=\"{= bound(?outgoingFlow) }\">
                                        <span class=\"edg-heading size14px\">Outgoing Flow:</span>
                                        <ui:resourceView arg:style=\"background-light-grayish-orange\" ui:matchIds=\"flow-details\" ui:resource=\"{= ?outgoingFlow }\"/>
                                    </ui:if>
                                    <ui:else>
                                        <div class=\"\">No outgiong flows on this endpoint.</div>
                                    </ui:else>
                                </ui:group>
                            </div>
                        </ui:forEach>
                    </div>
                </div>
            </ui:if>
        </ui:call>
    </ui:if>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:HTML ;
  rdfs:comment "A viewer that shows the details of flows for the service endpoints of an interoperable resource. Typically this is a business application." ;
  rdfs:label "Service Endpoints Flow Details" ;
  rdfs:subClassOf swa:ObjectElements ;
.
edg:SoftwareCapable
  ui:instanceView """
<ui:group let:dataGraph=\"{= swa:dataGraph() }\" let:masterGraph=\"{= teamwork:currentMasterGraph() }\" ui:id=\"datatable-flow\" ui:priority=\"{= -1 }\">
    <edg:DataTableResultsForFlows arg:resource=\"{= ?this }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"datatable-logical-flows\" ui:priority=\"{= -1 }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:SoftwareCapable datatable for logical flows\"/-->
    <edg:DataTableResultsForLogicalFlows arg:resource=\"{= ?this }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"datatable-physical-flows\" ui:priority=\"{= -1 }\">
    <!--ui:dumpScope ui:message=\"AAA: edg:SoftwareCapable datatable for physical flows\"/-->
    <edg:DataTableResultsForPhysicalFlows arg:resource=\"{= ?this }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"flow-source-details\" ui:priority=\"{= 10 }\">
    <!--ui:dumpScope ui:message=\"AAA1: edg:SoftwareCapable - source is {= ?this }\"/-->
    <span class=\"pl20px\">from business application <span class=\"edg-heading\">
            <edg:ResourceLink arg:resource=\"{= ?this }\"/>
        </span>
    </span>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"flow-target-details\" ui:priority=\"{= 10 }\">
    <!--ui:dumpScope ui:message=\"AAA1: edg:BusinessApplication - target is {= ?this }\"/-->
    <span> to business application <span class=\"edg-heading\">
            <edg:ResourceLink arg:resource=\"{= ?this }\"/>
        </span>
    </span>
</ui:group>
"""^^ui:Literal ;
.
edg:TechnicalAsset
  edg:instancesHeldInAssetCollectionType edg:TechnicalAssetsProjectType ;
.
edg:TechnicalAssetsProject
  a rdfs:Class ;
  rdfs:subClassOf teamwork:Vocabulary ;
.
edg:TechnicalAssetsProjectType
  a edg:ProjectType ;
  edg:permittedProjectType edg:BigDataAssetsProjectType ;
  edg:permittedProjectType edg:DataAssetsProjectType ;
  edg:permittedProjectType edg:DatatypesProjectType ;
  edg:permittedProjectType edg:EDGenumerationsProjectType ;
  edg:permittedProjectType edg:EnterpriseModelsProjectType ;
  edg:permittedProjectType edg:EnumerationsProjectType ;
  edg:permittedProjectType edg:GlossaryProjectType ;
  edg:permittedProjectType edg:PlatformGovernanceModelProjectType ;
  edg:permittedProjectType edg:TechnicalAssetsProjectType ;
  edg:permittedProjectType taxonomies:ProjectType ;
  edg:permittedProjectType rdmprojects:ProjectType ;
  edg:permittedProjectType ontologyprojects:ProjectType ;
  edg:selectResourceType edg:TechnicalViewpoint ;
  edg.v:icon "tq-technical-icon" ;
  teamwork:dashboardGadget tasks:TaskStatusDashboardGadget ;
  teamwork:dashboardGadget teamwork:CompletenessDashboardGadget ;
  teamwork:dashboardGadget teamwork:TagStatusDashboardGadget ;
  teamwork:dashboardGadget teamwork:ValidationDashboardGadget ;
  teamwork:deletePlugin teamwork:RemoveFromLuceneIndexDeletePlugin ;
  teamwork:editableImportsTemplate edg:EditableImports ;
  teamwork:isReadOnlyTypeFunction edg:isReadOnlyType ;
  teamwork:mainClass edg:TechnicalAsset ;
  teamwork:navMenuLabel "Technical Assets" ;
  teamwork:navigationTreeChildSelectTemplate rdmprojects:NavigationTreeChildSelectTemplate ;
  teamwork:navigationTreeRootSelectTemplate rdmprojects:NavigationTreeRootSelectTemplate ;
  teamwork:owlImports "http://edg.topbraid.solutions/1.0/schema/datamodels" ;
  teamwork:owlImports "http://edg.topbraid.solutions/1.0/schema/edg" ;
  teamwork:owlImports "http://edg.topbraid.solutions/1.0/schema/technical-assets" ;
  teamwork:owlImports "http://edg.topbraid.solutions/1.0/shapes/core" ;
  teamwork:owlImports "http://edg.topbraid.solutions/1.0/shapes/datamodels" ;
  teamwork:owlImports "http://edg.topbraid.solutions/1.0/shapes/requirements-model" ;
  teamwork:owlImports "http://edg.topbraid.solutions/1.0/shapes/technical-assets" ;
  teamwork:owlImports "http://topbraid.org/metadata" ;
  teamwork:owlImports "http://topbraid.org/teamworkconstraints" ;
  teamwork:owlImports "urn:x-evn-master:edg_enumerations_singleton" ;
  teamwork:pluralLabel "Technical Assets Collections" ;
  teamwork:projectEditorClass edg:ResultsModelEditor ;
  teamwork:projectPlugin edg:MainClassOverrideManagePlugin ;
  teamwork:projectPlugin savedQueries:ExportSavedSPARQLQueriesPlugin ;
  teamwork:projectPlugin savedQueries:SPARQLEndpointPlugin ;
  teamwork:projectPlugin teamwork:ComparisonReportPlugin ;
  teamwork:projectPlugin teamwork:DefaultNamespacePlugin ;
  teamwork:projectPlugin teamwork:ExportSavedSearchPlugin ;
  teamwork:projectPlugin teamwork:GeneralPlugins ;
  teamwork:projectPlugin teamwork:GraphURIPlugin ;
  teamwork:projectPlugin teamwork:ImportedByGeneralPlugin ;
  teamwork:projectPlugin teamwork:ImportsGeneralPlugin ;
  teamwork:projectPlugin teamwork:LocalSearchManagePlugin ;
  teamwork:projectPlugin teamwork:NotificationsManagePlugin ;
  teamwork:projectPlugin teamwork:ProblemsAndSuggestionsReportPlugin ;
  teamwork:projectPlugin teamwork:PublishExportPlugin ;
  teamwork:projectPlugin teamwork:RDFFileImporterPlugin ;
  teamwork:projectPlugin teamwork:ScriptBasedImportPlugin ;
  teamwork:projectPlugin teamwork:SetImportSubjectAreaGraphsPlugin ;
  teamwork:projectPlugin teamwork:SetPerResourceGovernanceRolesManagePlugin ;
  teamwork:projectPlugin teamwork:SetSimpleSearchModePlugin ;
  teamwork:projectPlugin teamwork:SpreadsheetImportPlugin ;
  teamwork:projectPlugin teamwork:SpreadsheetUsingTemplateImportPlugin ;
  teamwork:projectPlugin teamwork:StatisticsReportPlugin ;
  teamwork:projectPlugin teamwork:URIConstructionRulesManagePlugin ;
  teamwork:projectTypeWeight -60 ;
  teamwork:singularLabel "Technical Assets Collection" ;
  teamwork:supportedNotification tasks:TaskCreatedNotification ;
  teamwork:supportedNotification tasks:TaskStatusChangedNotification ;
  teamwork:supportedNotification teamwork:FileImportedNotification ;
  teamwork:supportedNotification teamwork:SpreadsheetImportedNotification ;
  teamwork:supportedNotification teamwork:TagCreatedNotification ;
  teamwork:supportedNotification teamwork:TagStatusChangedNotification ;
  teamwork:supportedNotification teamwork:VocabularyClearedNotification ;
  teamwork:supportedNotification teamwork:VocabularyStatusChangedNotification ;
  teamwork:vocabularyType edg:TechnicalAssetsProject ;
  rdfs:comment "Technical Assets Collections support the specification of systems, business applications, software modules, software programs, software scripts and servers. Technical Assets Collections use EDG ontology models (extended by customers as needed) as a definition or schema for these items." ;
  rdfs:label "Technical Assets Project Type" ;
.
edg:isInformationAssetExchangesGadget
  a rdf:Property ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/project/technical-assets> ;
  rdfs:label "is information exchange gadget" ;
.
edg:newDataFlowURI
  a spin:Function ;
  spin:body [
      a sp:Select ;
      sp:resultVariables (
          [
            sp:varName "result" ;
          ]
        ) ;
      sp:where (
          [
            a sp:Bind ;
            sp:expression [
                a swa:getDefaultNamespace ;
              ] ;
            sp:variable [
                sp:varName "base" ;
              ] ;
          ]
          [
            a sp:Bind ;
            sp:expression [
                a spl:object ;
                sp:arg1 spin:_arg1 ;
                sp:arg2 edg:acronym ;
              ] ;
            sp:variable [
                sp:varName "maybeAcronym" ;
              ] ;
          ]
          [
            a sp:Bind ;
            sp:expression [
                a sp:coalesce ;
                sp:arg1 [
                    sp:varName "maybeAcronym" ;
                  ] ;
                sp:arg2 [
                    a fn:upper-case ;
                    sp:arg1 [
                        a afn:localname ;
                        sp:arg1 [
                            sp:varName "resourceType" ;
                          ] ;
                      ] ;
                  ] ;
                sp:arg3 "Thing" ;
              ] ;
            sp:variable [
                sp:varName "name" ;
              ] ;
          ]
          [
            a sp:Bind ;
            sp:expression [
                a sp:iri ;
                sp:arg1 [
                    a sp:concat ;
                    sp:arg1 [
                        a sp:str ;
                        sp:arg1 [
                            sp:varName "base" ;
                          ] ;
                      ] ;
                    sp:arg2 [
                        sp:varName "name" ;
                      ] ;
                    sp:arg3 "_" ;
                    sp:arg4 spin:_arg2 ;
                    sp:arg5 "-" ;
                    sp:arg6 spin:_arg3 ;
                    sp:arg7 "-" ;
                    sp:arg8 [
                        a spif:generateUUID ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "result" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate sp:arg1 ;
      spl:valueType rdfs:Class ;
      rdfs:comment "The type of the new resource." ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate sp:arg2 ;
      spl:valueType xsd:string ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate sp:arg3 ;
      spl:valueType xsd:string ;
    ] ;
  spin:private true ;
  spin:returnType rdfs:Resource ;
  rdfs:comment "Produces a suggestion for a URI for a new resource. This uses the URI of the main owl:Ontology as base, and then adds the type local name and then a UUID." ;
  rdfs:label "new dataflowresource with UUID" ;
  rdfs:subClassOf swa:Functions ;
.
edg:newResourceWithUUID
  vaem:todo "Verify this is needed." ;
.
<http://edg.topbraid.solutions/project/technical-assets/GMD_technical-assets>
  a vaem:GraphMetaData ;
  dcterms:modified "2016-12-18"^^xsd:date ;
  dcterms:rights "<p>This ontology is issued under a restricted copyright license that prohibits reproduction, distribution, copying and any other form of sharing. The license agreement can be found at <a href='http://www.topquadrant.com/docs/legal/EULA.pdf'>http://www.topquadrant.com/docs/legal/EULA.pdf.</p>"^^rdf:HTML ;
  vaem:hasGraphRole vaem:ProjectGraph ;
  vaem:hasLicenseType <voag:TopQuadrant_ONTOLOGY-LICENSE> ;
  vaem:hasOwner vaem:TopQuadrant ;
  vaem:hasSteward vaem:TopQuadrant ;
  vaem:isMetadataFor <http://edg.topbraid.solutions/1.0/project/technical-assets> ;
  vaem:name "EDG" ;
  vaem:namespace "http://edg.topbraid.solutions/model/" ;
  vaem:namespacePrefix "edg" ;
  vaem:owner "TopQuadrant, Inc." ;
  vaem:releaseDate "2016-12-18"^^xsd:date ;
  vaem:revision "1.0" ;
  vaem:usesNonImportedResource dcterms:abstract ;
  vaem:usesNonImportedResource dcterms:author ;
  vaem:usesNonImportedResource dcterms:created ;
  vaem:usesNonImportedResource dcterms:modified ;
  vaem:usesNonImportedResource dcterms:rights ;
  vaem:usesNonImportedResource dcterms:title ;
  vaem:usesNonImportedResource <http://voag.linkedmodel.org/voag#TopQuadrant_ONTOLOGY-LICENSE> ;
  vaem:withAttributionTo "Any references to this ontology should give attribution to TopQuadrant, Inc." ;
.
