# baseURI: http://edg.topbraid.solutions/1.0/diagram/lg/pipeline
# imports: http://debug.topbraidlive.org/1.0/swa
# imports: http://edg.topbraid.solutions/1.0/diagram/lg/library-common
# imports: http://edg.topbraid.solutions/1.0/diagram/lg/library-technical-assets
# imports: http://edg.topbraid.solutions/1.0/diagram/lg/software
# imports: http://edg.topbraid.solutions/1.0/schema/core
# imports: http://edg.topbraid.solutions/1.0/schema/diagrams
# imports: http://edg.topbraid.solutions/1.0/schema/lineage-models
# imports: http://edg.topbraid.solutions/1.0/schema/technical-assets
# imports: http://edg.topbraid.solutions/1.0/spin/jsfunctions
# imports: http://edg.topbraid.solutions/1.0/spin/library
# imports: http://spinrdf.org/spinx
# imports: http://topbraid.org/swa
# imports: http://topbraid.org/teamwork.ui

@prefix acjob: <http://evn.topbraidlive.org/tagger/acjob#> .
@prefix acpp: <http://topbraid.org/nlp/autoclassifier-preproc#> .
@prefix adminguide: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix autotagger: <http://evn.topbraidlive.org/autotagger#> .
@prefix cfg: <http://server.topbraidlive.org/web/2009/config#> .
@prefix charts: <http://uispin.org/charts#> .
@prefix compliance: <http://topbraid.org/compliance#> .
@prefix composite: <http://www.topbraid.org/2007/05/composite.owl#> .
@prefix conceptmatch: <http://topbraid.org/conceptmatch#> .
@prefix config: <http://server.topbraidlive.org/dynamic/config#> .
@prefix config-importers: <http://edg.topbraidlive.org/config/importers#> .
@prefix contact: <http://www.w3.org/2000/10/swap/pim/contact#> .
@prefix core-soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix corpus: <http://topbraid.org/corpus#> .
@prefix corpusprojects: <http://topbraid.org/corpus-projects#> .
@prefix crosswalk: <http://topbraid.org/crosswalk#> .
@prefix crosswalk.spin: <http://topbraid.org/crosswalk.spin#> .
@prefix crosswalkapp: <http://topbraid.org/swa/crosswalkapp#> .
@prefix crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#> .
@prefix css: <http://uispin.org/css#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dashboard: <http://example.org/dashboard#> .
@prefix datagraph: <http://teamwork.topbraidlive.org/datagraph/datagraphprojects#> .
@prefix dataset: <http://teamwork.topbraidlive.org/dataset#> .
@prefix datasetapp: <http://topbraid.org/swa/datasetapp#> .
@prefix datasetviewer: <http://topbraid.org/swa/datasetviewer#> .
@prefix datatype: <http://qudt.org/vocab/datatype/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcam: <http://purl.org/dc/dcam/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix ddl: <http://edg.topbraidlive.org/1.0/importers/ddl#> .
@prefix debug-swa: <http://debug.topbraidlive.org/1.0/swa/> .
@prefix default: <http://uispin.org/default#> .
@prefix defaultapp: <http://topbraid.org/swa/defaultapp#> .
@prefix deployProjectToServer: <http://server.topbraidlive.org/doc/deployProjectToServer#> .
@prefix devguide: <http://evn.topbraidlive.org/evndoc.www/devguide#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix doc: <http://www.w3.org/2000/10/swap/pim/doc#> .
@prefix document: <http://topbraid.org/document#> .
@prefix documents: <http://edg.topbraid.solutions/1.0/shapes/documents#> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix edg: <http://edg.topbraid.solutions/model/> .
@prefix edg-config: <http://edg.ext.topbraidlive.org/schema/config/importers#> .
@prefix edg-importer: <http://edg.topbraidlive.org/importer/> .
@prefix edg-qa: <http://edg.topbraidlive.org/utility/qa/> .
@prefix edg.c: <http://edg.topbraid.solutions/controller/> .
@prefix edg.global: <urn:x-evn-global:> .
@prefix edg.glossary: <http://edg.topbraid.solutions/glossary/> .
@prefix edg.sqoop: <http://edg.topbraid.solutions/model/sqoop/> .
@prefix edg.v: <http://edg.topbraid.solutions/view/> .
@prefix edgproduct: <http://edg.topbraidlive.org/edgproduct#> .
@prefix eeh-lib: <http://www.environmenthub.no/spin/1.0/eeh-lib#> .
@prefix eeh-reportlib: <http://www.environmenthub.no/spin/1.0/eeh-reportlib#> .
@prefix elements: <http://purl.org/dc/elements/1.1/> .
@prefix email: <http://topbraid.org/email#> .
@prefix evn: <http://topbraid.org/evn/evn#> .
@prefix evnAdminIndex: <http://evn.topbraidlive.org/evnAdminIndex#> .
@prefix evnIntro: <http://evn.topbraidlive.org/evndoc.www/evnIntro#> .
@prefix evndoc: <http://evn.topbraidlive.org/evndoc.www/evndoc#> .
@prefix evnimport: <http://evn.topbraidlive.org/uispin/evnimport#> .
@prefix evninstallguide: <http://teamwork.topbraidlive.org/doc/evninstallguide#> .
@prefix evnui: <http://evn.topbraidlive.org/ui#> .
@prefix ex: <http://example.org/> .
@prefix extjs: <http://uispin.com/extjs#> .
@prefix flow: <http://www.w3.org/2005/01/wf/flow#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix formTemplate: <http://teamwork.topbraidlive.org/system/formTemplate#> .
@prefix forms: <http://www.topbraid.org/2007/01/forms.owl#> .
@prefix frbr: <http://purl.org/vocab/frbr/core#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix gettingstarted: <http://evn.topbraidlive.org/evndoc.www/gettingstarted#> .
@prefix glossary: <http://evn.topbraidlive.org/evndoc.www/glossary#> .
@prefix governance: <http://topbraid.org/teamworkgovernance.ui#> .
@prefix gr: <http://purl.org/goodrelations/v1#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix graphql.search: <http://teamwork.topbraidlive.org/graphql.search#> .
@prefix html: <http://uispin.org/html#> .
@prefix imported: <http://topbraid.org/imported#> .
@prefix inference: <http://www.topbraid.org/2007/06/inference.owl#> .
@prefix jdbc: <http://edg.topbraidlive.org/1.0/importers/jdbc#> .
@prefix json: <http://topbraid.org/json#> .
@prefix kennedys: <http://topbraid.org/examples/kennedys#> .
@prefix let: <http://uispin.org/let#> .
@prefix letrs: <http://uispin.org/letrs#> .
@prefix lib-importer: <http://edg.topbraid.solutions/importer/lib#> .
@prefix lineage-transform: <http://edg.topbraid.solutions/transform/importer/lineage#> .
@prefix list: <http://jena.hpl.hp.com/ARQ/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix metadata: <http://topbraid.org/metadata#> .
@prefix o2o: <http://lib.topquadrant.com/owl/srg/o2o#> .
@prefix ontologyprojects: <http://teamwork.topbraidlive.org/ontologyprojects#> .
@prefix ontologyviewer: <http://topbraid.org/swa/ontologyviewer#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix permissionGroupMgmt: <http://server.topbraidlive.org/doc/permissionGroupMgmt#> .
@prefix pg: <http://server.topbraidlive.org/web/2013/permissiongroups#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix provo: <http://www.w3.org/ns/prov#> .
@prefix proxy-lineage: <http://edg.topbraid.solutions/proxy/importer/lineage#> .
@prefix quantity: <http://qudt.org/vocab/quantity/> .
@prefix qudd: <http://qudt.org/schema/datastructure/> .
@prefix quds: <http://qudt.org/schema/datastructure/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt-refdata: <http://qudt.org/vocab/refdata/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix raci: <http://topbraid.org/raci#> .
@prefix raci.spin: <http://topbraid.org/raci.spin#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdm: <http://rdm.topbraidlive.org/rdm/> .
@prefix rdmapp: <http://rdm.topbraidlive.org/rdmapp#> .
@prefix rdmfact: <http://topbraid.org/rdmfact#> .
@prefix rdmprojects: <http://rdm.topbraidlive.org/rdmprojects#> .
@prefix rdmviewer: <http://rdm.topbraidlive.org/rdmviewer#> .
@prefix saf: <http://topbraid.org/saf/> .
@prefix safconfig: <http://topbraid.org/safconfig/> .
@prefix safindex: <http://topbraid.org/safindex#> .
@prefix safm: <http://saf.topbraidlive.org/metaschema/> .
@prefix savedQueries: <http://teamwork.topbraidlive.org/ui/savedQueries#> .
@prefix scheduler: <http://topbraid.org/scheduler#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix search: <http://topbraid.org/search#> .
@prefix search.spin: <http://topbraid.org/search.spin#> .
@prefix server: <http://server.topbraidlive.org/server.ui#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sharepoint: <http://topbraid.org/sharepoint#> .
@prefix sharepoint.spin: <http://topbraid.org/sharepoint.spin#> .
@prefix sioc: <http://rdfs.org/sioc/ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosapp: <http://evn.topbraidlive.org/uiplugins#> .
@prefix skosshapes: <http://topbraid.org/skos.shapes#> .
@prefix skostemplate: <http://topbraid.org/spin/skostemplates#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix softwareprojects: <http://teamwork.topbraidlive.org/software/softwareprojects#> .
@prefix solr: <http://topbraid.org/solr#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparqlmotionlib-swp: <http://topbraid.org/sparqlmotionlib-swp#> .
@prefix sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#> .
@prefix spell: <http://topbraid.org/spellcheckresults#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spin.ui: <http://spinrdf.org/spin.ui#> .
@prefix spinmap: <http://spinrdf.org/spinmap#> .
@prefix spinmapl: <http://topbraid.org/spin/spinmapl#> .
@prefix spinx: <http://spinrdf.org/spinx#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix spl-dynamic-ranges: <http://spinrdf.org/spl-dynamic-ranges#> .
@prefix spr: <http://spinrdf.org/spr#> .
@prefix spra: <http://spinrdf.org/spra#> .
@prefix ss: <http://www.topbraidcomposer.org/owl/2006/08/spreadsheets.owl#> .
@prefix stats: <http://topbraid.org/statistics#> .
@prefix status: <http://topbraid.org/status#> .
@prefix style: <http://uispin.org/style#> .
@prefix svg: <http://uispin.org/svg#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix swaclasses: <http://topbraid.org/swaclasses#> .
@prefix swadoc: <http://topbraid.org/swadoc#> .
@prefix swaeditor: <http://topbraid.org/swaeditor#> .
@prefix swaowl: <http://topbraid.org/swaowl#> .
@prefix swash: <http://topbraid.org/swash#> .
@prefix swashacl: <http://topbraid.org/swashacl#> .
@prefix swauml: <http://topbraid.org/swauml#> .
@prefix swon: <http://uispin.org/swon#> .
@prefix sxml: <http://topbraid.org/sxml#> .
@prefix tables: <http://topbraid.org/tables#> .
@prefix tablesmap: <http://topbraid.org/spin/tablesmap#> .
@prefix tagger: <http://evn.topbraidlive.org/tagger#> .
@prefix taggerprojects: <http://evn.topbraidlive.org/taggerprojects#> .
@prefix taggerspin: <http://evn.topbraidlive.org/taggerspin#> .
@prefix taggerui: <http://evn.topbraidlive.org/taggerui#> .
@prefix task: <http://topbraid.org/task#> .
@prefix tasks: <http://topbraid.org/tasks#> .
@prefix tasks.spin: <http://topbraid.org/tasks.spin#> .
@prefix taxonomies: <http://evn.topbraidlive.org/evnprojects#> .
@prefix tbl: <http://topbraidlive.org/functions#> .
@prefix tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#> .
@prefix tbladmindoc: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix tblinstallguide: <http://server.topbraidlive.org/doc/tblinstallguide#> .
@prefix tblui: <http://server.topbraidlive.org/tblui#> .
@prefix teaminstallsec: <http://teamwork.topbraidlive.org/doc/teamworkInstallGuideSections#> .
@prefix teamwork: <http://topbraid.org/teamwork#> .
@prefix teamworkAdmin: <http://teamwork.topbraidlive.org/doc/teamworkAdmin#> .
@prefix teamworkconfig: <http://server.topbraidlive.org/system-applications/teamworkconfig#> .
@prefix teamworkconstraints: <http://topbraid.org/teamworkconstraints#> .
@prefix teamworkdashboard: <http://topbraid.org/teamworkdashboard#> .
@prefix teamworknotifications: <http://topbraid.org/teamworknotifications#> .
@prefix teamworkrules: <http://topbraid.org/teamworkrules#> .
@prefix teamworkscripts: <http://topbraid.org/teamworkscripts#> .
@prefix teamworkupdate: <http://teamworkAPI.topbraid.com/teamworkUpdate#> .
@prefix textindex: <http://topbraid.org/textindex#> .
@prefix tika-importer: <http://teamwork.topbraidlive.org/corpus/tika-importer#> .
@prefix tops: <http://www.topbraid.org/tops#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix tosh.ui: <http://topbraid.org/tosh.ui#> .
@prefix tracker: <http://teamwork.topbraidlive.org/ui/tracker#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix uitest: <http://uispin.org/test#> .
@prefix uix: <http://topbraidlive.org/uix#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix userAdminIndex: <http://evn.topbraidlive.org/userAdminIndex#> .
@prefix userIndex: <http://evn.topbraidlive.org/evndoc.www/userIndex#> .
@prefix userdat: <http://teamwork.topbraidlive.org/ui/userdata> .
@prefix userdata: <http://teamwork.topbraidlive.org/ui/userdata#> .
@prefix usingtagger: <http://evn.topbraidlive.org/taggerdoc.www/usingtagger#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix victory: <http://edg.topbraid.solutions/victory/> .
@prefix visual: <http://topbraid.org/visual#> .
@prefix voag: <http://voag.linkedmodel.org/voag/> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix wf: <http://www.w3.org/2005/01/wf/flow#> .
@prefix wot: <http://xmlns.com/wot/0.1/> .
@prefix xhtml: <http://topbraid.org/xhtml#> .
@prefix xlink: <http://www.w3.org/1999/xlink#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://edg.topbraid.solutions/1.0/diagram/lg/pipeline>
  a owl:Ontology ;
  owl:imports <http://debug.topbraidlive.org/1.0/swa> ;
  owl:imports <http://edg.topbraid.solutions/1.0/diagram/lg/library-common> ;
  owl:imports <http://edg.topbraid.solutions/1.0/diagram/lg/library-technical-assets> ;
  owl:imports <http://edg.topbraid.solutions/1.0/diagram/lg/software> ;
  owl:imports <http://edg.topbraid.solutions/1.0/schema/core> ;
  owl:imports <http://edg.topbraid.solutions/1.0/schema/diagrams> ;
  owl:imports <http://edg.topbraid.solutions/1.0/schema/lineage-models> ;
  owl:imports <http://edg.topbraid.solutions/1.0/schema/technical-assets> ;
  owl:imports <http://edg.topbraid.solutions/1.0/spin/jsfunctions> ;
  owl:imports <http://edg.topbraid.solutions/1.0/spin/library> ;
  owl:imports <http://spinrdf.org/spinx> ;
  owl:imports <http://topbraid.org/swa> ;
  owl:imports <http://topbraid.org/teamwork.ui> ;
  owl:versionInfo "Created with TBC" ;
.
edg:BuildJSONforPipelineLineageGram
  a ui:ViewElement ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:breadth ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:reach ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:focusNode ;
      spl:valueType xsd:string ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:graph ;
      spl:valueType rdfs:Resource ;
    ] ;
  ui:prototype """
<ui:group let:dataGraph=\"{= IRI(?graph) }\" let:lineageBreadth=\"{= COALESCE(?breadth, 6) }\" let:lineageReach=\"{= COALESCE(?reach, 3) }\" let:myFocusNode=\"{= IRI(spif:decodeURL(?focusNode)) }\">
    <ui:try>
        <ui:if ui:condition=\"{= !bound(?dataGraph) }\">
            <ui:throw ui:message=\"No data graph provided\"/>
        </ui:if>
        <ui:if ui:condition=\"{= !bound(?myFocusNode) }\">
            <ui:throw ui:message=\"No lineage model specified\"/>
        </ui:if>
        <ui:setContext ui:queryGraph=\"{= ui:graphWithImports(?dataGraph) }\">
            <ui:setContext ui:queryGraph=\"{= ui:unionGraph }\">
                <edg:MakeSingleViewFrameResourceOccurrence edg:resource=\"{= ?myFocusNode }\" edg:viewFrame=\"{= edg:VF_SoftwareFrame }\"/>
                <edg:BuildPipelineSteps arg:focusNode=\"{= ?myFocusNode }\" edg:breadth=\"{= xsd:integer(?lineageBreadth) }\" edg:reach=\"{= xsd:integer(?lineageReach) }\"/>
                <ui:call arg:resource=\"{= ?myFocusNode }\" ui:template=\"{= edg:GetLineageModelSoftwareExecutablesOutputs }\" ui:varName=\"finalStageSoftwareAndDataAssets\">
                    <edg:MakeLineageGramNodeAndLinksForLastSoftwareExecutables arg:focusNode=\"{= ?myFocusNode }\" arg:resultSet=\"{= ?finalStageSoftwareAndDataAssets }\" edg:sourceViewFrame=\"{= edg:VF_TargetFrame }\"/>
                </ui:call>
                <edg:MakeResourceNodesAndLinksForFirstStageSoftwareExecutableInputs/>
                <edg:GenerateJSONforLineageGram arg:diagramType=\"{= edg:DIAGTYPE_UPSTREAM-LINEAGEGRAM }\" arg:focusNode=\"{= ?myFocusNode }\"/>
            </ui:setContext>
        </ui:setContext>
        <edg:DumpTempGraphForLineageGram/>
    </ui:try>
    <ui:catch>
        <swon:Object>
            <swon:Value arg:name=\"exception\" arg:value=\"{= ?exception }\"/>
        </swon:Object>
    </ui:catch>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment """Test with:

http://localhost:8083/tbl/swp?_viewClass=edg:BuildJSONforLineageModelLineageGram&graph=http://tbb.edg.solutions/1.0/lineagemodel/fake-test-data-rh&focusNode=http://tbb.edg.topbraid.solutions/data-asset/RLM_FRY-14A&viewFramesGraph=http://edg.topbraidlive.org/1.0/config/diagrams
""" ;
  rdfs:label "Build JSON pipeline lineagegram" ;
  rdfs:subClassOf edg:LineageGramServices ;
.
edg:BuildJSONforPipelineLinks
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:pipeline ;
      spl:valueType edg:Pipeline ;
    ] ;
.
edg:BuildPipelineSteps
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:breadth ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:offset ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:reach ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:focusNode ;
      spl:valueType rdfs:Resource ;
    ] ;
  ui:prototype """
<ui:group let:myBreadth=\"{= COALESCE(?breadth, 10) }\" let:myOffset=\"{= COALESCE(?offset, 0) }\">
    <ui:call arg:pipeline=\"{= ?focusNode }\" ui:limit=\"{= ?myBreadth }\" ui:offset=\"{= ?myOffset }\" ui:template=\"{= edg:GetPipelineStepsForGivenPipeline }\" ui:varName=\"pipelineSteps\">
        <ui:forEach ui:resultSet=\"{= ?pipelineSteps }\">
            <ui:forEach ui:limit=\"{= ?myBreadth }\" ui:resultSet=\"{#
                    SELECT ?pipelineStep ?softwareDependency
                    WHERE {
                        ?pipelineStep edg:usesSoftwareProgram|edg:usesJob ?softwareDependency .
                    } }\">
                <edg:MakeSingleViewFrameResourceOccurrence edg:resource=\"{= ?softwareDependency }\" edg:viewFrame=\"{= edg:VF_SoftwareFrame }\"/>
                <edg:MakeSingleViewFrameResourceOccurrence edg:resource=\"{= ?pipelineStep }\" edg:viewFrame=\"{= edg:VF_SoftwareFrame }\"/>
                <edg:MakeViewFrameResourceNodeLink edg:dependencyType=\"{= edg:DEPTYPE_USAGE }\" edg:explanation=\"pipelines step uses software or a job\" edg:resource=\"{= ?softwareDependency }\" edg:targetNode=\"{= ?pipelineStep }\" edg:targetViewFrame=\"{= edg:VF_SoftwareFrame }\" edg:viewFrame=\"{= edg:VF_SoftwareFrame }\"/>
            </ui:forEach>
        </ui:forEach>
    </ui:call>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/diagram/lg/library-common> ;
  rdfs:label "Build pipeline steps" ;
  rdfs:subClassOf edg:LineageGramServices ;
.
edg:DetermineTransitiveDependenciesOfPipeline
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:breadth ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:reach ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:focusNode ;
      spl:valueType rdfs:Resource ;
    ] ;
  ui:prototype """
<ui:group let:myBreadth=\"{= COALESCE(?breadth, 10) }\">
    <ui:forEach ui:limit=\"{= ?myBreadth }\" ui:resultSet=\"{#
            SELECT ?pipelineStep ?softwareDependency
            WHERE {
                ?focusNode edg:pipelineStep ?pipelineStep .
                ?pipelineStep edg:usesSoftwareProgram|edg:usesJob ?softwareDependency .
            } }\">
        <edg:MakeViewFrameResourceNodeAndLinks edg:resource=\"{= ?softwareDependency }\" edg:targetNode=\"{= COALESCE(?pipelineStep, ?focusNode) }\" edg:targetViewFrame=\"{= edg:VF_SoftwareFrame }\" edg:viewFrame=\"{= edg:VF_SoftwareFrame }\" edg:viewFrameTier=\"{= ?reach }\"/>
        <ui:if ui:condition=\"{= ?reach &gt; 1 }\">
            <ui:group let:knownDependenciesUpstream=\"{= edg:GetViewFrameResourceNodePropertyValue(edg:hasKnownDependenciesUpstream, ?software, edg:VF_SoftwareFrame) }\">
                <ui:if ui:condition=\"{= (!bound(?hasKnownDependenciesUpstream)) || (!?hasKnownDependenciesUpstream) }\">
                    <edg:DetermineTransitiveDependenciesOfPipeline arg:focusNode=\"{= ?softwareDependency }\" edg:breadth=\"{= ?myBreadth }\" edg:reach=\"{= ?reach - 1 }\"/>
                    <edg:SetViewFrameResourceNodePropertyValue arg:property=\"{= edg:hasKnownDependenciesUpstream }\" arg:value=\"{= true }\" edg:resource=\"{= ?softwareDependency }\" edg:viewFrame=\"{= edg:VF_SoftwareFrame }\"/>
                </ui:if>
            </ui:group>
        </ui:if>
        <ui:elseif ui:condition=\"{= ?reach = 1 }\">
            <ui:forEach ui:resultSet=\"{#
                    SELECT ?upstreamSoftwareDependency
                    WHERE {
                        ?softwareDependency edg:GetSourceSoftwareExecutable ( ?upstreamSoftwareDependency ) .
                    }
                    LIMIT 1 }\">
                <ui:group let:moreUpstream=\"{= edg:GetViewFrameResourceNodePropertyValue(edg:hasMoreUpstream, ?softwareDependency, edg:VF_SoftwareFrame) }\">
                    <ui:if ui:condition=\"{= (!bound(?moreUpstream)) || (!?moreUpstream) }\">
                        <edg:MakeViewFrameDownstreamPlaceholderNodeAndLinks edg:breadth=\"{= ?breadth }\" edg:dependencyType=\"{= edg:DEPTYPE_PROGRAM-IO }\" edg:hasMoreUpstream=\"true\" edg:offset=\"{= 0 }\" edg:outOfReach=\"{= true }\" edg:placeholderType=\"{= edg:PlaceholderForMoreUpstream }\" edg:resource=\"{= ?softwareDependency }\" edg:targetViewFrame=\"{= edg:VF_SoftwareFrame }\" edg:viewFrame=\"{= edg:VF_SoftwareFrame }\" edg:viewFrameTier=\"{= ?reach }\"/>
                        <edg:SetViewFrameResourceNodePropertyValue arg:property=\"{= edg:hasMoreUpstream }\" arg:value=\"{= true }\" edg:resource=\"{= ?softwareDependency }\" edg:viewFrame=\"{= edg:VF_SoftwareFrame }\"/>
                    </ui:if>
                </ui:group>
            </ui:forEach>
        </ui:elseif>
    </ui:forEach>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "Recurses over all dependency constructs of an app return a list of apps. The recursion is limited to a specific reach defined by the parameter 'reach'.  The \"breadth\" parameter limits the exploratiom of fan-in. To explore fan-in an additional API parameter will be needed for offset and the upstream node to apply it to." ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/diagram/lg/library-common> ;
  rdfs:label "Determine transitive dependencies of pipeline" ;
  rdfs:subClassOf edg:LineageGramServices ;
.
edg:GetPipelineStepsForGivenPipeline
  a spin:Template ;
  spin:body [
      a sp:Select ;
      sp:orderBy (
          [
            a sp:Desc ;
            sp:expression [
                sp:varName "stepNumber" ;
              ] ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "pipelineStep" ;
          ]
          [
            sp:varName "stepNumber" ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "pipelineStep" ;
              ] ;
            sp:predicate edg:pipelineStep ;
            sp:subject [
                sp:varName "pipeline" ;
              ] ;
          ]
          [
            a sp:Bind ;
            sp:expression [
                a spl:object ;
                sp:arg1 [
                    sp:varName "pipelineStep" ;
                  ] ;
                sp:arg2 edg:stepNumber ;
              ] ;
            sp:variable [
                sp:varName "stepNumber" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:pipeline ;
      spl:valueType edg:Pipeline ;
      rdfs:comment "pipeline" ;
    ] ;
  spin:private true ;
  rdfs:comment "Returns all the pipeline steps of a pipeline given a pipeline step, including the pipeline step provided." ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/diagram/lg/library-lineageModelAndPipeline> ;
  rdfs:label "Get pipeline steps for given pipeline" ;
  rdfs:subClassOf edg:SelectTemplates ;
.
edg:GetSoftwareExecutablesOfPipelineSteps
  a spin:Template ;
  spin:body [
      a sp:Select ;
      sp:orderBy (
          [
            a sp:Desc ;
            sp:expression [
                sp:varName "stepNumber" ;
              ] ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "pipelineStep" ;
          ]
          [
            sp:varName "stepNumber" ;
          ]
          [
            sp:varName "software" ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "pipelineStep" ;
              ] ;
            sp:predicate edg:pipelineStep ;
            sp:subject [
                sp:varName "pipeline" ;
              ] ;
          ]
          [
            a sp:TriplePath ;
            sp:object [
                sp:varName "software" ;
              ] ;
            sp:path [
                a sp:AltPath ;
                sp:path1 edg:usesSoftwareProgram ;
                sp:path2 edg:usesSoftwareExecutable ;
              ] ;
            sp:subject [
                sp:varName "pipelineStep" ;
              ] ;
          ]
          [
            a sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "stepNumber" ;
                    ] ;
                  sp:predicate edg:stepNumber ;
                  sp:subject [
                      sp:varName "pipelineStep" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:pipeline ;
      spl:valueType edg:Pipeline ;
      rdfs:comment "pipeline" ;
    ] ;
  spin:private true ;
  rdfs:comment "Returns all the pipeline steps of a pipeline given a pipeline step, including the pipeline step provided." ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/diagram/lg/library-lineageModelAndPipeline> ;
  rdfs:label "Get software executanles of pipeline steps" ;
  rdfs:subClassOf edg:SelectTemplates ;
.
edg:Pipeline
  ui:instanceView """
<ui:group ui:id=\"lineagegram-expansion-upstream\" ui:priority=\"{= 10 }\">
    <edg:BuildPipelineSteps arg:focusNode=\"{= ?this }\" edg:breadth=\"{= ?breadth }\" edg:offset=\"{= ?offset }\" edg:reach=\"{= ?reach }\"/>
</ui:group>
"""^^ui:Literal ;
.
