# baseURI: http://edg.topbraid.solutions/1.0/diagram/lg/glossary
# imports: http://edg.topbraid.solutions/1.0/diagram/lg/library-common
# imports: http://edg.topbraid.solutions/1.0/diagram/lg/software
# imports: http://edg.topbraid.solutions/1.0/schema/diagrams
# imports: http://edg.topbraid.solutions/1.0/schema/lineage-models
# imports: http://edg.topbraid.solutions/1.0/schema/technical-assets
# imports: http://edg.topbraid.solutions/1.0/spin/jsfunctions
# imports: http://edg.topbraid.solutions/1.0/spin/library
# imports: http://spinrdf.org/spinx
# imports: http://topbraid.org/swa
# imports: http://topbraid.org/teamwork.ui

@prefix acjob: <http://evn.topbraidlive.org/tagger/acjob#> .
@prefix acpp: <http://topbraid.org/nlp/autoclassifier-preproc#> .
@prefix adminguide: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix autotagger: <http://evn.topbraidlive.org/autotagger#> .
@prefix cfg: <http://server.topbraidlive.org/web/2009/config#> .
@prefix charts: <http://uispin.org/charts#> .
@prefix compliance: <http://topbraid.org/compliance#> .
@prefix composite: <http://www.topbraid.org/2007/05/composite.owl#> .
@prefix conceptmatch: <http://topbraid.org/conceptmatch#> .
@prefix config: <http://server.topbraidlive.org/dynamic/config#> .
@prefix config-importers: <http://edg.topbraidlive.org/config/importers#> .
@prefix contact: <http://www.w3.org/2000/10/swap/pim/contact#> .
@prefix core-soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix corpus: <http://topbraid.org/corpus#> .
@prefix corpusprojects: <http://topbraid.org/corpus-projects#> .
@prefix crosswalk: <http://topbraid.org/crosswalk#> .
@prefix crosswalk.spin: <http://topbraid.org/crosswalk.spin#> .
@prefix crosswalkapp: <http://topbraid.org/swa/crosswalkapp#> .
@prefix crosswalkprojects: <http://teamwork.topbraidlive.org/crosswalkprojects#> .
@prefix css: <http://uispin.org/css#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dashboard: <http://example.org/dashboard#> .
@prefix datagraph: <http://teamwork.topbraidlive.org/datagraph/datagraphprojects#> .
@prefix dataset: <http://teamwork.topbraidlive.org/dataset#> .
@prefix datasetapp: <http://topbraid.org/swa/datasetapp#> .
@prefix datasetviewer: <http://topbraid.org/swa/datasetviewer#> .
@prefix datatype: <http://qudt.org/vocab/datatype/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcam: <http://purl.org/dc/dcam/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix ddl: <http://edg.topbraidlive.org/1.0/importers/ddl#> .
@prefix debug-swa: <http://debug.topbraidlive.org/1.0/swa/> .
@prefix default: <http://uispin.org/default#> .
@prefix defaultapp: <http://topbraid.org/swa/defaultapp#> .
@prefix deployProjectToServer: <http://server.topbraidlive.org/doc/deployProjectToServer#> .
@prefix devguide: <http://evn.topbraidlive.org/evndoc.www/devguide#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix doc: <http://www.w3.org/2000/10/swap/pim/doc#> .
@prefix document: <http://topbraid.org/document#> .
@prefix documents: <http://edg.topbraid.solutions/1.0/shapes/documents#> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix edg: <http://edg.topbraid.solutions/model/> .
@prefix edg-config: <http://edg.ext.topbraidlive.org/schema/config/importers#> .
@prefix edg-importer: <http://edg.topbraidlive.org/importer/> .
@prefix edg-qa: <http://edg.topbraidlive.org/utility/qa/> .
@prefix edg.c: <http://edg.topbraid.solutions/controller/> .
@prefix edg.global: <urn:x-evn-global:> .
@prefix edg.glossary: <http://edg.topbraid.solutions/glossary/> .
@prefix edg.sqoop: <http://edg.topbraid.solutions/model/sqoop/> .
@prefix edg.v: <http://edg.topbraid.solutions/view/> .
@prefix edgproduct: <http://edg.topbraidlive.org/edgproduct#> .
@prefix eeh-lib: <http://www.environmenthub.no/spin/1.0/eeh-lib#> .
@prefix eeh-reportlib: <http://www.environmenthub.no/spin/1.0/eeh-reportlib#> .
@prefix elements: <http://purl.org/dc/elements/1.1/> .
@prefix email: <http://topbraid.org/email#> .
@prefix evn: <http://topbraid.org/evn/evn#> .
@prefix evnAdminIndex: <http://evn.topbraidlive.org/evnAdminIndex#> .
@prefix evnIntro: <http://evn.topbraidlive.org/evndoc.www/evnIntro#> .
@prefix evndoc: <http://evn.topbraidlive.org/evndoc.www/evndoc#> .
@prefix evnimport: <http://evn.topbraidlive.org/uispin/evnimport#> .
@prefix evninstallguide: <http://teamwork.topbraidlive.org/doc/evninstallguide#> .
@prefix evnui: <http://evn.topbraidlive.org/ui#> .
@prefix ex: <http://example.org/> .
@prefix extjs: <http://uispin.com/extjs#> .
@prefix flow: <http://www.w3.org/2005/01/wf/flow#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix formTemplate: <http://teamwork.topbraidlive.org/system/formTemplate#> .
@prefix forms: <http://www.topbraid.org/2007/01/forms.owl#> .
@prefix frbr: <http://purl.org/vocab/frbr/core#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix gettingstarted: <http://evn.topbraidlive.org/evndoc.www/gettingstarted#> .
@prefix glossary: <http://evn.topbraidlive.org/evndoc.www/glossary#> .
@prefix governance: <http://topbraid.org/teamworkgovernance.ui#> .
@prefix gr: <http://purl.org/goodrelations/v1#> .
@prefix graphql: <http://datashapes.org/graphql#> .
@prefix graphql.search: <http://teamwork.topbraidlive.org/graphql.search#> .
@prefix html: <http://uispin.org/html#> .
@prefix imported: <http://topbraid.org/imported#> .
@prefix inference: <http://www.topbraid.org/2007/06/inference.owl#> .
@prefix jdbc: <http://edg.topbraidlive.org/1.0/importers/jdbc#> .
@prefix json: <http://topbraid.org/json#> .
@prefix kennedys: <http://topbraid.org/examples/kennedys#> .
@prefix let: <http://uispin.org/let#> .
@prefix letrs: <http://uispin.org/letrs#> .
@prefix lib-importer: <http://edg.topbraid.solutions/importer/lib#> .
@prefix lineage-transform: <http://edg.topbraid.solutions/transform/importer/lineage#> .
@prefix list: <http://jena.hpl.hp.com/ARQ/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix metadata: <http://topbraid.org/metadata#> .
@prefix o2o: <http://lib.topquadrant.com/owl/srg/o2o#> .
@prefix ontologyprojects: <http://teamwork.topbraidlive.org/ontologyprojects#> .
@prefix ontologyviewer: <http://topbraid.org/swa/ontologyviewer#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix permissionGroupMgmt: <http://server.topbraidlive.org/doc/permissionGroupMgmt#> .
@prefix pg: <http://server.topbraidlive.org/web/2013/permissiongroups#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix provo: <http://www.w3.org/ns/prov#> .
@prefix proxy-lineage: <http://edg.topbraid.solutions/proxy/importer/lineage#> .
@prefix quantity: <http://qudt.org/vocab/quantity/> .
@prefix qudd: <http://qudt.org/schema/datastructure/> .
@prefix quds: <http://qudt.org/schema/datastructure/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt-refdata: <http://qudt.org/vocab/refdata/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix raci: <http://topbraid.org/raci#> .
@prefix raci.spin: <http://topbraid.org/raci.spin#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdm: <http://rdm.topbraidlive.org/rdm/> .
@prefix rdmapp: <http://rdm.topbraidlive.org/rdmapp#> .
@prefix rdmfact: <http://topbraid.org/rdmfact#> .
@prefix rdmprojects: <http://rdm.topbraidlive.org/rdmprojects#> .
@prefix rdmviewer: <http://rdm.topbraidlive.org/rdmviewer#> .
@prefix saf: <http://topbraid.org/saf/> .
@prefix safconfig: <http://topbraid.org/safconfig/> .
@prefix safindex: <http://topbraid.org/safindex#> .
@prefix safm: <http://saf.topbraidlive.org/metaschema/> .
@prefix savedQueries: <http://teamwork.topbraidlive.org/ui/savedQueries#> .
@prefix scheduler: <http://topbraid.org/scheduler#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix search: <http://topbraid.org/search#> .
@prefix search.spin: <http://topbraid.org/search.spin#> .
@prefix server: <http://server.topbraidlive.org/server.ui#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sharepoint: <http://topbraid.org/sharepoint#> .
@prefix sharepoint.spin: <http://topbraid.org/sharepoint.spin#> .
@prefix sioc: <http://rdfs.org/sioc/ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosapp: <http://evn.topbraidlive.org/uiplugins#> .
@prefix skosshapes: <http://topbraid.org/skos.shapes#> .
@prefix skostemplate: <http://topbraid.org/spin/skostemplates#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix smf: <http://topbraid.org/sparqlmotionfunctions#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix soa: <http://www.semanticweb.org/ontologies/2010/01/core-soa.owl#> .
@prefix softwareprojects: <http://teamwork.topbraidlive.org/software/softwareprojects#> .
@prefix solr: <http://topbraid.org/solr#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix sparqlmotionlib-swp: <http://topbraid.org/sparqlmotionlib-swp#> .
@prefix sparqlmotionlib-tbc: <http://topbraid.org/sparqlmotionlib-tbc#> .
@prefix spell: <http://topbraid.org/spellcheckresults#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spin.ui: <http://spinrdf.org/spin.ui#> .
@prefix spinmap: <http://spinrdf.org/spinmap#> .
@prefix spinmapl: <http://topbraid.org/spin/spinmapl#> .
@prefix spinx: <http://spinrdf.org/spinx#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix spl-dynamic-ranges: <http://spinrdf.org/spl-dynamic-ranges#> .
@prefix spr: <http://spinrdf.org/spr#> .
@prefix spra: <http://spinrdf.org/spra#> .
@prefix ss: <http://www.topbraidcomposer.org/owl/2006/08/spreadsheets.owl#> .
@prefix stats: <http://topbraid.org/statistics#> .
@prefix status: <http://topbraid.org/status#> .
@prefix style: <http://uispin.org/style#> .
@prefix svg: <http://uispin.org/svg#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix swaclasses: <http://topbraid.org/swaclasses#> .
@prefix swadoc: <http://topbraid.org/swadoc#> .
@prefix swaeditor: <http://topbraid.org/swaeditor#> .
@prefix swaowl: <http://topbraid.org/swaowl#> .
@prefix swash: <http://topbraid.org/swash#> .
@prefix swashacl: <http://topbraid.org/swashacl#> .
@prefix swauml: <http://topbraid.org/swauml#> .
@prefix swon: <http://uispin.org/swon#> .
@prefix sxml: <http://topbraid.org/sxml#> .
@prefix tables: <http://topbraid.org/tables#> .
@prefix tablesmap: <http://topbraid.org/spin/tablesmap#> .
@prefix tagger: <http://evn.topbraidlive.org/tagger#> .
@prefix taggerprojects: <http://evn.topbraidlive.org/taggerprojects#> .
@prefix taggerspin: <http://evn.topbraidlive.org/taggerspin#> .
@prefix taggerui: <http://evn.topbraidlive.org/taggerui#> .
@prefix task: <http://topbraid.org/task#> .
@prefix tasks: <http://topbraid.org/tasks#> .
@prefix tasks.spin: <http://topbraid.org/tasks.spin#> .
@prefix taxonomies: <http://evn.topbraidlive.org/evnprojects#> .
@prefix tbl: <http://topbraidlive.org/functions#> .
@prefix tbladmin: <http://server.topbraidlive.org/system-applications/tbladmin#> .
@prefix tbladmindoc: <http://server.topbraidlive.org/doc/adminguide#> .
@prefix tblinstallguide: <http://server.topbraidlive.org/doc/tblinstallguide#> .
@prefix tblui: <http://server.topbraidlive.org/tblui#> .
@prefix teaminstallsec: <http://teamwork.topbraidlive.org/doc/teamworkInstallGuideSections#> .
@prefix teamwork: <http://topbraid.org/teamwork#> .
@prefix teamworkAdmin: <http://teamwork.topbraidlive.org/doc/teamworkAdmin#> .
@prefix teamworkconfig: <http://server.topbraidlive.org/system-applications/teamworkconfig#> .
@prefix teamworkconstraints: <http://topbraid.org/teamworkconstraints#> .
@prefix teamworkdashboard: <http://topbraid.org/teamworkdashboard#> .
@prefix teamworknotifications: <http://topbraid.org/teamworknotifications#> .
@prefix teamworkrules: <http://topbraid.org/teamworkrules#> .
@prefix teamworkscripts: <http://topbraid.org/teamworkscripts#> .
@prefix teamworkupdate: <http://teamworkAPI.topbraid.com/teamworkUpdate#> .
@prefix textindex: <http://topbraid.org/textindex#> .
@prefix tika-importer: <http://teamwork.topbraidlive.org/corpus/tika-importer#> .
@prefix tops: <http://www.topbraid.org/tops#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix tosh.ui: <http://topbraid.org/tosh.ui#> .
@prefix tracker: <http://teamwork.topbraidlive.org/ui/tracker#> .
@prefix ui: <http://uispin.org/ui#> .
@prefix uitest: <http://uispin.org/test#> .
@prefix uix: <http://topbraidlive.org/uix#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix userAdminIndex: <http://evn.topbraidlive.org/userAdminIndex#> .
@prefix userIndex: <http://evn.topbraidlive.org/evndoc.www/userIndex#> .
@prefix userdat: <http://teamwork.topbraidlive.org/ui/userdata> .
@prefix userdata: <http://teamwork.topbraidlive.org/ui/userdata#> .
@prefix usingtagger: <http://evn.topbraidlive.org/taggerdoc.www/usingtagger#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix victory: <http://edg.topbraid.solutions/victory/> .
@prefix visual: <http://topbraid.org/visual#> .
@prefix voag: <http://voag.linkedmodel.org/voag/> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix wf: <http://www.w3.org/2005/01/wf/flow#> .
@prefix wot: <http://xmlns.com/wot/0.1/> .
@prefix xhtml: <http://topbraid.org/xhtml#> .
@prefix xlink: <http://www.w3.org/1999/xlink#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://edg.topbraid.solutions/1.0/diagram/lg/glossary>
  a owl:Ontology ;
  owl:imports <http://edg.topbraid.solutions/1.0/diagram/lg/library-common> ;
  owl:imports <http://edg.topbraid.solutions/1.0/diagram/lg/software> ;
  owl:imports <http://edg.topbraid.solutions/1.0/schema/diagrams> ;
  owl:imports <http://edg.topbraid.solutions/1.0/schema/lineage-models> ;
  owl:imports <http://edg.topbraid.solutions/1.0/schema/technical-assets> ;
  owl:imports <http://edg.topbraid.solutions/1.0/spin/jsfunctions> ;
  owl:imports <http://edg.topbraid.solutions/1.0/spin/library> ;
  owl:imports <http://spinrdf.org/spinx> ;
  owl:imports <http://topbraid.org/swa> ;
  owl:imports <http://topbraid.org/teamwork.ui> ;
  owl:versionInfo "Created with TBC" ;
.
edg:BuildGlossaryTermUsageMap
  a ui:ViewElement ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:breadth ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:offset ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:reach ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:viewFramesGraph ;
      spl:valueType xsd:string ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:diagramType ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:focusNode ;
      spl:valueType xsd:string ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:graph ;
      spl:valueType rdfs:Resource ;
    ] ;
  ui:prototype """
<ui:group let:dataGraph=\"{= teamwork:unionGraphForCurrentUser() }\" let:myBreadth=\"{= COALESCE(?breadth, 10) }\" let:myFocusNode=\"{= IRI(spif:decodeURL(?focusNode)) }\" let:myOffset=\"{= COALESCE(?offset, 0) }\" let:myReach=\"{= COALESCE(?reach, 10) }\" let:viewFramesGraph=\"{= IRI(?viewFramesGraph) }\">
    <ui:try>
        <ui:if ui:condition=\"{= !bound(?myFocusNode) }\">
            <ui:throw ui:message=\"Error with focus node: {= ?focusNode }\"/>
        </ui:if>
        <ui:if ui:condition=\"{= !bound(?dataGraph) }\">
            <ui:throw ui:message=\"No data graph provided\"/>
        </ui:if>
        <ui:if ui:condition=\"{= !bound(?focusNode) }\">
            <ui:throw ui:message=\"No focus node for glossary term specified\"/>
        </ui:if>
        <ui:setContext ui:queryGraph=\"{= ui:unionOfGraphs(ui:unionGraph, ui:graphWithImports(?dataGraph), ui:graphWithImports(?myViewFramesGraph)) }\">
            <ui:setContext ui:queryGraph=\"{= ui:unionGraph }\">
                <edg:MakeSingleViewFrameResourceOccurrence edg:resource=\"{= ?myFocusNode }\" edg:viewFrame=\"{= edg:VF_SourceFrame }\"/>
                <!--ui:dumpScope ui:message=\"AAA: BuildJSONdiagramForGlossaryTermUsageMap\"/-->
                <ui:call arg:term=\"{= ?myFocusNode }\" edg:viewFrameStructure=\"{= edg:VFS_LG-ImpactDiagram }\" ui:limit=\"{= ?myBreadth }\" ui:offset=\"{= ?myOffset }\" ui:template=\"{= edg:GetAssetsMappedToGlossaryTerm }\" ui:varName=\"usages\">
                    <!--ui:dumpResultSet ui:message=\"AAA: usages of {= ?myFocusNode }\" ui:resultSet=\"{= ?usages }\"/-->
                    <ui:forEach ui:resultSet=\"{= ?usages }\">
                        <edg:MakeSingleViewFrameResourceOccurrence edg:resource=\"{= ?asset }\" edg:viewFrame=\"{= ?viewFrame }\"/>
                        <edg:MakeViewFrameResourceNodeLink edg:dependencyType=\"{= edg:DEPTYPE_TERM-USAGE }\" edg:resource=\"{= ?myFocusNode }\" edg:targetNode=\"{= ?asset }\" edg:targetViewFrame=\"{= ?viewFrame }\" edg:viewFrame=\"{= edg:VF_SourceFrame }\"/>
                    </ui:forEach>
                </ui:call>
                <edg:GenerateJSONforLineageGram arg:focusNode=\"{= ?myFocusNode }\"/>
            </ui:setContext>
        </ui:setContext>
        <edg:DumpTempGraphForLineageGram/>
    </ui:try>
    <ui:catch>
        <swon:Object>
            <swon:Value arg:name=\"exception\" arg:value=\"{= ?exception }\"/>
        </swon:Object>
    </ui:catch>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "Builds a diagram for a glossary term showing which entities map to it." ;
  rdfs:label "Build Glossary Term usage map" ;
  rdfs:subClassOf swa:Elements ;
.
edg:BuildJSONforGlossaryTermCompositeNode
  a ui:Service ;
  spin:constraint [
      a spl:Argument ;
      spl:optional true ;
      spl:predicate arg:parent ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:node ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:private true ;
  ui:private true ;
  ui:prototype """
<ui:group let:id=\"{= ui:uniqueId() }\" let:ultimateParent=\"{= ?parent }\">
    <ui:group let:requirementsBlockId=\"{= CONCAT(&quot;REQS_&quot;, ?id) }\">
        <ui:call arg:property=\"{= edg:requirement }\" arg:resource=\"{= ?node }\" ui:template=\"{= edg:getPropertyValuesForResource }\" ui:varName=\"dataRequirements\">
            <!--ui:dumpResultSet ui:message=\"AAA: edg:BuildJSONforGlossaryTermCompositeNode\"
  ui:resultSet=\"{= ?dataRequirements }\"/-->
            <ui:if ui:condition=\"{= !spr:isEmpty(?dataRequirements) }\">
                <edg:BuildJSONforLineageGramNode arg:label=\"Requirements\" arg:node=\"{= ?requirementsBlockId }\" arg:parent=\"{= ?node }\"/>
                <ui:forEach ui:resultSet=\"{= ?dataRequirements }\">
                    <edg:BuildJSONforLineageGramNode arg:label=\"{= ?label }\" arg:node=\"{= ?value }\" arg:parent=\"{= ?requirementsBlockId }\"/>
                </ui:forEach>
            </ui:if>
            <edg:BuildJSONforLineageGramNode arg:label=\"{= ui:label(?node) }\" arg:node=\"{= ?node }\" arg:parent=\"{= ?ultimateParent }\"/>
        </ui:call>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/diagram/lg/library-common> ;
  rdfs:label "Build JSON for glossary term composite node" ;
  rdfs:subClassOf edg:DerivationMapServicesForCompositeNodes ;
.
edg:BuildJSONforGlossaryTermUsageGraph
  a ui:ViewElement ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:breadth ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:reach ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:focusNode ;
      spl:valueType xsd:string ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:graph ;
      spl:valueType rdfs:Resource ;
    ] ;
  ui:prototype """
<ui:group let:dataGraph=\"{= IRI(?graph) }\" let:lineageBreadth=\"{= COALESCE(?breadth, 5) }\" let:lineageReach=\"{= COALESCE(?reach, 3) }\" let:myFocusNode=\"{= IRI(spif:decodeURL(?focusNode)) }\">
    <ui:try>
        <ui:if ui:condition=\"{= !bound(?dataGraph) }\">
            <ui:throw ui:message=\"No data graph provided\"/>
        </ui:if>
        <ui:if ui:condition=\"{= !bound(?focusNode) }\">
            <ui:throw ui:message=\"No focus node specified\"/>
        </ui:if>
        <ui:setContext ui:queryGraph=\"{= ui:graphWithImports(?dataGraph) }\">
            <ui:setContext ui:queryGraph=\"{= ui:unionGraph }\">
                <edg:BuildTraceabilityGraphForGlossaryTerm arg:focusNode=\"{= ?myFocusNode }\" edg:breadth=\"{= ?lineageBreadth }\" edg:reach=\"{= ?lineageReach }\" edg:viewFrameStructure=\"{= edg:VFS_LG-GlossaryTerm }\"/>
                <edg:GenerateJSONforLineageGram arg:diagramType=\"{= edg:DIAGTYPE_DOWNSTREAM-TRACEABILITYGRAM }\" arg:focusNode=\"{= ?myFocusNode }\"/>
            </ui:setContext>
        </ui:setContext>
        <edg:DumpTempGraphForLineageGram/>
    </ui:try>
    <ui:catch>
        <swon:Object>
            <swon:Value arg:name=\"exception\" arg:value=\"{= ?exception }\"/>
        </swon:Object>
    </ui:catch>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "Builds a graph showing how a glossary term gets used by databases, datasets and, by inference, aplications in support of different business activities." ;
  rdfs:label "Build JSON for glossary term usage graph" ;
  rdfs:seeAlso edg:BuildGlossaryTermUsageMap ;
  rdfs:subClassOf swa:Elements ;
.
edg:BuildTraceabilityGraphForGlossaryTerm
  a ui:ViewElement ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:breadth ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:reach ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:viewFrameStructure ;
      spl:valueType edg:ViewFramesShape ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:focusNode ;
      spl:valueType rdfs:Resource ;
    ] ;
  ui:prototype """
<ui:group let:myOffset=\"{= COALESCE(?offset, 0) }\">
    <ui:forEach ui:limit=\"{= ?breadth }\" ui:resultSet=\"{#
            SELECT DISTINCT ?dataElement
            WHERE {
                ?dataElement edg:mapsToTerm ?focusNode .
            } }\">
        <edg:MakeViewFrameResourceNodeAndLinks edg:dependencyType=\"{= edg:DEPTYPE_DATA-INPUT }\" edg:resource=\"{= ?focusNode }\" edg:targetNode=\"{= ?dataElement }\" edg:targetViewFrame=\"{= edg:VF_GlossaryTerm-DataElements }\" edg:viewFrame=\"{= edg:VF_GlossaryTerm }\" edg:viewFrameTier=\"{= ?reach }\"/>
        <ui:call arg:resource=\"{= ?dataElement }\" ui:limit=\"{= ?breadth }\" ui:offset=\"{= ?myOffset }\" ui:template=\"{= edg:GetSoftwareExecutableWithDependencyOnDataInput }\" ui:varName=\"firstSoftwareEexcutables\">
            <ui:forEach ui:resultSet=\"{= ?firstSoftwareEexcutables }\">
                <edg:MakeViewFrameResourceNodeAndLinks edg:dependencyType=\"{= edg:DEPTYPE_DATA-INPUT }\" edg:resource=\"{= ?dataElement }\" edg:targetNode=\"{= ?softwareDependent }\" edg:targetViewFrame=\"{= edg:VF_SoftwareFrame }\" edg:viewFrame=\"{= edg:VF_GlossaryTerm-DataElements }\" edg:viewFrameTier=\"{= ?reach }\"/>
                <ui:call arg:software=\"{= ?softwareDependent }\" ui:template=\"{= edg:GetSoftwareExecutableEnterpriseWorkProductOutputs }\" ui:varName=\"outputs\">
                    <edg:MakeLineageGramNodeAndLinksForInformationAssets arg:resource=\"{= ?softwareDependent }\" arg:resultSet=\"{= ?outputs }\" edg:sourceViewFrame=\"{= edg:VF_SoftwareFrame }\" edg:targetViewFrame=\"{= edg:VF_InfoAssetsFrame }\"/>
                </ui:call>
                <edg:DetermineTransitiveDownstreamSoftwareExecutableDependencies arg:traceabilityTemplate=\"{= edg:GetDownstreamSoftwareExecutableDependents }\" edg:activeResource=\"{= ?softwareDependent }\" edg:breadth=\"{= ?breadth }\" edg:offset=\"{= ?myOffset }\" edg:reach=\"{= ?reach }\" edg:viewFrame=\"{= edg:VF_SoftwareFrame }\"/>
            </ui:forEach>
        </ui:call>
    </ui:forEach>
    <!--edg:FinishDownstreamDependencies arg:resource=\"{= ?focusNode }\"
  arg:resultSet=\"{= ?dataElements }\"
  edg:breadth=\"{= ?myBreadth }\"
  edg:offset=\"{= ?myOffset }\"/-->
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "Builds a usage graph for a single glossary term." ;
  rdfs:label "Build traceability graph for glossary term" ;
  rdfs:subClassOf swa:Elements ;
.
edg:DatabaseColumn
  ui:instanceView """
<ui:group ui:id=\"lineagegram-data-provider\" ui:priority=\"{= 10 }\">
    <edg:BuildJSONforLineageGramDataProviderDataService arg:dataProvider=\"{= edg:BuildDownstreamDiagramForResource }\" arg:provider=\"{= edg:DatabaseColumn }\"/>
</ui:group>
"""^^ui:Literal ;
.
edg:DetermineUsageOfGlossaryTerm
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:breadth ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:offset ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:reach ;
      spl:valueType xsd:integer ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:focusNode ;
      spl:valueType rdfs:Resource ;
    ] ;
  ui:prototype """
<ui:group let:myBreadth=\"{= COALESCE(?breadth, 4) }\" let:myOffset=\"{= COALESCE(?offset, 0) }\">
    <ui:call arg:software=\"{= ?focusNode }\" ui:limit=\"{= ?myBreadth }\" ui:offset=\"{= ?myOffset }\" ui:template=\"{= edg:DetermineUsageOfGlossaryTerm }\" ui:varName=\"downstreamUsage\">
        <ui:forEach ui:resultSet=\"{= ?downstreamUsage }\">
            <edg:MakeViewFrameResourceNodeAndLinks edg:resource=\"{= ?focusNode }\" edg:targetNode=\"{= ?software }\" edg:targetViewFrame=\"{= edg:VF_GlossaryFrame }\" edg:viewFrame=\"{= edg:VF_GlossaryFrame }\" edg:viewFrameTier=\"{= ?reach }\"/>
            <!--ui:if ui:condition=\"{= ?reach &gt; 1 }\">
<ui:group let:knownDependenciesDownstream=\"{= edg:GetViewFrameResourceNodePropertyValue(edg:hasKnownDependenciesDownstream, ?softwareDependency, edg:VF_SoftwareFrame) }\">
<ui:if ui:condition=\"{= (!bound(?knownDependenciesDownstream)) || (!?knownDependenciesDownstream) }\">
<edg:DetermineUsageOfGlossaryTerm arg:focusNode=\"{= ?softwareDependency }\"
  edg:breadth=\"{= ?myBreadth }\"
  edg:reach=\"{= ?reach - 1 }\"/>
<edg:SetViewFrameResourceNodePropertyValue arg:property=\"edg:knownDependenciesDownstream\"
   arg:value=\"{= true }\"
   edg:resource=\"{= ?softwareDependency }\"
   edg:viewFrame=\"edg:VF_SoftwareFrame\"/>
</ui:if>
</ui:group>
</ui:if-->
            <!--ui:elseif ui:condition=\"{= ?reach = 1 }\">
<ui:if ui:condition=\"{= spr:rowCount(?upstreamDependencies) &gt; ?myBreadth }\">
<edg:DetermineNeedForDownstreamPlaceholderNodeForSoftwareExecutable arg:resource=\"{= ?softwareDependency }\"

edg:breadth=\"{= ?myBreadth }\"
edg:offset=\"{= ?myOffset }\"/>

</ui:if>
</ui:elseif-->
        </ui:forEach>
        <!--ui:if ui:condition=\"{= (!spr:isEmpty(?downstreamDependencies)) &amp;&amp; (spr:rowCount(?downstreamDependencies) &gt; ?myBreadth) }\">
<edg:DetermineNeedForDownstreamPlaceholderNodeForSoftwareExecutable arg:resource=\"{= ?focusNode }\"
edg:breadth=\"{= ?myBreadth }\"
edg:offset=\"{= ?myOffset }\"/>
</ui:if-->
    </ui:call>
</ui:group>
"""^^ui:Literal ;
  ui:responseType ui:JSON ;
  rdfs:comment "Recurses over all usage paths from a glossary term. The recursion is limited to a specific reach defined by the parameter 'reach'.  The \"breadth\" parameter limits the exploratiom of fan-out. To explore fan-out an additional API parameter will be needed for offset and the downstream node to apply it to." ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/diagram/lg/data-asset> ;
  rdfs:label "Determine usage of glossary term" ;
  rdfs:subClassOf edg:LineageGramServices ;
.
edg:GlossaryTerm
  ui:instanceView """
<ui:group ui:id=\"asset-provenance\" ui:priority=\"{= -10 }\">
    <ui:group let:depictedResourceForFocusNode=\"{= ?this }\" let:myViewFrameStructure=\"{= COALESCE(?viewFrameStructure, edg:VFS_LG-ProvenanceModel) }\">
        <ui:group let:viewFrameForDependent=\"{= edg:getViewFrameForResource(?targetNode, ?myViewFrameStructure) }\" let:viewFrameForDepictedResource=\"{= edg:getViewFrameForResource(?depictedResourceForFocusNode, ?myViewFrameStructure) }\">
            <!--ui:dumpScope ui:message=\"AAA: edg:GlossaryTerm - provenance on {= ?this }\"/-->
            <edg:MakeViewFrameResourceNodeLink arg:property=\"{= ?property }\" edg:dependencyType=\"{= edg:DEPTYPE_TERM-USAGE }\" edg:explanation=\"provenance link\" edg:resource=\"{= ?depictedResourceForFocusNode }\" edg:targetNode=\"{= ?targetNode }\" edg:targetViewFrame=\"{= ?viewFrameForDependent }\" edg:viewFrame=\"{= ?viewFrameForDepictedResource }\"/>
            <edg:DetermineProvenanceForAsset arg:focusNode=\"{= ?this }\" edg:breadth=\"{= ?breadth }\" edg:offset=\"{= ?offset }\" edg:reach=\"{= ?reach - 1 }\" edg:viewFrameStructure=\"{= ?myViewFrameStructure }\"/>
        </ui:group>
    </ui:group>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"derivation-map-composite-node\" ui:priority=\"{= 10 }\">
    <edg:BuildJSONforGlossaryTermCompositeNode arg:node=\"{= ?this }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"derivation-map-data-service-other-node-for-data-element\" ui:priority=\"{= 10 }\">
    <edg:FallbackDerivationMapDataService arg:leftNode=\"{= ?leftNode }\" arg:rightNode=\"{= ?rightNode }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"derivation-map-data-service-other-node\" ui:priority=\"{= 10 }\">
    <edg:FallbackDerivationMapDataService arg:leftNode=\"{= ?leftNode }\" arg:rightNode=\"{= ?rightNode }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"derivation-map-data-service\" ui:priority=\"{= 10 }\">
    <ui:resourceView arg:leftNode=\"{= ?leftNode }\" arg:rightNode=\"{= ?this }\" ui:matchIds=\"derivation-map-data-service-other-node\" ui:resource=\"{= ?leftNode }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"impact-diagram\" ui:priority=\"{= -1 }\">
    <edg:LineageGramTemplate arg:dataProvider=\"{= edg:BuildGlossaryTermUsageMap }\" arg:focusNode=\"{= ?this }\" arg:graph=\"{= ?graph }\" edg:viewFrameStructure=\"{= edg:VFS_LG-ImpactDiagram }\" edg:viewFramesGraph=\"{= ?viewFramesGraph }\">
        <ui:insert ui:into=\"header\">
            <edg:LineageGramHeader arg:title=\"Impact Diagram for Term: {= ui:label(?this) }\"/>
        </ui:insert>
    </edg:LineageGramTemplate>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"usage-diagram\" ui:priority=\"{= 10 }\">
    <edg:GlossaryTermUsageDiagramTemplate arg:dataProvider=\"{= edg:BuildGlossaryTermUsageMap }\" arg:focusNode=\"{= ?this }\" arg:graph=\"{= ?graph }\" edg:viewFrameStructure=\"{= edg:VFS_LG-ImpactDiagram }\" edg:viewFramesGraph=\"{= ?viewFramesGraph }\">
        <ui:insert ui:into=\"header\">
            <edg:LineageGramHeader arg:title=\"Usage Diagram for {= ui:label(spl:object(?this, rdf:type)) }: {= ui:label(?this) }\"/>
        </ui:insert>
    </edg:GlossaryTermUsageDiagramTemplate>
</ui:group>
"""^^ui:Literal ;
.
edg:GlossaryTermUsageDiagramTemplate
  a ui:NodeClass ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:breadth ;
      spl:valueType xsd:string ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:reach ;
      spl:valueType xsd:string ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:viewFrameStructure ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate edg:viewFramesGraph ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:dataProvider ;
      spl:valueType rdfs:Resource ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:depth ;
      spl:valueType xsd:string ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:focusNode ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The focus node of the diagram" ;
    ] ;
  spin:constraint [
      a spl:Argument ;
      spl:predicate arg:graph ;
      spl:valueType rdfs:Resource ;
    ] ;
  ui:headIncludes """
<ui:group>
    <title>Glossary Term Usage LineageGram&trade;</title>
</ui:group>
"""^^ui:Literal ;
  ui:prototype """
<ui:setContext let:headerLabelFunction=\"{= teamwork:NeighborGramHeaderLabelFunction }\" ui:varName=\"swaAppName\" ui:varValue=\"LineageGram\">
    <div class=\"ui-layout-north\" id=\"headerPanel\">
        <ui:insertionPoint ui:pointId=\"header\"/>
    </div>
    <div class=\"ui-layout-center\" id=\"center-pane\">
        <edg:LineageGramPane arg:dataProvider=\"{= ?dataProvider }\" arg:focusNode=\"{= ?focusNode }\" arg:graph=\"{= ?graph }\" edg:breadth=\"{= ?breadth }\" edg:reach=\"{= ?reach }\" edg:viewFrameStructure=\"{= ?viewFrameStructure }\" edg:viewFramesGraph=\"{= ?viewFramesGraph }\"/>
    </div>
    <script>var layout;
$(document).ready(function () {
layout = $('body').layout({
applyDefaultStyles: true,
defaults: {
resizable: true,
slidable: true
},
north: {
closable: false,
pane_spacing: 0,
resizable: false,
slidable: false,
spacing_open: 0,
togglerLength_open: 0
},
center: {},
east: {
size: window.innerWidth * 0.25
}
});
});</script>
</ui:setContext>
"""^^ui:Literal ;
  ui:responseType ui:HTML ;
  rdfs:isDefinedBy <http://edg.topbraid.solutions/1.0/diagram/lg/library-common> ;
  rdfs:subClassOf swa:ScriptElements ;
.
edg:InformationAsset
  ui:instanceView """
<ui:group ui:id=\"derivation-map-data-service-other-node\" ui:priority=\"{= 10 }\">
    <edg:FallbackDerivationMapDataService arg:leftNode=\"{= ?leftNode }\" arg:rightNode=\"{= ?rightNode }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"lineagegram-data-provider\" ui:priority=\"{= 20 }\">
    <edg:BuildJSONforLineageGramDataProviderDataService arg:dataProvider=\"{= edg:BuildDownstreamDiagramForResource }\" arg:provider=\"{= edg:InformationAsset }\"/>
</ui:group>
"""^^ui:Literal ;
  ui:instanceView """
<ui:group ui:id=\"lineagegram-viewframes\" ui:priority=\"{= 20 }\">
    <edg:BuildJSONforLineageGramViewFramesDataService arg:provider=\"{= edg:InformationAsset }\" edg:viewFrameStructure=\"{= edg:VFS_LG-InformationAsset }\"/>
</ui:group>
"""^^ui:Literal ;
.
